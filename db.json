{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/about/index.md-icarus","path":"about/index.md-icarus","modified":1,"renderable":0},{"_id":"source/categories/index.md-fexo","path":"categories/index.md-fexo","modified":1,"renderable":0},{"_id":"source/categories/index.md-icarus","path":"categories/index.md-icarus","modified":1,"renderable":0},{"_id":"source/links/index.md-icraus","path":"links/index.md-icraus","modified":1,"renderable":0},{"_id":"source/tags/index.md-fexo","path":"tags/index.md-fexo","modified":1,"renderable":0},{"_id":"source/tags/index.md-icarus","path":"tags/index.md-icarus","modified":1,"renderable":0},{"_id":"themes/next-v6/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/alipay.png","path":"images/alipay.png","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/wechatpay.png","path":"images/wechatpay.png","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/alipay.jpg","path":"images/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/images/wechatpay.jpg","path":"images/wechatpay.jpg","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/bookmark/bookmark.min.js","path":"lib/bookmark/bookmark.min.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/bookmark/LICENSE","path":"lib/bookmark/LICENSE","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/bookmark/README.md","path":"lib/bookmark/README.md","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/bookmark/index.js","path":"lib/bookmark/index.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/bookmark/package.json","path":"lib/bookmark/package.json","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/fancybox/README.md","path":"lib/fancybox/README.md","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/fancybox/LICENSE","path":"lib/fancybox/LICENSE","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/canvas-nest/LICENSE","path":"lib/canvas-nest/LICENSE","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/canvas-nest/README.md","path":"lib/canvas-nest/README.md","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/canvas-ribbon/LICENSE","path":"lib/canvas-ribbon/LICENSE","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/canvas-ribbon/README.md","path":"lib/canvas-ribbon/README.md","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/needsharebutton/LICENSE","path":"lib/needsharebutton/LICENSE","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/needsharebutton/README.md","path":"lib/needsharebutton/README.md","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/LICENSE","path":"lib/pace/LICENSE","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/README.md","path":"lib/pace/README.md","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/reading_progress/README.md","path":"lib/reading_progress/README.md","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/reading_progress/LICENSE","path":"lib/reading_progress/LICENSE","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/reading_progress/package.json","path":"lib/reading_progress/package.json","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/reading_progress/reading_progress.js","path":"lib/reading_progress/reading_progress.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/reading_progress/reading_progress.min.js","path":"lib/reading_progress/reading_progress.min.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/LICENSE","path":"lib/three/LICENSE","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/README.md","path":"lib/three/README.md","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/gulpfile.js","path":"lib/three/gulpfile.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/package.json","path":"lib/three/package.json","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/yarn.lock","path":"lib/three/yarn.lock","modified":1,"renderable":1},{"_id":"themes/next-v6/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/fancybox/source/jquery.fancybox.min.css","path":"lib/fancybox/source/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/fancybox/source/jquery.fancybox.min.js","path":"lib/fancybox/source/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/lib/Projector.js","path":"lib/three/lib/Projector.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/src/canvas_lines.js","path":"lib/three/src/canvas_lines.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/lib/CanvasRenderer.js","path":"lib/three/lib/CanvasRenderer.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/src/canvas_sphere.js","path":"lib/three/src/canvas_sphere.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/src/three-waves.js","path":"lib/three/src/three-waves.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next-v6/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"46aabe1dcf6fffab6fbf530e3f0740a7bfaa82f4","modified":1533737918000},{"_id":"source/404.html","hash":"8bc2a6504e523b91c0b946d0cb632ca9325a8ef2","modified":1530115780000},{"_id":"source/CNAME","hash":"7df48999d3b7377a1c7d1bd7a59193a4a04a591b","modified":1530115780000},{"_id":"themes/next-v6/.DS_Store","hash":"6eb5048074e5e714d1ec8c1fe9063b7e8b2fc352","modified":1532527568000},{"_id":"themes/next-v6/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1530115780000},{"_id":"themes/next-v6/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1530115780000},{"_id":"themes/next-v6/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1530115780000},{"_id":"themes/next-v6/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1530115780000},{"_id":"themes/next-v6/.stickler.yml","hash":"b7939095038cbdc4883fc10950e163a60a643b43","modified":1530115781000},{"_id":"themes/next-v6/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1530115781000},{"_id":"themes/next-v6/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1530115781000},{"_id":"themes/next-v6/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1530115781000},{"_id":"themes/next-v6/_config.yml","hash":"6ebee7814dbde18d06ad6df3941a17cfda024df7","modified":1533455522000},{"_id":"themes/next-v6/bower.json","hash":"29515e8a97ae28e07a934e38d0fc79af695d14fc","modified":1530115781000},{"_id":"themes/next-v6/README.md","hash":"807c28ad6473b221101251d244aa08e2a61b0d60","modified":1530115781000},{"_id":"themes/next-v6/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1530115781000},{"_id":"themes/next-v6/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1530115781000},{"_id":"themes/next-v6/package.json","hash":"d2eccdf5f241a3b42f2c9a873e3a063e54316ea9","modified":1530115781000},{"_id":"source/404/index.html","hash":"ad151d9fff304a81fcd7685551b994251d55cda5","modified":1530115780000},{"_id":"source/_data/gallery.yaml","hash":"eecd56a425eaf03bfcefdcfe4c8f8659f254c527","modified":1530115780000},{"_id":"source/_data/links.yaml","hash":"14d6a5e589d34d8c0ef52d2efdc054693f81213b","modified":1530115780000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1533738272000},{"_id":"source/_posts/maven(一)构建命令、构件和库.md","hash":"98edf36cb16a908071c17a08031a9077a236e430","modified":1534053654000},{"_id":"source/_posts/maven(三)pom.xml详解.md","hash":"aaee0f3f3231ce676afe7a42f404d42cb5864133","modified":1534053651000},{"_id":"source/_posts/maven(五)聚合和继承.md","hash":"963e32f859923a852a1314c0d6a538f61925be1c","modified":1533810212000},{"_id":"source/_posts/maven(六)多模块项目依赖、插件配置问题.md","hash":"948469e617066dbe05544da39592e63233b461af","modified":1533810223000},{"_id":"source/_posts/maven(二)生命周期和插件.md","hash":"a84c9fe7aa193903b1f6e75fe8dac3be7d1ca551","modified":1534053653000},{"_id":"source/about/index.md","hash":"f52ffbe064d51d69aa93db80152e734c17f04838","modified":1532323139000},{"_id":"source/_posts/maven(四)依赖.md","hash":"2f98e6236bf060c57780a8ae3d5a72db0d030ba5","modified":1534053860000},{"_id":"source/about/index.md-icarus","hash":"2847759c65295fdc47685cc32e10ae30b2f022ae","modified":1530115780000},{"_id":"source/categories/index.md","hash":"cf3a4f8a583ce57e527138a1ab1088d87d3312b1","modified":1531791431000},{"_id":"source/categories/index.md-fexo","hash":"ae1141462825e5fc7ad026ce2b85f35b671b228a","modified":1531750008000},{"_id":"source/category/index.md","hash":"838a0ba6b58f4def2b6b3c0d5841288f801bdb85","modified":1530115780000},{"_id":"source/categories/index.md-icarus","hash":"55bee2cb88da438a2e8b1f29b1d7e954c07a9e60","modified":1530115780000},{"_id":"source/gallery/index.md","hash":"5f60a4e6f4bfc1655997f506912922a922181fd6","modified":1530115780000},{"_id":"source/links/index.md","hash":"61b9e32075695a93a11279e66f439be24dae2ef7","modified":1530115780000},{"_id":"source/link/index.md","hash":"70bd0de52901bac812f76d5510925361a7921d99","modified":1530115780000},{"_id":"source/tag/index.md","hash":"bee4c19d66746750628e1e0ba397e6623a31d70a","modified":1530115780000},{"_id":"source/links/index.md-icraus","hash":"711ad7db6a1f1c254b818660c3ac34b23ed390d4","modified":1530115780000},{"_id":"source/search/index.md","hash":"2b4f04ea1c1db89414393400333e1ada6fbeede4","modified":1530115780000},{"_id":"source/project/index.md","hash":"4d60344688c45be4bbb37b3c0a0980489a77300e","modified":1530115780000},{"_id":"source/timeline/index.md","hash":"33cc943a1eecc75b3143c79259d7ee8b7d0ed4e8","modified":1530115780000},{"_id":"source/tags/index.md","hash":"102a77e2d17a21fe064b200f2028957041c5f7ae","modified":1531791440000},{"_id":"source/tags/index.md-fexo","hash":"5742bfda2f05ed6a6fca513ec4d6ba134476bfc5","modified":1530115780000},{"_id":"source/tags/index.md-icarus","hash":"e999413d6392c34156b5c6e9273f9069f9e6d92d","modified":1530115780000},{"_id":"themes/next-v6/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1530115781000},{"_id":"themes/next-v6/.github/CONTRIBUTING.md","hash":"f846118d7fc68c053df47b24e1f661241645373f","modified":1530115781000},{"_id":"themes/next-v6/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1530115781000},{"_id":"themes/next-v6/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1530115781000},{"_id":"themes/next-v6/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1530115781000},{"_id":"themes/next-v6/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1530115781000},{"_id":"themes/next-v6/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1530115781000},{"_id":"themes/next-v6/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1530115781000},{"_id":"themes/next-v6/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1530115781000},{"_id":"themes/next-v6/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1530115781000},{"_id":"themes/next-v6/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1530115781000},{"_id":"themes/next-v6/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1530115781000},{"_id":"themes/next-v6/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1530115781000},{"_id":"themes/next-v6/docs/MATH.md","hash":"d047b8a3d9aa49b478a33e5a326195d460cb4589","modified":1530115781000},{"_id":"themes/next-v6/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1530115781000},{"_id":"themes/next-v6/layout/.DS_Store","hash":"341fa6e1945e061b8f2afee37fd1e22ddd0ea447","modified":1532574126000},{"_id":"themes/next-v6/layout/_layout.swig","hash":"541c4e65b52e6e5fdd164791267275b2e22de57b","modified":1530115781000},{"_id":"themes/next-v6/layout/archive.swig","hash":"833a2213d31be45a12b8e4e5e609073978bd251b","modified":1530115781000},{"_id":"themes/next-v6/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1530115781000},{"_id":"themes/next-v6/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1530115781000},{"_id":"themes/next-v6/layout/page.swig","hash":"3f9b2444f12251727ebbc28159f02e9e9489742e","modified":1530115781000},{"_id":"themes/next-v6/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1530115781000},{"_id":"themes/next-v6/layout/post.swig","hash":"8e2d079b46076996cc9343213d5bf7da8178d32d","modified":1530115781000},{"_id":"themes/next-v6/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1530115781000},{"_id":"themes/next-v6/languages/de.yml","hash":"1bdc91fdd74f41c2432273e0f469e27613e79962","modified":1530115781000},{"_id":"themes/next-v6/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1530115781000},{"_id":"themes/next-v6/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1530115781000},{"_id":"themes/next-v6/languages/fr.yml","hash":"52e8cfc1984e1fe8235f97983693fe4ef724d002","modified":1530115781000},{"_id":"themes/next-v6/languages/id.yml","hash":"f457487bb96130b7efb7125275e2d26e106c9071","modified":1530115781000},{"_id":"themes/next-v6/languages/it.yml","hash":"d16885be837e99d44c8c004b07b53ac78e443087","modified":1530115781000},{"_id":"themes/next-v6/languages/ja.yml","hash":"567b2b57ffcbea409c897b74b41f82d3bd35d7ac","modified":1530115781000},{"_id":"themes/next-v6/languages/pt-BR.yml","hash":"2ef3d965569d727047b310a2c5dfff15cbc4d653","modified":1530115781000},{"_id":"themes/next-v6/languages/pt.yml","hash":"b50964d3fbee2a2f83be7a2842333556bc971839","modified":1530115781000},{"_id":"themes/next-v6/languages/ko.yml","hash":"65aea531d1e2cbb79d15cec8c4f5c3d615a11fa6","modified":1530115781000},{"_id":"themes/next-v6/languages/nl.yml","hash":"446dd4bc56efbb8bf0b8e7acf1a077b3e7643edf","modified":1530115781000},{"_id":"themes/next-v6/languages/tr.yml","hash":"0664fe016b30be41e6f73e4fc5171d748df09269","modified":1530115781000},{"_id":"themes/next-v6/languages/ru.yml","hash":"056da24924342926cbb7f3cab123e3a116a855e7","modified":1530115781000},{"_id":"themes/next-v6/languages/vi.yml","hash":"d305b5f55aeffc879ca3405cbe660a00f1914255","modified":1530115781000},{"_id":"themes/next-v6/languages/zh-CN.yml","hash":"1fec2556ed509c79801dee2a4f8604ca50f5efcc","modified":1532522264000},{"_id":"themes/next-v6/languages/zh-HK.yml","hash":"4323f8b8ed7a52b6bb0dc938acf58b15eab85abc","modified":1530115781000},{"_id":"themes/next-v6/scripts/helpers.js","hash":"392cda207757d4c055b53492a98f81386379fc4f","modified":1530115781000},{"_id":"themes/next-v6/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1530115781000},{"_id":"themes/next-v6/scripts/merge-configs.js","hash":"ca9845dc76f5710b4c6fba5fe25ff0d2fcf0adaa","modified":1530115781000},{"_id":"themes/next-v6/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1530115781000},{"_id":"themes/next-v6/source/.DS_Store","hash":"86a55544c7ac5fdd1bb730cc2b6e81e5882bf931","modified":1532527637000},{"_id":"themes/next-v6/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1530115781000},{"_id":"themes/next-v6/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1530115781000},{"_id":"themes/next-v6/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1530115781000},{"_id":"themes/next-v6/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530115781000},{"_id":"themes/next-v6/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1530115781000},{"_id":"themes/next-v6/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1530115781000},{"_id":"themes/next-v6/docs/ru/README.md","hash":"712d9a9a557c54dd6638adfb0e1d2bb345b60756","modified":1530115781000},{"_id":"themes/next-v6/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1530115781000},{"_id":"themes/next-v6/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1530115781000},{"_id":"themes/next-v6/docs/zh-CN/CONTRIBUTING.md","hash":"44e4fb7ce2eca20dfa98cdd1700b50d6def4086f","modified":1530115781000},{"_id":"themes/next-v6/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1530115781000},{"_id":"themes/next-v6/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1530115781000},{"_id":"themes/next-v6/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1530115781000},{"_id":"themes/next-v6/docs/zh-CN/MATH.md","hash":"1c7df019737656fdfd8d124c7c045a64ac8a2a8d","modified":1530115781000},{"_id":"themes/next-v6/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1530115781000},{"_id":"themes/next-v6/docs/zh-CN/README.md","hash":"84d349fda6b9973c81a9ad4677db9d9ee1828506","modified":1530115781000},{"_id":"themes/next-v6/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"c1ba919f70efe87a39e6217883e1625af0b2c23c","modified":1530115781000},{"_id":"themes/next-v6/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1530115781000},{"_id":"themes/next-v6/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1530115781000},{"_id":"themes/next-v6/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1530115781000},{"_id":"themes/next-v6/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1530115781000},{"_id":"themes/next-v6/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1530115781000},{"_id":"themes/next-v6/layout/_macro/post-copyright.swig","hash":"d48c5a98a6b7fb9d67979f9f2f77d9991198aa75","modified":1532522189000},{"_id":"themes/next-v6/layout/_macro/reward.swig","hash":"aa620c582143f43ba1cb1a5e59240041a911185b","modified":1530115781000},{"_id":"themes/next-v6/layout/_macro/post.swig","hash":"d231ae3e9663af04042676506ad44619f4b52c68","modified":1530115781000},{"_id":"themes/next-v6/layout/_macro/wechat-subscriber.swig","hash":"fea45ab314b9ea23edab25c2b8620f909d856b1d","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1530115781000},{"_id":"themes/next-v6/layout/_macro/sidebar.swig","hash":"9f18b46cab5c064f7125e06a8f60ee10d76ce86f","modified":1532575704000},{"_id":"themes/next-v6/layout/_partials/.DS_Store","hash":"f14bd2071dd77b61c302c795974d936914d9ca15","modified":1532517640000},{"_id":"themes/next-v6/layout/_partials/comments.swig","hash":"5df32b286a8265ba82a4ef5e1439ff34751545ad","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/footer.swig","hash":"2d7209b15377fa1dac9ac5f759aa6b0506021789","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/.DS_Store","hash":"0f897ec9e1e33de827e5fa642a84480ea1cfe60b","modified":1532574162000},{"_id":"themes/next-v6/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1530115781000},{"_id":"themes/next-v6/layout/_scripts/.DS_Store","hash":"00f872ef9f2e430f63551491abe3cc65ef084f8c","modified":1532517996000},{"_id":"themes/next-v6/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1530115781000},{"_id":"themes/next-v6/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1530115781000},{"_id":"themes/next-v6/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1530115781000},{"_id":"themes/next-v6/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1530115781000},{"_id":"themes/next-v6/scripts/tags/button.js","hash":"5a61c2da25970a4981fbd65f4a57c5e85db4dcda","modified":1530115781000},{"_id":"themes/next-v6/scripts/tags/center-quote.js","hash":"db70a841e7c1708f95ca97b44413b526b267fa9b","modified":1530115781000},{"_id":"themes/next-v6/scripts/tags/exturl.js","hash":"2b3a4dc15dea33972c0b6d46a1483dabbf06fb5b","modified":1530115781000},{"_id":"themes/next-v6/scripts/tags/full-image.js","hash":"a98fc19a90924f2368e1982f8c449cbc09df8439","modified":1530115781000},{"_id":"themes/next-v6/scripts/tags/group-pictures.js","hash":"1b97b1b5364945b8ab3e50813bef84273055234f","modified":1530115781000},{"_id":"themes/next-v6/scripts/tags/label.js","hash":"621004f2836040b12c4e8fef77e62cf22c561297","modified":1530115781000},{"_id":"themes/next-v6/scripts/tags/include-raw.js","hash":"b7600f6b868d8f4f7032126242d9738cd1e6ad71","modified":1530115781000},{"_id":"themes/next-v6/scripts/tags/lazy-image.js","hash":"460e5e1f305847dcd4bcab9da2038a85f0a1c273","modified":1530115781000},{"_id":"themes/next-v6/scripts/tags/note.js","hash":"4975d4433e11161b2e9a5744b7287c2d667b3c76","modified":1530115781000},{"_id":"themes/next-v6/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1530115781000},{"_id":"themes/next-v6/source/css/.DS_Store","hash":"8517da146c3e6736e5523be4fa0f8c7f558bbe48","modified":1532527680000},{"_id":"themes/next-v6/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1530115781000},{"_id":"themes/next-v6/source/lib/.DS_Store","hash":"629545092405328fb6ce6de42d6a547e7c3e7ca7","modified":1532527804000},{"_id":"themes/next-v6/source/js/.DS_Store","hash":"162eb858a39dbdb32e9145245d2c045e626577c0","modified":1532527637000},{"_id":"themes/next-v6/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1530115781000},{"_id":"themes/next-v6/source/images/alipay.png","hash":"5ddc2f99e95df2778b9c90fc334d7eb0dc3d7fd7","modified":1530117667000},{"_id":"themes/next-v6/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1530115781000},{"_id":"themes/next-v6/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1530115781000},{"_id":"themes/next-v6/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1530115781000},{"_id":"themes/next-v6/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1530115781000},{"_id":"themes/next-v6/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1530115781000},{"_id":"themes/next-v6/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1530115781000},{"_id":"themes/next-v6/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1530115781000},{"_id":"themes/next-v6/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1530115781000},{"_id":"themes/next-v6/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1530115781000},{"_id":"themes/next-v6/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1530115781000},{"_id":"themes/next-v6/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1530115781000},{"_id":"themes/next-v6/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1530115781000},{"_id":"themes/next-v6/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1530115781000},{"_id":"themes/next-v6/source/images/favicon.ico","hash":"02d72316696b3b0ba45e9f2d7115ef9af7f8613b","modified":1530109779000},{"_id":"themes/next-v6/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1530115781000},{"_id":"themes/next-v6/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1530115781000},{"_id":"themes/next-v6/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1530115781000},{"_id":"themes/next-v6/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1530115781000},{"_id":"themes/next-v6/source/images/wechatpay.png","hash":"1728552cedd7cd5cbe03268873bae5d3326b8db1","modified":1530117794000},{"_id":"themes/next-v6/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530115781000},{"_id":"themes/next-v6/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530115781000},{"_id":"themes/next-v6/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530115781000},{"_id":"themes/next-v6/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530115781000},{"_id":"themes/next-v6/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530115781000},{"_id":"themes/next-v6/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530115781000},{"_id":"themes/next-v6/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530115781000},{"_id":"themes/next-v6/source/images/alipay.jpg","hash":"fa6267236cca72a00800975da405808392b7ac30","modified":1530115781000},{"_id":"themes/next-v6/source/images/avatar.jpg","hash":"37113c511d35a16fe5c6ba807151ee3e70879b0a","modified":1530109779000},{"_id":"themes/next-v6/source/images/wechatpay.jpg","hash":"35353e157c841bab9e114ce3a26c58436360b59d","modified":1530115781000},{"_id":"themes/next-v6/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1530115781000},{"_id":"themes/next-v6/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/head/head-unique.swig","hash":"cd7e3331a61939c820e0437bf5d815cb0a42fefb","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/header/brand.swig","hash":"b5c9f191c55622d778a1f4fb14008f858b87e8f7","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/header/index.swig","hash":"e76745ff68fc017c250d749880ab67a68a9f2695","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1530115781000},{"_id":"themes/next-v6/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/analytics/busuanzi-counter.swig","hash":"67f0cb55e6702c492e99a9f697827629da036a0c","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/analytics/firestore.swig","hash":"94b26dfbcd1cf2eb87dd9752d58213338926af27","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/analytics/lean-analytics.swig","hash":"cee047575ae324398025423696b760db64d04e6f","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/comments/disqus.swig","hash":"2fbee33a4ccd7c8217c73e85a9a1488170e05629","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/comments/hypercomments.swig","hash":"17a54796f6e03fc834880a58efca45c286e40e40","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/comments/index.swig","hash":"40e3cacbd5fa5f2948d0179eff6dd88053e8648e","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/comments/livere.swig","hash":"6f340d122a9816ccdf4b45b662880a4b2d087671","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/comments/valine.swig","hash":"c0eb6123464d745ac5324ce6deac8ded601f432f","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/comments/youyan.swig","hash":"42f62695029834d45934705c619035733762309e","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/math/mathjax.swig","hash":"011ae6303afacddabc4ddf570fe3dd227569cd4f","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1530115781000},{"_id":"themes/next-v6/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1530115781000},{"_id":"themes/next-v6/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1530115781000},{"_id":"themes/next-v6/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/.DS_Store","hash":"3f4af618235ef333ca027ec38dc81f7ca9696684","modified":1532527631000},{"_id":"themes/next-v6/source/css/_schemes/.DS_Store","hash":"79767b703a43375451579f8f8d8e45985c04d019","modified":1532527686000},{"_id":"themes/next-v6/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1530115781000},{"_id":"themes/next-v6/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1530115781000},{"_id":"themes/next-v6/source/css/_mixins/base.styl","hash":"81ca13d6d0beff8b1a4b542a51e3b0fb68f08efd","modified":1530115781000},{"_id":"themes/next-v6/source/css/_variables/Gemini.styl","hash":"7a2706304465b9e673d5561b715e7c72a238437c","modified":1530115781000},{"_id":"themes/next-v6/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1530115781000},{"_id":"themes/next-v6/source/css/_variables/Pisces.styl","hash":"32392d213f5d05bc26b2dc452f2fc6fea9d44f6d","modified":1530115781000},{"_id":"themes/next-v6/source/css/_variables/base.styl","hash":"cfb03ec629f13883509eac66e561e9dba562333f","modified":1530115781000},{"_id":"themes/next-v6/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1530115781000},{"_id":"themes/next-v6/source/lib/bookmark/.eslintignore","hash":"3d3910611724b7584a29297a3f7132334a3ad091","modified":1530115781000},{"_id":"themes/next-v6/source/lib/bookmark/.eslintrc.js","hash":"76bec2314ec3477b18e357f9992cf42a9524a3f7","modified":1530115781000},{"_id":"themes/next-v6/source/lib/bookmark/.gitignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1530115781000},{"_id":"themes/next-v6/source/lib/bookmark/bookmark.min.js","hash":"9e525329553335c2484f6faf9e933a6bbee9ab6d","modified":1530115781000},{"_id":"themes/next-v6/source/lib/bookmark/LICENSE","hash":"1440355648a72be5b7625fe6fa055b462fcc78b0","modified":1530115781000},{"_id":"themes/next-v6/source/lib/bookmark/README.md","hash":"ecfb09270cf202fb2228e9a79fa970b60be69222","modified":1530115781000},{"_id":"themes/next-v6/source/lib/bookmark/index.js","hash":"5e5cba645a1a4531ccbb4782df2f7a075626393f","modified":1530115781000},{"_id":"themes/next-v6/source/lib/bookmark/package.json","hash":"013ff96fc03cd4ed7b17059af207e53f94953202","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fancybox/.bower.json","hash":"d8bf9cb15d9d91c7ad022ba2954b5b4d326f17f7","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fancybox/README.md","hash":"a40db80eb6386b085ff810fd3e302f12e76b8df7","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fancybox/LICENSE","hash":"8624bcdae55baeef00cd11d5dfcfa60f68710a02","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fastclick/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fastclick/README.md","hash":"a79e7b87a27497922f34e1013d7299f838badc79","modified":1530115781000},{"_id":"themes/next-v6/source/lib/canvas-nest/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1532527809000},{"_id":"themes/next-v6/source/lib/canvas-nest/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1532520776000},{"_id":"themes/next-v6/source/lib/canvas-nest/README.md","hash":"bf7819cbb879bb82ec1097513d8f799df8835e0f","modified":1532520776000},{"_id":"themes/next-v6/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1532520776000},{"_id":"themes/next-v6/source/lib/canvas-ribbon/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1532521116000},{"_id":"themes/next-v6/source/lib/canvas-ribbon/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1532527814000},{"_id":"themes/next-v6/source/lib/canvas-ribbon/README.md","hash":"07e86d67c508a3f974c45ff61cd0760d79bcebc5","modified":1532521116000},{"_id":"themes/next-v6/source/lib/needsharebutton/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1530115781000},{"_id":"themes/next-v6/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1532521116000},{"_id":"themes/next-v6/source/lib/needsharebutton/README.md","hash":"46bb223bdf714a47a1449666f4f70556447786d1","modified":1530115781000},{"_id":"themes/next-v6/source/lib/needsharebutton/needsharebutton.css","hash":"4688ab516edbd7278f0da58d0dc5a3ec73263e89","modified":1530115781000},{"_id":"themes/next-v6/source/lib/needsharebutton/needsharebutton.js","hash":"d55ca3e2f697395fb9b1ac9d9166d23258a85438","modified":1530115781000},{"_id":"themes/next-v6/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1530115781000},{"_id":"themes/next-v6/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1530115781000},{"_id":"themes/next-v6/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1530115781000},{"_id":"themes/next-v6/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1530115781000},{"_id":"themes/next-v6/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/README.md","hash":"33b87ed998d59f117dc329f999a4ffc744b41e79","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1530115781000},{"_id":"themes/next-v6/source/lib/reading_progress/.editorconfig","hash":"7d47ecd70ca58d26af4f69ff1b23034edcf4475e","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1530115781000},{"_id":"themes/next-v6/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1530115781000},{"_id":"themes/next-v6/source/lib/reading_progress/README.md","hash":"9b00c4ce1a739c825df4e51977f7525d2c9f6b81","modified":1530115781000},{"_id":"themes/next-v6/source/lib/reading_progress/.gitignore","hash":"09cde1060b4213a7eee528b54560777d2d3756e8","modified":1530115781000},{"_id":"themes/next-v6/source/lib/reading_progress/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1530115781000},{"_id":"themes/next-v6/source/lib/reading_progress/package.json","hash":"7bcb3787978a0c445b1bd3dfeca6ae6016c98abc","modified":1530115781000},{"_id":"themes/next-v6/source/lib/reading_progress/reading_progress.js","hash":"174678a8e2a24763e3fe8b9c25496fdf6ee0220b","modified":1530115781000},{"_id":"themes/next-v6/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1530115781000},{"_id":"themes/next-v6/source/lib/reading_progress/reading_progress.min.js","hash":"98af8d99819882904f9b1a9254bebf40602e1843","modified":1530115781000},{"_id":"themes/next-v6/source/lib/three/.gitignore","hash":"e691fe9e685cbd50bcd7e138f4ca3503e7b0eaa4","modified":1532520877000},{"_id":"themes/next-v6/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1530115781000},{"_id":"themes/next-v6/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1530115781000},{"_id":"themes/next-v6/source/lib/three/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1532527822000},{"_id":"themes/next-v6/source/lib/three/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1532520877000},{"_id":"themes/next-v6/source/lib/three/README.md","hash":"5096005b6bfa0e554b245c6c1ffe10e7edc8130d","modified":1532520877000},{"_id":"themes/next-v6/source/lib/three/gulpfile.js","hash":"edd1868be72fde796b0b1f3a7a0316b3c896962a","modified":1532520877000},{"_id":"themes/next-v6/source/lib/three/canvas_lines.min.js","hash":"97f0e67570574dc8597c5819970508d4e7f7af25","modified":1532520877000},{"_id":"themes/next-v6/source/lib/three/canvas_sphere.min.js","hash":"333fed4c256c7081e07c7844c097b7970b45b248","modified":1532520877000},{"_id":"themes/next-v6/source/lib/three/package.json","hash":"68c5104de7461d425a5dbe521cea0cf00af289c3","modified":1532520877000},{"_id":"themes/next-v6/source/lib/three/three-waves.min.js","hash":"704e860183acbaaf8de1be65fe5c958e8105f4bf","modified":1532520877000},{"_id":"themes/next-v6/source/js/src/.DS_Store","hash":"13335240d466fac5fc6a1837fe65a6be6b64e519","modified":1532518065000},{"_id":"themes/next-v6/source/lib/three/yarn.lock","hash":"9c71c0a7c033fc709c1e683157b1f12037024694","modified":1532520877000},{"_id":"themes/next-v6/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1530115781000},{"_id":"themes/next-v6/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1530115781000},{"_id":"themes/next-v6/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1530115781000},{"_id":"themes/next-v6/source/js/src/bootstrap.js","hash":"40de94fd18fcbd67a327d63b0d1e242a08aa5404","modified":1530115781000},{"_id":"themes/next-v6/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1530115781000},{"_id":"themes/next-v6/source/js/src/motion.js","hash":"50e57f8acb6924c6999cdcc664ddd3f0730d2061","modified":1530115781000},{"_id":"themes/next-v6/source/js/src/post-details.js","hash":"d1333fb588d4521b4d1e9c69aef06e0ad1bf0b12","modified":1530115781000},{"_id":"themes/next-v6/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1530115781000},{"_id":"themes/next-v6/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1530115781000},{"_id":"themes/next-v6/source/js/src/utils.js","hash":"4284c67ea1435de2acd523f6d48c0d073fd1ad03","modified":1530115781000},{"_id":"themes/next-v6/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1530115781000},{"_id":"themes/next-v6/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Gemini/index.styl","hash":"f362fbc791dafb378807cabbc58abf03e097af6d","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Pisces/_layout.styl","hash":"ba1842dbeb97e46c6c4d2ae0e7a2ca6d610ada67","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fancybox/source/jquery.fancybox.css","hash":"a5913612c237bb7443c6006a386edd775201d423","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fancybox/source/jquery.fancybox.min.css","hash":"84adea69673c392c1d34a5a316e8e5960aa348b5","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fancybox/source/jquery.fancybox.min.js","hash":"b85b75426ff7569d54a1f69689895315e80ed85d","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1530115781000},{"_id":"themes/next-v6/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1530115781000},{"_id":"themes/next-v6/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1530115781000},{"_id":"themes/next-v6/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1530115781000},{"_id":"themes/next-v6/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1530115781000},{"_id":"themes/next-v6/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1530115781000},{"_id":"themes/next-v6/source/lib/three/lib/Projector.js","hash":"1ad16e96cea2a8a9155bb429c83ef9bdd341ce99","modified":1532520877000},{"_id":"themes/next-v6/source/lib/three/src/canvas_lines.js","hash":"650310ff6783671f8ceccf01f840b20d9c87b491","modified":1532520877000},{"_id":"themes/next-v6/source/lib/three/lib/CanvasRenderer.js","hash":"cf8e1ce6e884023ad0d692cf30f399862407fb40","modified":1532520877000},{"_id":"themes/next-v6/source/lib/three/src/canvas_sphere.js","hash":"7614790c67d3e79e3390fe688f6b01afad7e3bb1","modified":1532520877000},{"_id":"themes/next-v6/source/lib/three/src/three-waves.js","hash":"e98e442f14920e9fb8691846dca3a2225d403048","modified":1532520877000},{"_id":"themes/next-v6/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1530115781000},{"_id":"themes/next-v6/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1530115781000},{"_id":"themes/next-v6/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1530115781000},{"_id":"themes/next-v6/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-title.styl","hash":"c0ac49fadd33ca4a9a0a04d5ff2ac6560d0ecd9e","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/post/post.styl","hash":"8bf095377d28881f63a30bd7db97526829103bf2","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/tags/full-image.styl","hash":"5d15cc8bbefe44c77a9b9f96bf04a6033a4b35b8","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1530115781000},{"_id":"themes/next-v6/source/css/_common/components/third-party/third-party.styl","hash":"1c06be422bc41fd35e5c7948cdea2c09961207f6","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1530115781000},{"_id":"themes/next-v6/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fancybox/source/jquery.fancybox.js","hash":"fec45d19179030b8f43ebd0eabc5467892c14136","modified":1530115781000},{"_id":"themes/next-v6/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"fec45d19179030b8f43ebd0eabc5467892c14136","modified":1530115781000},{"_id":"themes/next-v6/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1530115781000},{"_id":"themes/next-v6/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1532520877000}],"Category":[{"name":"工具学习","_id":"cjkqg7nqs0005dfzl7qgt57a6"},{"name":"maven","parent":"cjkqg7nqs0005dfzl7qgt57a6","_id":"cjkqg7nr8000ldfzl3cbpdg9y"}],"Data":[],"Page":[{"_content":"<script type=\"text/javascript\"\n        src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\"\n        homePageUrl=\"http://yangyuanming.com\"\n        homePageName=\"回到我的主页\">\n</script>","source":"404.html","raw":"<script type=\"text/javascript\"\n        src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\"\n        homePageUrl=\"http://yangyuanming.com\"\n        homePageName=\"回到我的主页\">\n</script>","date":"2018-06-27T16:09:40.000Z","updated":"2018-06-27T16:09:40.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cjkqg7no90000dfzlrzfkovuf","content":"<script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://yangyuanming.com\" homepagename=\"回到我的主页\">\n</script>","site":{"data":{}},"excerpt":"","more":"<script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://yangyuanming.com\" homepagename=\"回到我的主页\">\n</script>"},{"_content":"<script type=\"text/javascript\"\n        src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\"\n        homePageUrl=\"https://icircles.top\"\n        homePageName=\"回到我的主页\">\n</script>","source":"404/index.html","raw":"<script type=\"text/javascript\"\n        src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\"\n        homePageUrl=\"https://icircles.top\"\n        homePageName=\"回到我的主页\">\n</script>","date":"2018-06-27T16:09:40.000Z","updated":"2018-06-27T16:09:40.000Z","path":"404/index.html","title":"","comments":1,"layout":"page","_id":"cjkqg7nqp0002dfzlyqoelqd9","content":"<script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homepageurl=\"https://icircles.top\" homepagename=\"回到我的主页\">\n</script>","site":{"data":{}},"excerpt":"","more":"<script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homepageurl=\"https://icircles.top\" homepagename=\"回到我的主页\">\n</script>"},{"title":"关于","layout":"about","comments":1,"_content":"> IMIS,GDUT\n> 后台开发，Java Web\n> 熟悉ssm框架\n\n\n","source":"about/index.md","raw":"---\ntitle: 关于\nlayout: about\ncomments: true\n---\n> IMIS,GDUT\n> 后台开发，Java Web\n> 熟悉ssm框架\n\n\n","date":"2018-07-23T05:18:59.000Z","updated":"2018-07-23T05:18:59.000Z","path":"about/index.html","_id":"cjkqg7nqr0004dfzlxn8w05l1","content":"<blockquote>\n<p>IMIS,GDUT<br>后台开发，Java Web<br>熟悉ssm框架</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>IMIS,GDUT<br>后台开发，Java Web<br>熟悉ssm框架</p>\n</blockquote>\n"},{"title":"图库","date":"2018-06-27T16:09:40.000Z","layout":"gallery","_content":"","source":"gallery/index.md","raw":"---\ntitle: 图库\ndate:\nlayout: gallery\n---","updated":"2018-06-27T16:09:40.000Z","path":"gallery/index.html","comments":1,"_id":"cjkqg7nqv0008dfzl559x4w0y","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2018-04-29T13:25:44.000Z","comments":0,"type":"categories","_content":"\n\n","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-04-29 21:25:44\ncomments: false\ntype: \"categories\"\n---\n\n\n","updated":"2018-07-17T01:37:11.000Z","path":"categories/index.html","layout":"page","_id":"cjkqg7nqy000adfzl9g09dodw","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"link","layout":"link","comments":0,"_content":"","source":"link/index.md","raw":"---\ntitle: link\nlayout: link\ncomments: false\n---","date":"2018-06-27T16:09:40.000Z","updated":"2018-06-27T16:09:40.000Z","path":"link/index.html","_id":"cjkqg7nr2000edfzlj6cepk0a","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tag","layout":"tag","comments":0,"_content":"","source":"tag/index.md","raw":"---\ntitle: tag\nlayout: tag\ncomments: false\n---","date":"2018-06-27T16:09:40.000Z","updated":"2018-06-27T16:09:40.000Z","path":"tag/index.html","_id":"cjkqg7nr5000gdfzl1q6c2vbi","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Links","date":"2018-04-15T02:45:00.000Z","_content":"","source":"links/index.md","raw":"---\ntitle: Links\ndate: 2018-04-15 10:45:00\n---","updated":"2018-06-27T16:09:40.000Z","path":"links/index.html","comments":1,"layout":"page","_id":"cjkqg7nr6000idfzl4v4g4z63","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"category","layout":"category","comments":0,"_content":"","source":"category/index.md","raw":"---\ntitle: category\nlayout: category\ncomments: false\n---","date":"2018-06-27T16:09:40.000Z","updated":"2018-06-27T16:09:40.000Z","path":"category/index.html","_id":"cjkqg7nr7000kdfzltjemsgsl","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"search","layout":"search","comments":0,"_content":"","source":"search/index.md","raw":"---\ntitle: search\nlayout: search\ncomments: false\n---","date":"2018-06-27T16:09:40.000Z","updated":"2018-06-27T16:09:40.000Z","path":"search/index.html","_id":"cjkqg7nr8000mdfzl7qb2671m","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"project","layout":"project","comments":0,"_content":"","source":"project/index.md","raw":"---\ntitle: project\nlayout: project\ncomments: false\n---","date":"2018-06-27T16:09:40.000Z","updated":"2018-06-27T16:09:40.000Z","path":"project/index.html","_id":"cjkqg7nra000odfzl7n58zhfw","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"归档","date":"2018-06-27T16:09:40.000Z","layout":"timeline","_content":"","source":"timeline/index.md","raw":"---\ntitle: 归档\ndate:\nlayout: timeline\n---\n","updated":"2018-06-27T16:09:40.000Z","path":"timeline/index.html","comments":1,"_id":"cjkqg7o0d001rdfzl1v6ba0a1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2018-04-29T13:23:30.000Z","comments":0,"type":"tags","_content":"\n\n","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-04-29 21:23:30\ncomments: false\ntype: \"tags\"\n---\n\n\n","updated":"2018-07-17T01:37:20.000Z","path":"tags/index.html","layout":"page","_id":"cjkqg7o0f001sdfzll9g0q0yv","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"maven(一):构建命令、构件和库","comment":true,"date":"2018-07-22T03:42:00.000Z","_content":"\n## maven常用构建命令\n1. 查看maven版本：`mvn -v`\n2. 编译：`mvn compile`\n3. 打包：`mvn package`  \n<!--more-->\n4. 测试：`mvn test`\n5. 删除target目录：`mvn clean`\n6. 安装jar包到本地仓库：`mvn install` \n7. 自动建立目录结构的两种方式：\n\n* `mvn archetype:generate` 按指示输入信息 \n* `mvn archetype:generate` \n\n```\n-DgroupId=网址+项目名  \n-DartifactId=项目名-模块名  \n-Dversion=版本号  \n-Dpackage=代码包名\n```\n## 构件、仓库、镜像仓库\n\n### 构件\n#### 定义\n\n* 在Maven中，任何依赖(jar包,tomcat等)、插件，或构建的输出都可成为构件。\n\n* Maven在某个统一的位置存储所有项目的共享的构件，这个统一的位置，我们就称之为仓库。（仓库就是存放依赖和插件的地方）\n\n* 任何的构件都有唯一的坐标，Maven根据这个坐标定义了构件在仓库中的唯一存储路径。\n* 坐标的组成：\n    * `groupId` 当前Maven构件隶属的项目名。实际开发中，项目往往会模块化开发，如spring-core,spring-aop等，他们都是Spring项目下不同的模块。命名方式与Java包名类似，通常是项目名+域名的反向书写。(必须)\n    * `artifactId`：隶属项目中的模块名。(必须)\n    * `version`：当前版本。(必须)\n    * `packaging`：打包方式，如jar,war... 。默认为jar(必须)\n    * `classifier`：帮助定义构建输出的一些附属构件。如spring-core.jar，还生成有文档javadoc.jar，源码sources.jar。\n    \n#### Maven构件在仓库中的存储路径\n* 基于groupId准备路径，将句点分隔符转成路径分隔符，就是将  \".\"  转换成 \"/\" ; example： org.testng --->org/testng\n\n* 基于artifactId准备路径，将artifactId连接到后面：org/testng/testng\n\n* 使用version准备路径，将version连接到后面：org/testng/testng/5.8\n\n* 将artifactId于version以分隔符连字号连接到后面：org/testng/testng/5.8/tesng-5.8\n\n* 判断如果构件有classifier，就要在 第4项 后增加 分隔符连字号 再加上 classifier，org/testng/testng/5.8/tesng-5.8-jdk5\n\n* 检查构件的extension，如果extension存在，则加上句点分隔符和extension，而extension是由packing决定的，org/testng/testng/5.8/tesng-5.8-jdk5.jar \n\n#### 特性    \n* 构件具有依赖传递。例如：项目依赖构件A，而构件A又依赖B，Maven会将A和B都视为项目的依赖。\n* 依赖之间存在版本冲突时，Maven会依据 “短路优先” 原则加载构件。如果引用的路径长度相同时，遵循“声明优先”的原则。此外，我们也可以在POM.XML中，使用<exclusions></exclusions>显式排除某个版本的依赖，以确保项目能够运行。\n    * 项目依赖构件A和B，构件A → C → D(version:1.0.0)，构件B → D(version:1.1.0)，此时，Maven会优先解析加载D(version:1.1.0)。\n    * 项目依赖构件A和B，构件A → D(version:1.0.0)， 构件B → D(version:1.1.0)，此时，Maven会优先解析加载D(version:1.0.0)。\n* 构件的依赖范围。Maven在项目的构建过程中，会编译三套classpath，分别对应：编译期，运行期，测试期。而依赖范围，就是为构件指定它可以作用于哪套classpath。\n       \n### 仓库(repository)\n分为本地仓库和远程仓库。先去本地仓库查询构件，如果没有就去远程仓库下载。\n\n> maven提供了一个默认的全球中央仓库，解压lib/maven-model-builder-version.jar，可以发现pom-4.0.0.xml在org/apache/maven/model下,pom-4.0.0.xml中配置了该仓库，所有项目的pom.xml都会继承该xml,默认就使用了该全球中央仓库。用户可以在pom.xml中自定义远程仓库。\n\n**中央仓库配置如下：**\n\n```xml\n<repository>\n      <id>central</id>\n      <name>Central Repository</name>\n      <url>https://repo.maven.apache.org/maven2</url>\n      <layout>default</layout>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n</repository>\n```\n### 镜像仓库\n配置远程仓库的镜像，所有针对原仓库的访问将转到镜像仓库，原仓库的url设置无效。\n\n* conf/settings.xml中配置镜像仓库，镜像可以有多个。\n\n* mirror的mirrorOf不能和任何一个mirror的id相同。  \n\n* mirrorOf配置的是该镜像所匹配的远程仓库(id)。拦截对应的远程仓库，使所有针对原仓库的访问将转到镜像仓库。\n\n* mirrorOf可以配置多个值，用逗号隔开\n\n> 默认是没有配置mirror的，为了加速构件和插件的下载速度，我配置了一个阿里云的mirror，mirrorOf配置的是central，则id是central的仓库(中央仓库)将会转到阿里云的镜像下载构件，原仓库的url设置将失效。\n\n```xml\n<mirror>\n        <id>nexus-aliyun</id>\n        <mirrorOf>central</mirrorOf>\n        <name>Nexus aliyun</name>\n        <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n</mirror>\n```\n\n* mirrorOf的值设置\n\n    *  **rep1**:代表这个镜像仅仅针对rep1这个库。如果存在多个镜像的mirrorOf值都包含rep1，则按顺序匹配。\n\n    * **\\***:代表匹配所有的库。注意maven会优先匹配mirrorOf值与仓库id完全相同的镜像。例如id为rep1的仓库会优先匹配mirrorOf也为rep1的镜像，如果没有才会匹配mirrorOf为*的镜像。\n    * **\\*,!rep1**:匹配所有的库，除了rep1 \n\n    * **external:\\***:代表匹配任意不在localhost上的仓库，或不是基于文件的仓库。这个主要是看repository中的url判断的。\n\n### 更改本地仓库位置\n\n> maven下载的构件默认放在~/.m2/repository下面，其中~代表用户目录。可以在conf/settings.xml中自定义本地仓库的位置。\n\n* 从文档注释中复制localRepository标签，粘贴，填入自定义目录\n\n```xml\n<localRepository>/Users/yuanming/maven_repo</localRepository>\n```\n\n* 备份settings.xml到maven_repo文件夹(自定义仓库文件夹)，在IDE中设置settings file的路径为备份的settings.xml的路径。以后更新maven，不用重新配置settings.xml。\n\n## 参考资料\n\n>**易枫**,[Maven之构件](https://www.cnblogs.com/Maple-leaves/p/5785885.html)\n>**chengfangjunmy**,[Maven](https://blog.csdn.net/chengfangjunmy/article/details/61192021)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/maven(一)构建命令、构件和库.md","raw":"---\ntitle: maven(一):构建命令、构件和库\ncomment: true\ntags:\n  - maven\n  - maven构建命令\n  - maven库\ncategories:\n  - 工具学习\n  - maven\ndate: 2018-07-22 11:42:00\n---\n\n## maven常用构建命令\n1. 查看maven版本：`mvn -v`\n2. 编译：`mvn compile`\n3. 打包：`mvn package`  \n<!--more-->\n4. 测试：`mvn test`\n5. 删除target目录：`mvn clean`\n6. 安装jar包到本地仓库：`mvn install` \n7. 自动建立目录结构的两种方式：\n\n* `mvn archetype:generate` 按指示输入信息 \n* `mvn archetype:generate` \n\n```\n-DgroupId=网址+项目名  \n-DartifactId=项目名-模块名  \n-Dversion=版本号  \n-Dpackage=代码包名\n```\n## 构件、仓库、镜像仓库\n\n### 构件\n#### 定义\n\n* 在Maven中，任何依赖(jar包,tomcat等)、插件，或构建的输出都可成为构件。\n\n* Maven在某个统一的位置存储所有项目的共享的构件，这个统一的位置，我们就称之为仓库。（仓库就是存放依赖和插件的地方）\n\n* 任何的构件都有唯一的坐标，Maven根据这个坐标定义了构件在仓库中的唯一存储路径。\n* 坐标的组成：\n    * `groupId` 当前Maven构件隶属的项目名。实际开发中，项目往往会模块化开发，如spring-core,spring-aop等，他们都是Spring项目下不同的模块。命名方式与Java包名类似，通常是项目名+域名的反向书写。(必须)\n    * `artifactId`：隶属项目中的模块名。(必须)\n    * `version`：当前版本。(必须)\n    * `packaging`：打包方式，如jar,war... 。默认为jar(必须)\n    * `classifier`：帮助定义构建输出的一些附属构件。如spring-core.jar，还生成有文档javadoc.jar，源码sources.jar。\n    \n#### Maven构件在仓库中的存储路径\n* 基于groupId准备路径，将句点分隔符转成路径分隔符，就是将  \".\"  转换成 \"/\" ; example： org.testng --->org/testng\n\n* 基于artifactId准备路径，将artifactId连接到后面：org/testng/testng\n\n* 使用version准备路径，将version连接到后面：org/testng/testng/5.8\n\n* 将artifactId于version以分隔符连字号连接到后面：org/testng/testng/5.8/tesng-5.8\n\n* 判断如果构件有classifier，就要在 第4项 后增加 分隔符连字号 再加上 classifier，org/testng/testng/5.8/tesng-5.8-jdk5\n\n* 检查构件的extension，如果extension存在，则加上句点分隔符和extension，而extension是由packing决定的，org/testng/testng/5.8/tesng-5.8-jdk5.jar \n\n#### 特性    \n* 构件具有依赖传递。例如：项目依赖构件A，而构件A又依赖B，Maven会将A和B都视为项目的依赖。\n* 依赖之间存在版本冲突时，Maven会依据 “短路优先” 原则加载构件。如果引用的路径长度相同时，遵循“声明优先”的原则。此外，我们也可以在POM.XML中，使用<exclusions></exclusions>显式排除某个版本的依赖，以确保项目能够运行。\n    * 项目依赖构件A和B，构件A → C → D(version:1.0.0)，构件B → D(version:1.1.0)，此时，Maven会优先解析加载D(version:1.1.0)。\n    * 项目依赖构件A和B，构件A → D(version:1.0.0)， 构件B → D(version:1.1.0)，此时，Maven会优先解析加载D(version:1.0.0)。\n* 构件的依赖范围。Maven在项目的构建过程中，会编译三套classpath，分别对应：编译期，运行期，测试期。而依赖范围，就是为构件指定它可以作用于哪套classpath。\n       \n### 仓库(repository)\n分为本地仓库和远程仓库。先去本地仓库查询构件，如果没有就去远程仓库下载。\n\n> maven提供了一个默认的全球中央仓库，解压lib/maven-model-builder-version.jar，可以发现pom-4.0.0.xml在org/apache/maven/model下,pom-4.0.0.xml中配置了该仓库，所有项目的pom.xml都会继承该xml,默认就使用了该全球中央仓库。用户可以在pom.xml中自定义远程仓库。\n\n**中央仓库配置如下：**\n\n```xml\n<repository>\n      <id>central</id>\n      <name>Central Repository</name>\n      <url>https://repo.maven.apache.org/maven2</url>\n      <layout>default</layout>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n</repository>\n```\n### 镜像仓库\n配置远程仓库的镜像，所有针对原仓库的访问将转到镜像仓库，原仓库的url设置无效。\n\n* conf/settings.xml中配置镜像仓库，镜像可以有多个。\n\n* mirror的mirrorOf不能和任何一个mirror的id相同。  \n\n* mirrorOf配置的是该镜像所匹配的远程仓库(id)。拦截对应的远程仓库，使所有针对原仓库的访问将转到镜像仓库。\n\n* mirrorOf可以配置多个值，用逗号隔开\n\n> 默认是没有配置mirror的，为了加速构件和插件的下载速度，我配置了一个阿里云的mirror，mirrorOf配置的是central，则id是central的仓库(中央仓库)将会转到阿里云的镜像下载构件，原仓库的url设置将失效。\n\n```xml\n<mirror>\n        <id>nexus-aliyun</id>\n        <mirrorOf>central</mirrorOf>\n        <name>Nexus aliyun</name>\n        <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n</mirror>\n```\n\n* mirrorOf的值设置\n\n    *  **rep1**:代表这个镜像仅仅针对rep1这个库。如果存在多个镜像的mirrorOf值都包含rep1，则按顺序匹配。\n\n    * **\\***:代表匹配所有的库。注意maven会优先匹配mirrorOf值与仓库id完全相同的镜像。例如id为rep1的仓库会优先匹配mirrorOf也为rep1的镜像，如果没有才会匹配mirrorOf为*的镜像。\n    * **\\*,!rep1**:匹配所有的库，除了rep1 \n\n    * **external:\\***:代表匹配任意不在localhost上的仓库，或不是基于文件的仓库。这个主要是看repository中的url判断的。\n\n### 更改本地仓库位置\n\n> maven下载的构件默认放在~/.m2/repository下面，其中~代表用户目录。可以在conf/settings.xml中自定义本地仓库的位置。\n\n* 从文档注释中复制localRepository标签，粘贴，填入自定义目录\n\n```xml\n<localRepository>/Users/yuanming/maven_repo</localRepository>\n```\n\n* 备份settings.xml到maven_repo文件夹(自定义仓库文件夹)，在IDE中设置settings file的路径为备份的settings.xml的路径。以后更新maven，不用重新配置settings.xml。\n\n## 参考资料\n\n>**易枫**,[Maven之构件](https://www.cnblogs.com/Maple-leaves/p/5785885.html)\n>**chengfangjunmy**,[Maven](https://blog.csdn.net/chengfangjunmy/article/details/61192021)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"maven(一)构建命令、构件和库","published":1,"updated":"2018-08-12T06:00:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkqg7nql0001dfzl7tvl6kp1","content":"<h2 id=\"maven常用构建命令\"><a href=\"#maven常用构建命令\" class=\"headerlink\" title=\"maven常用构建命令\"></a>maven常用构建命令</h2><ol>\n<li>查看maven版本：<code>mvn -v</code></li>\n<li>编译：<code>mvn compile</code></li>\n<li>打包：<code>mvn package</code>  <a id=\"more\"></a></li>\n<li>测试：<code>mvn test</code></li>\n<li>删除target目录：<code>mvn clean</code></li>\n<li>安装jar包到本地仓库：<code>mvn install</code> </li>\n<li>自动建立目录结构的两种方式：</li>\n</ol>\n<ul>\n<li><code>mvn archetype:generate</code> 按指示输入信息 </li>\n<li><code>mvn archetype:generate</code> </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-DgroupId=网址+项目名  </span><br><span class=\"line\">-DartifactId=项目名-模块名  </span><br><span class=\"line\">-Dversion=版本号  </span><br><span class=\"line\">-Dpackage=代码包名</span><br></pre></td></tr></table></figure>\n<h2 id=\"构件、仓库、镜像仓库\"><a href=\"#构件、仓库、镜像仓库\" class=\"headerlink\" title=\"构件、仓库、镜像仓库\"></a>构件、仓库、镜像仓库</h2><h3 id=\"构件\"><a href=\"#构件\" class=\"headerlink\" title=\"构件\"></a>构件</h3><h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><ul>\n<li><p>在Maven中，任何依赖(jar包,tomcat等)、插件，或构建的输出都可成为构件。</p>\n</li>\n<li><p>Maven在某个统一的位置存储所有项目的共享的构件，这个统一的位置，我们就称之为仓库。（仓库就是存放依赖和插件的地方）</p>\n</li>\n<li><p>任何的构件都有唯一的坐标，Maven根据这个坐标定义了构件在仓库中的唯一存储路径。</p>\n</li>\n<li>坐标的组成：<ul>\n<li><code>groupId</code> 当前Maven构件隶属的项目名。实际开发中，项目往往会模块化开发，如spring-core,spring-aop等，他们都是Spring项目下不同的模块。命名方式与Java包名类似，通常是项目名+域名的反向书写。(必须)</li>\n<li><code>artifactId</code>：隶属项目中的模块名。(必须)</li>\n<li><code>version</code>：当前版本。(必须)</li>\n<li><code>packaging</code>：打包方式，如jar,war… 。默认为jar(必须)</li>\n<li><code>classifier</code>：帮助定义构建输出的一些附属构件。如spring-core.jar，还生成有文档javadoc.jar，源码sources.jar。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Maven构件在仓库中的存储路径\"><a href=\"#Maven构件在仓库中的存储路径\" class=\"headerlink\" title=\"Maven构件在仓库中的存储路径\"></a>Maven构件在仓库中的存储路径</h4><ul>\n<li><p>基于groupId准备路径，将句点分隔符转成路径分隔符，就是将  “.”  转换成 “/“ ; example： org.testng —&gt;org/testng</p>\n</li>\n<li><p>基于artifactId准备路径，将artifactId连接到后面：org/testng/testng</p>\n</li>\n<li><p>使用version准备路径，将version连接到后面：org/testng/testng/5.8</p>\n</li>\n<li><p>将artifactId于version以分隔符连字号连接到后面：org/testng/testng/5.8/tesng-5.8</p>\n</li>\n<li><p>判断如果构件有classifier，就要在 第4项 后增加 分隔符连字号 再加上 classifier，org/testng/testng/5.8/tesng-5.8-jdk5</p>\n</li>\n<li><p>检查构件的extension，如果extension存在，则加上句点分隔符和extension，而extension是由packing决定的，org/testng/testng/5.8/tesng-5.8-jdk5.jar </p>\n</li>\n</ul>\n<h4 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h4><ul>\n<li>构件具有依赖传递。例如：项目依赖构件A，而构件A又依赖B，Maven会将A和B都视为项目的依赖。</li>\n<li>依赖之间存在版本冲突时，Maven会依据 “短路优先” 原则加载构件。如果引用的路径长度相同时，遵循“声明优先”的原则。此外，我们也可以在POM.XML中，使用<exclusions></exclusions>显式排除某个版本的依赖，以确保项目能够运行。<ul>\n<li>项目依赖构件A和B，构件A → C → D(version:1.0.0)，构件B → D(version:1.1.0)，此时，Maven会优先解析加载D(version:1.1.0)。</li>\n<li>项目依赖构件A和B，构件A → D(version:1.0.0)， 构件B → D(version:1.1.0)，此时，Maven会优先解析加载D(version:1.0.0)。</li>\n</ul>\n</li>\n<li>构件的依赖范围。Maven在项目的构建过程中，会编译三套classpath，分别对应：编译期，运行期，测试期。而依赖范围，就是为构件指定它可以作用于哪套classpath。</li>\n</ul>\n<h3 id=\"仓库-repository\"><a href=\"#仓库-repository\" class=\"headerlink\" title=\"仓库(repository)\"></a>仓库(repository)</h3><p>分为本地仓库和远程仓库。先去本地仓库查询构件，如果没有就去远程仓库下载。</p>\n<blockquote>\n<p>maven提供了一个默认的全球中央仓库，解压lib/maven-model-builder-version.jar，可以发现pom-4.0.0.xml在org/apache/maven/model下,pom-4.0.0.xml中配置了该仓库，所有项目的pom.xml都会继承该xml,默认就使用了该全球中央仓库。用户可以在pom.xml中自定义远程仓库。</p>\n</blockquote>\n<p><strong>中央仓库配置如下：</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Central Repository<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://repo.maven.apache.org/maven2<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">layout</span>&gt;</span>default<span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"镜像仓库\"><a href=\"#镜像仓库\" class=\"headerlink\" title=\"镜像仓库\"></a>镜像仓库</h3><p>配置远程仓库的镜像，所有针对原仓库的访问将转到镜像仓库，原仓库的url设置无效。</p>\n<ul>\n<li><p>conf/settings.xml中配置镜像仓库，镜像可以有多个。</p>\n</li>\n<li><p>mirror的mirrorOf不能和任何一个mirror的id相同。  </p>\n</li>\n<li><p>mirrorOf配置的是该镜像所匹配的远程仓库(id)。拦截对应的远程仓库，使所有针对原仓库的访问将转到镜像仓库。</p>\n</li>\n<li><p>mirrorOf可以配置多个值，用逗号隔开</p>\n</li>\n</ul>\n<blockquote>\n<p>默认是没有配置mirror的，为了加速构件和插件的下载速度，我配置了一个阿里云的mirror，mirrorOf配置的是central，则id是central的仓库(中央仓库)将会转到阿里云的镜像下载构件，原仓库的url设置将失效。</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>nexus-aliyun<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Nexus aliyun<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>mirrorOf的值设置</p>\n<ul>\n<li><p><strong>rep1</strong>:代表这个镜像仅仅针对rep1这个库。如果存在多个镜像的mirrorOf值都包含rep1，则按顺序匹配。</p>\n</li>\n<li><p><strong>*</strong>:代表匹配所有的库。注意maven会优先匹配mirrorOf值与仓库id完全相同的镜像。例如id为rep1的仓库会优先匹配mirrorOf也为rep1的镜像，如果没有才会匹配mirrorOf为*的镜像。</p>\n</li>\n<li><p><strong>*,!rep1</strong>:匹配所有的库，除了rep1 </p>\n</li>\n<li><p><strong>external:*</strong>:代表匹配任意不在localhost上的仓库，或不是基于文件的仓库。这个主要是看repository中的url判断的。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"更改本地仓库位置\"><a href=\"#更改本地仓库位置\" class=\"headerlink\" title=\"更改本地仓库位置\"></a>更改本地仓库位置</h3><blockquote>\n<p>maven下载的构件默认放在~/.m2/repository下面，其中~代表用户目录。可以在conf/settings.xml中自定义本地仓库的位置。</p>\n</blockquote>\n<ul>\n<li>从文档注释中复制localRepository标签，粘贴，填入自定义目录</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">localRepository</span>&gt;</span>/Users/yuanming/maven_repo<span class=\"tag\">&lt;/<span class=\"name\">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>备份settings.xml到maven_repo文件夹(自定义仓库文件夹)，在IDE中设置settings file的路径为备份的settings.xml的路径。以后更新maven，不用重新配置settings.xml。</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><blockquote>\n<p><strong>易枫</strong>,<a href=\"https://www.cnblogs.com/Maple-leaves/p/5785885.html\" target=\"_blank\" rel=\"noopener\">Maven之构件</a><br><strong>chengfangjunmy</strong>,<a href=\"https://blog.csdn.net/chengfangjunmy/article/details/61192021\" target=\"_blank\" rel=\"noopener\">Maven</a></p>\n</blockquote>\n","site":{"data":{}},"abbrlink":"25edb67f","excerpt":"<h2 id=\"maven常用构建命令\"><a href=\"#maven常用构建命令\" class=\"headerlink\" title=\"maven常用构建命令\"></a>maven常用构建命令</h2><ol>\n<li>查看maven版本：<code>mvn -v</code></li>\n<li>编译：<code>mvn compile</code></li>\n<li>打包：<code>mvn package</code>","more":"</li>\n<li>测试：<code>mvn test</code></li>\n<li>删除target目录：<code>mvn clean</code></li>\n<li>安装jar包到本地仓库：<code>mvn install</code> </li>\n<li>自动建立目录结构的两种方式：</li>\n</ol>\n<ul>\n<li><code>mvn archetype:generate</code> 按指示输入信息 </li>\n<li><code>mvn archetype:generate</code> </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-DgroupId=网址+项目名  </span><br><span class=\"line\">-DartifactId=项目名-模块名  </span><br><span class=\"line\">-Dversion=版本号  </span><br><span class=\"line\">-Dpackage=代码包名</span><br></pre></td></tr></table></figure>\n<h2 id=\"构件、仓库、镜像仓库\"><a href=\"#构件、仓库、镜像仓库\" class=\"headerlink\" title=\"构件、仓库、镜像仓库\"></a>构件、仓库、镜像仓库</h2><h3 id=\"构件\"><a href=\"#构件\" class=\"headerlink\" title=\"构件\"></a>构件</h3><h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><ul>\n<li><p>在Maven中，任何依赖(jar包,tomcat等)、插件，或构建的输出都可成为构件。</p>\n</li>\n<li><p>Maven在某个统一的位置存储所有项目的共享的构件，这个统一的位置，我们就称之为仓库。（仓库就是存放依赖和插件的地方）</p>\n</li>\n<li><p>任何的构件都有唯一的坐标，Maven根据这个坐标定义了构件在仓库中的唯一存储路径。</p>\n</li>\n<li>坐标的组成：<ul>\n<li><code>groupId</code> 当前Maven构件隶属的项目名。实际开发中，项目往往会模块化开发，如spring-core,spring-aop等，他们都是Spring项目下不同的模块。命名方式与Java包名类似，通常是项目名+域名的反向书写。(必须)</li>\n<li><code>artifactId</code>：隶属项目中的模块名。(必须)</li>\n<li><code>version</code>：当前版本。(必须)</li>\n<li><code>packaging</code>：打包方式，如jar,war… 。默认为jar(必须)</li>\n<li><code>classifier</code>：帮助定义构建输出的一些附属构件。如spring-core.jar，还生成有文档javadoc.jar，源码sources.jar。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Maven构件在仓库中的存储路径\"><a href=\"#Maven构件在仓库中的存储路径\" class=\"headerlink\" title=\"Maven构件在仓库中的存储路径\"></a>Maven构件在仓库中的存储路径</h4><ul>\n<li><p>基于groupId准备路径，将句点分隔符转成路径分隔符，就是将  “.”  转换成 “/“ ; example： org.testng —&gt;org/testng</p>\n</li>\n<li><p>基于artifactId准备路径，将artifactId连接到后面：org/testng/testng</p>\n</li>\n<li><p>使用version准备路径，将version连接到后面：org/testng/testng/5.8</p>\n</li>\n<li><p>将artifactId于version以分隔符连字号连接到后面：org/testng/testng/5.8/tesng-5.8</p>\n</li>\n<li><p>判断如果构件有classifier，就要在 第4项 后增加 分隔符连字号 再加上 classifier，org/testng/testng/5.8/tesng-5.8-jdk5</p>\n</li>\n<li><p>检查构件的extension，如果extension存在，则加上句点分隔符和extension，而extension是由packing决定的，org/testng/testng/5.8/tesng-5.8-jdk5.jar </p>\n</li>\n</ul>\n<h4 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h4><ul>\n<li>构件具有依赖传递。例如：项目依赖构件A，而构件A又依赖B，Maven会将A和B都视为项目的依赖。</li>\n<li>依赖之间存在版本冲突时，Maven会依据 “短路优先” 原则加载构件。如果引用的路径长度相同时，遵循“声明优先”的原则。此外，我们也可以在POM.XML中，使用<exclusions></exclusions>显式排除某个版本的依赖，以确保项目能够运行。<ul>\n<li>项目依赖构件A和B，构件A → C → D(version:1.0.0)，构件B → D(version:1.1.0)，此时，Maven会优先解析加载D(version:1.1.0)。</li>\n<li>项目依赖构件A和B，构件A → D(version:1.0.0)， 构件B → D(version:1.1.0)，此时，Maven会优先解析加载D(version:1.0.0)。</li>\n</ul>\n</li>\n<li>构件的依赖范围。Maven在项目的构建过程中，会编译三套classpath，分别对应：编译期，运行期，测试期。而依赖范围，就是为构件指定它可以作用于哪套classpath。</li>\n</ul>\n<h3 id=\"仓库-repository\"><a href=\"#仓库-repository\" class=\"headerlink\" title=\"仓库(repository)\"></a>仓库(repository)</h3><p>分为本地仓库和远程仓库。先去本地仓库查询构件，如果没有就去远程仓库下载。</p>\n<blockquote>\n<p>maven提供了一个默认的全球中央仓库，解压lib/maven-model-builder-version.jar，可以发现pom-4.0.0.xml在org/apache/maven/model下,pom-4.0.0.xml中配置了该仓库，所有项目的pom.xml都会继承该xml,默认就使用了该全球中央仓库。用户可以在pom.xml中自定义远程仓库。</p>\n</blockquote>\n<p><strong>中央仓库配置如下：</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Central Repository<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://repo.maven.apache.org/maven2<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">layout</span>&gt;</span>default<span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"镜像仓库\"><a href=\"#镜像仓库\" class=\"headerlink\" title=\"镜像仓库\"></a>镜像仓库</h3><p>配置远程仓库的镜像，所有针对原仓库的访问将转到镜像仓库，原仓库的url设置无效。</p>\n<ul>\n<li><p>conf/settings.xml中配置镜像仓库，镜像可以有多个。</p>\n</li>\n<li><p>mirror的mirrorOf不能和任何一个mirror的id相同。  </p>\n</li>\n<li><p>mirrorOf配置的是该镜像所匹配的远程仓库(id)。拦截对应的远程仓库，使所有针对原仓库的访问将转到镜像仓库。</p>\n</li>\n<li><p>mirrorOf可以配置多个值，用逗号隔开</p>\n</li>\n</ul>\n<blockquote>\n<p>默认是没有配置mirror的，为了加速构件和插件的下载速度，我配置了一个阿里云的mirror，mirrorOf配置的是central，则id是central的仓库(中央仓库)将会转到阿里云的镜像下载构件，原仓库的url设置将失效。</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>nexus-aliyun<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Nexus aliyun<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>mirrorOf的值设置</p>\n<ul>\n<li><p><strong>rep1</strong>:代表这个镜像仅仅针对rep1这个库。如果存在多个镜像的mirrorOf值都包含rep1，则按顺序匹配。</p>\n</li>\n<li><p><strong>*</strong>:代表匹配所有的库。注意maven会优先匹配mirrorOf值与仓库id完全相同的镜像。例如id为rep1的仓库会优先匹配mirrorOf也为rep1的镜像，如果没有才会匹配mirrorOf为*的镜像。</p>\n</li>\n<li><p><strong>*,!rep1</strong>:匹配所有的库，除了rep1 </p>\n</li>\n<li><p><strong>external:*</strong>:代表匹配任意不在localhost上的仓库，或不是基于文件的仓库。这个主要是看repository中的url判断的。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"更改本地仓库位置\"><a href=\"#更改本地仓库位置\" class=\"headerlink\" title=\"更改本地仓库位置\"></a>更改本地仓库位置</h3><blockquote>\n<p>maven下载的构件默认放在~/.m2/repository下面，其中~代表用户目录。可以在conf/settings.xml中自定义本地仓库的位置。</p>\n</blockquote>\n<ul>\n<li>从文档注释中复制localRepository标签，粘贴，填入自定义目录</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">localRepository</span>&gt;</span>/Users/yuanming/maven_repo<span class=\"tag\">&lt;/<span class=\"name\">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>备份settings.xml到maven_repo文件夹(自定义仓库文件夹)，在IDE中设置settings file的路径为备份的settings.xml的路径。以后更新maven，不用重新配置settings.xml。</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><blockquote>\n<p><strong>易枫</strong>,<a href=\"https://www.cnblogs.com/Maple-leaves/p/5785885.html\" target=\"_blank\" rel=\"noopener\">Maven之构件</a><br><strong>chengfangjunmy</strong>,<a href=\"https://blog.csdn.net/chengfangjunmy/article/details/61192021\" target=\"_blank\" rel=\"noopener\">Maven</a></p>\n</blockquote>","popularPost_tmp_postPath":true,"popularPost_tmp_gaData":{"updated":"Sun Aug 12 2018 14:00:54 GMT+0800 (CST)","title":"maven(一):构建命令、构件和库","path":"post/25edb67f.html","eyeCatchImage":null,"excerpt":"<h2 id=\"maven常用构建命令\"><a href=\"#maven常用构建命令\" class=\"headerlink\" title=\"maven常用构建命令\"></a>maven常用构建命令</h2><ol>\n<li>查看maven版本：<code>mvn -v</code></li>\n<li>编译：<code>mvn compile</code></li>\n<li>打包：<code>mvn package</code>","date":"2018-07-22T03:42:00.000Z","pv":0,"totalPV":0,"categories":"工具学习 > maven","tags":["maven","maven构建命令","maven库"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"maven(五):聚合和继承","comment":true,"date":"2018-08-07T11:44:00.000Z","_content":"\nmaven聚合和继承\n\n","source":"_posts/maven(五)聚合和继承.md","raw":"---\ntitle: maven(五):聚合和继承\ncomment: true\ntags:\n  - maven\n  - maven聚合和继承\ncategories:\n  - 工具学习\n  - maven\ndate: 2018-08-07 19:44:00\n---\n\nmaven聚合和继承\n\n","slug":"maven(五)聚合和继承","published":1,"updated":"2018-08-09T10:23:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkqg7nqq0003dfzlmscwvn6e","content":"<p>maven聚合和继承</p>\n","site":{"data":{}},"abbrlink":"86efede5","excerpt":"","more":"<p>maven聚合和继承</p>\n","popularPost_tmp_postPath":true,"popularPost_tmp_gaData":{"updated":"Thu Aug 09 2018 18:23:32 GMT+0800 (CST)","title":"maven(五):聚合和继承","path":"post/86efede5.html","eyeCatchImage":null,"excerpt":null,"date":"2018-08-07T11:44:00.000Z","pv":0,"totalPV":0,"categories":"工具学习 > maven","tags":["maven","maven聚合和继承"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"maven(六):多模块项目依赖、插件配置问题","comment":true,"date":"2018-08-07T11:44:00.000Z","_content":"\n多模块项目依赖、插件配置问题\n\n","source":"_posts/maven(六)多模块项目依赖、插件配置问题.md","raw":"---\ntitle: maven(六):多模块项目依赖、插件配置问题\ncomment: true\ntags:\n  - maven\n  - maven多模块项目\ncategories:\n  - 工具学习\n  - maven\ndate: 2018-08-07 19:44:00\n---\n\n多模块项目依赖、插件配置问题\n\n","slug":"maven(六)多模块项目依赖、插件配置问题","published":1,"updated":"2018-08-09T10:23:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkqg7nqu0007dfzl78thabxz","content":"<p>多模块项目依赖、插件配置问题</p>\n","site":{"data":{}},"abbrlink":"d5adb422","excerpt":"","more":"<p>多模块项目依赖、插件配置问题</p>\n","popularPost_tmp_postPath":true,"popularPost_tmp_gaData":{"updated":"Thu Aug 09 2018 18:23:43 GMT+0800 (CST)","title":"maven(六):多模块项目依赖、插件配置问题","path":"post/d5adb422.html","eyeCatchImage":null,"excerpt":null,"date":"2018-08-07T11:44:00.000Z","pv":0,"totalPV":0,"categories":"工具学习 > maven","tags":["maven","maven多模块项目"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"maven(二):生命周期和插件","comment":true,"date":"2018-07-23T23:30:00.000Z","_content":"\n## maven生命周期\n\nmaven抽象出了3套生命周期，其具体实现是依赖于[插件](https://maven.apache.org/plugins/index.html)。每套生命周期是相互独立的，都由一组阶段(Phase)组成。每套生命周期中的阶段是有顺序的，后面阶段依赖于前面的阶段，执行后面阶段会自动执行之前的阶段，但不会触发不同生命周期的阶段。\n<!--more-->\n**下面是三个生命周期及其包含的阶段。**\n\n### Clean Lifecycle \n清理项目，在进行真正的构建之前进行一些清理工作。\n\n*  `pre-clean`     执行clean前需要完成的工作  \n\n*  `clean`     clean上一次构建生成的所有文件  \n\n*  `post-clean`    执行clean后需要立刻完成的工作  \n    \n这里的clean就是指的`mvn clean`。在一套生命周期内，运行某个阶段会自动按序运行之前阶段，`mvn clean=mvn pre-clean clean`。\n\n\n### Default Lifecycle\n**构建的核心部分**，编译，测试，打包，部署等等。\n\n* `validate`      验证项目是否正确，并且所有必要的信息可用于完成构建过程\n\n* `initialize`    建立初始化状态，例如设置属性\n\n* `generate-sources`\n  \n* `process-sources` \n  \n* `generate-resources`\n\n* `process-resources`     复制并处理资源文件，至目标目录，准备打包。\n\n* `compile`     编译项目的源代码。\n\n* `process-classes`\n\n* `generate-test-sources`\n\n* `process-test-sources` \n\n* `generate-test-resources`\n\n* `process-test-resources`     复制并处理资源文件，至目标测试目录。\n\n* `test-compile`     编译测试源代码。\n\n* `process-test-classes`\n\n* `test`     使用合适的单元测试框架运行测试。这些测试代码不会被打包或部署。\n\n* `prepare-package`\n\n* `package`     提取编译后的代码，并在其分发格式打包，如JAR，WAR或EAR文件\n\n* `pre-integration-test`     完成执行集成测试之前所需操作。例如，设置所需的环境\n\n* `integration-test`\n\n* `post-integration-test`     完成集成测试已全部执行后所需操作。例如，清理环境\n\n* `verify`        运行任何检查，验证包是有效的，符合质量审核规定\n\n* `install`     将包安装至本地仓库，以让其它项目依赖。\n\n* `deploy`     将最终的包复制到远程的仓库，以让其它开发人员与项目共享    \n  \n### Site Lifecycle   \n生成项目报告，站点，发布站点。\n\n* `pre-site`     执行一些需要在生成站点文档(html)之前完成的工作\n\n* `site`     生成项目信息的站点文档\n\n* `post-site `    执行一些需要在生成站点文档之后完成的工作，并且为部署做准备\n\n* `site-deploy`     将生成的站点文档部署到特定的服务器上\n\n## maven插件目标\nmaven本质是一个插件框架，maven每个生命周期的每个阶段(phase)默认绑定了一个或多个插件中的一个或多个目标。用户可以自行配置或编写插件。\n**一个插件对应一个或多个目标，一个插件可以绑定多个生命周期阶段。**\n\n##  两种方式调用插件目标\n### 插件目标绑定maven生命周期阶段  \n   这分为内置绑定和自定义绑定。\n     \n* 内置绑定。maven的生命周期的阶段已经默认和一些插件的目标进行了绑定。例如Maven默认将`maven-compiler-plugin`的`compile`目标与compile生命周期阶段绑定，因此命令mvn compile实际上是先定位到compile这一生命周期阶段，然后再根据绑定关系调用maven-compiler-plugin的`compile`目标。  \n* 自定义绑定。在pom.xml中进行配置，我们可以根据需要将任何插件目标绑定到任何生命周期的任何阶段。如：将maven-source-plugin的`jar-no-fork`目标绑定到default生命周期的package阶段，这样，以后在执行`mvn package`命令打包项目时，在package**阶段之后**会执行源代码打包。  \n**自定义绑定的插件目标是在绑定的生命周期阶段之后执行的**\n\n```xml\n<build>\n    <plugins>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-source-plugin</artifactId>\n            <version>2.2.1</version>\n            <executions> <!--执行-->\n                <execution>\n                    <id>attach-source</id>\n                    <!-- 要绑定到的生命周期的阶段 -->\n                    <phase>package</phase>\n                    <goals>\n                        <!-- 要绑定的插件的目标，在maven官网plugins上可以查到 -->\n                        <goal>jar-no-fork</goal>\n                    </goals>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n    ……\n</build>\n```\n\n### 运行命令时直接指定插件目标(与生命周期无关)  \n\n\n```\nmvn 插件目标前缀(prefix):插件目标 \n```\n\n各插件目标的命令在官网可以查。例如`mvn archetype:generate` 就表示调用maven-archetype-plugin的`generate`目标，这种**带冒号的调用方式与生命周期无关**。\n\n## 插件配置\n\n完成插件和生命周期的绑定后，用户还可以配置插件目标的参数，进一步调整插件目标所执行的任务，以满足项目的需求。几乎所有的Maven插件的目标都有一些可配置的参数，用户可以通过命令行和POM配置的方式来配置这些参数。\n### 命令行插件配置\n用户可以在Maven命令中使用-D参数，并伴随一个参数键=参数值得形式，来配置插件目标的参数。\n\n例如，maven-surefire-plugin提供了一个maven.test.skip参数，当其值为true的时候，就会跳过执行测试，于是在运行命令的时候，加上如下-D参数就能跳过测试。\n\n```\nmvn install -Dmaven.test.skip=true\n```\n\n参数-D是Java自带的，其功能是通过命令行设置一个Java系统属性，Maven简单的重用了该参数，在准备插件的时候检查系统属性，便实现了插件参数的配置。\n### 在POM中插件全局配置\n并不是所有的插件参数都适合从命令行配置，有些参数的值从项目创建到项目发布都不会改变，或者说很少改变，对于这种情况，在POM文件中一次性配置就显然比重负在命令行输入要方便。\n\n用户可以在声明插件的时候，对此插件进行一个全局配置。也就是说，所有该基于该插件目标的任务，都会使用这些配置。例如我们通常会需要配置maven-compiler-plugin告诉它配置Java1.5版本的源文件，生成与JVM1.5兼容的字节码文件，代码如下：\n\n```xml\n<build>\n    <plugins>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artfactId>\n            <version>2.1</version>\n            <configuration>\n                <source>1.5</source>\n                <target>1.5</target>\n            </configration>\n        </plugin>\n    </plugins>\n</build>\n```\n \n这样，不管绑定到compile阶段的`maven-compiler-plugin:compile`任务，还是绑定到test-compiler阶段的`maven-compiler-plugin:testCompiler`任务，这都能够使用该配置，基于Java1.5版本进行编译。\n\n\n\n### POM中插件任务配置\n除了为插件配置全局的参数，用户还可以为某个插件任务配置特定的参数。以maven-antrun-plugin为例，它有一个目标`run`,可以用来在Maven中调用Ant任务。用户将`maven-antrun-plugin:run`绑定到多个生命周期阶段上，再加以不同的配置，就可以让Maven在不同的生命周期执行不同的任务，代码如下:\n\n```xml\n<build>\n    <plugins>\n        <groupId>org.apache.maven.plugins<groupId>\n        <artifactId>maven-antrun-plugin</artifactId>\n        <version>1.3</version>\n        <executions>\n            <execution>\n                <id>ant-validate</id>\n                <phase>validate<phase>\n                <goals>\n                    <goal>run</goal>\n                </goals>\n                <configuration>\n                    <tasks>\n                        <echo>Im'bound to validate phase</echo>\n                    </tasks>\n                </configurationo>\n            </execution>\n            <execution>\n                <id>ant-verify</id>\n                <phase>verify</phase>\n                <goals>\n                    <goal>run</goal>\n                </goals>\n                <configuration>\n                    <tasks>\n                        <echo>I'm bound to verify phase</echo>\n                    </tasks>\n                </configuration>\n            </execution>\n        </executions>\n    </plugins>\n</build>\n```\n上述代码片段中，首先，`maven-antrun-plugin:run`与validate绑定，从而构成一个id为ant-validate的任务。插件全局配置中的configuration元素位于plugin元素下面，而这里的configuration元素则位于execution元素下，表示这是特定任务的配置，而非插件整体的配置。这个ant-validate任务配置了一个echo Ant任务，向命令行输出一段文字，表示该任务是绑定到validate阶段的。第二个任务的id为ant-verify，它绑定到了verify阶段，同样它也输出一段文字到命令行，告诉该任务绑定到了verify阶段。\n\n## 获取插件信息\n\n仅仅理解如何配置和使用插件是不够的，当遇到一个构建任务的时候，用户还需要知道去哪里寻找合适的插件，以帮助完成任务，找到正确的插件之后，还要详细了解该插件的配置点。由于Maven的插件非常多，这其中大部分没有完善文档，因此，使用正确的插件并进行正确的配置，其实并不是一件容易的事。\n### 在线插件信息\n基本所有的主要的Maven插件都来自Apache和Codehaus。由于Maven本身是属于Apache软件基金会的，因此他有很多的官方的插件，每天都有成千上万的Maven用户在使用这些插件，他们具有非常好的的稳定性。\n[官网插件介绍](https://maven.apache.org/plugins/index.html)  \n[插件列表](http://repo1.maven.org/maven2/org/apache/maven/plugins)  \n### 使用maven-help-plugin描述插件\n除了访问在线的插件文档之外，还可以借助maven-help-plugin来获取插件的详细信息。。可以运行一下命令来获取maven-compiler-plugin2.1版本的信息：\n\n```\nmvn help:describe-Dplugin=org.apache.maven.plugins:maven-compiler-plugin:2.1\n```\n这里执行的是maven-help-plugins的`describe`目标，在参数的plugin中输入需要描述插件的groupId、artfactId和version。Maven在命令行输出maven-compiler-plugin的简要信息。\n\n在描述插件的时候，还可以省去版本信息，让Maven自动获取最新版本来进行表述。例如：\n\n```\nmvn help:describe-Dplugin=org.apache.maven.plugins:maven-compiler-plugin\n```\n进一步简化，可以使用插件目标前缀替换坐标。例如：\n\n```\nmvn help:describe-Dplugin=compiler\n```\n如果仅仅想描述某个插件目标的信息，可以加上goal参数：\n\n```\nmvn help:describe-Dplugin=compiler-Dgoal=compile\n```\n如果想让maven-help-plugin输出更详细的信息，可以加上detail参数：\n\n```\nmvn help:describe -Dplugin=compiler-Ddetail\n```\n### 从命令行调用插件\n如果在命令行运行mvn -h来显示mvn命令帮助，可以看到如下的信息：\n\n```\nusage: mvn [options] [<goal(s)>] [<phase(s)>]\n \nOptions:\n -am,--also-make                        If project list is specified, also\n                                        build projects required by the\n                                        list\n -amd,--also-make-dependents            If project list is specified, also\n                                        build projects that depend on\n\n...\n```\n该信息告诉了我们mvn命令的基本用法，options表示可用的选项，mvn命令有20多个选项，除了选项之外，mvn命令后面可以添加一个或者多个goal和phase，他们分别是指插件目标和生命周期阶段\n\n可以通过mvn命令激活生命周期阶段，从而执行那些绑定在生命周期阶段上的插件目标。但Maven还支持直接从命令行调用插件目标。Maven支持这种方式是因为有些任务不适合绑定在生命周期上，例如maven-help-plugin:describe，我们不需要在构建项目的时候去描述插件信息，又如maven-dependency-plugin:tree,我们也不需要在构建项目的时候去显示依赖树，因此这些插件目标应该通过如下方式使用：\n\n```\nmvn help:describe-Dplugin=compiler\nmvn dependency:tree\n```\n不过这里有个疑问，describe是maven-help-plugin的目标没错，但是冒号前面的help是什么呢？它既不是groupId，也不是artifactId,Maven是如何根据该信息找到对应版本插件的呢？同理为什么不是`maven-dependency-plugin:tree`,而是`dependency:tree`\n\n解答该疑问之前，可以尝试一下如下命令：\n\n```\nmvn org.apache.maven.plugins:maven-help-plugin:2.1:describe-Dplugin=compiler\n\nmvn org.apache.maven.plugins:maven-dependency-plugin:2.1:tree\n```\n这两条命令就比较容易理解了，插件的groupId、artifactId、version以及goal都得以清晰描述。它们的效果与之前的两条命令基本是一样的，但是显然前面的命令更简洁，更容易记忆和使用。为了达到该目的，Maven引入了目标前缀的概念help是maven-help-plugin的目标前缀，dependency是maven-dependency-plugin的前缀，有了插件前缀，Maven就能找到对应的artifactId。不过，除了artifactId,Maven还需要得到groupId和version才能精确定位到某个插件。\n\n## 插件解析机制\n\n### 仓库元数据\n#### 插件元数据\n\n**主要用于解释插件版本**\n\n> 在远程仓库存放的位置结构:  \n> http://repo1.maven.org/maven2/groupId/artifactId/maven-metadata.xml  \n\n这里的groupId指的就是构件的groupId，artifactId指的是构件的artifactId，例如插件maven-compiler-plugin的元数据链接:  \nhttp://repo1.maven.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/maven-metadata.xml  \n内容如下：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<metadata>\n  <groupId>org.apache.maven.plugins</groupId>\n  <artifactId>maven-compiler-plugin</artifactId>\n  <versioning>\n    <latest>3.7.0</latest>\n    <release>3.7.0</release>\n    <versions>\n      <version>2.0-beta-1</version>\n      <version>2.0</version>\n      <version>2.0.1</version>\n      <version>2.0.2</version>\n      <version>2.1</version>\n      <version>2.2</version>\n      <version>2.3</version>\n      <version>2.3.1</version>\n      <version>2.3.2</version>\n      <version>2.4</version>\n      <version>2.5</version>\n      <version>2.5.1</version>\n      <version>3.0</version>\n      <version>3.1</version>\n      <version>3.2</version>\n      <version>3.3</version>\n      <version>3.5</version>\n      <version>3.5.1</version>\n      <version>3.6.0</version>\n      <version>3.6.1</version>\n      <version>3.6.2</version>\n      <version>3.7.0</version>\n    </versions>\n    <lastUpdated>20170904193138</lastUpdated>\n  </versioning>\n</metadata>\n```\n#### 插件前缀元数据\n\n**主要用于解释插件前缀**\n\n> 在远程仓库存放的位置结构:  \n> http://repo1.maven.org/maven2/groupId/maven-metadata.xml\n\n我们使用一般使用官方的插件就够了，官方插件默认的groupId为org.apache.maven.plugins，对应的链接为  \nhttp://repo1.maven.org/maven2/org/apache/maven/plugins/maven-metadata.xml  \n下面是前缀元数据xml文件截取的部分内容\n\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<metadata>\n  <plugins>\n    <plugin>\n      <name>Apache Maven ACR Plugin</name>\n      <prefix>acr</prefix>\n      <artifactId>maven-acr-plugin</artifactId>\n    </plugin>\n    <plugin>\n      <name>Apache Maven Ant Plugin</name>\n      <prefix>ant</prefix>\n      <artifactId>maven-ant-plugin</artifactId>\n    </plugin>\n    <plugin>\n      <name>Maven ANTLR Plugin</name>\n      <prefix>antlr</prefix>\n      <artifactId>maven-antlr-plugin</artifactId>\n    </plugin>\n    ……\n  </plugins>\n</metadata>\n```\n\n### 插件仓库\n与依赖仓库一样，插件构件同样基于坐标存储在Maven仓库中，在需要的时候Maven会从本地仓库查找插件，如果不存在，则从远程仓库查找。找到插件之后，再下载到本地仓库使用。\n\n需要注意的是，Maven会区别对待依赖的远程仓库与插件的远程仓库。前面提到如何配置远程仓库，但是这种配置只对一般依赖有效果，当Maven需要的依赖在本地仓库不存在时，它会去所配置的远程仓库中查找，可是当Maven需要的插件在本地仓库存在时，他就不会去那些远程仓库查找。\n\n不同于repositories及其repository子元素，插件的远程仓库使用pluginRepositories和pluginReposirory配置，例如，Maven的超级pom:pom-4.0.0.xml配置了如下的插件远程仓库,代码如下：\n\n```xml\n<pluginRepositories>\n    <pluginRepository>\n        <id>central</id>\n        <name>Maven Plugin Repository</name>\n        <url>http://repo1.maven.org/maven2</url>\n        <layout>default</layout>\n        <snapshots>\n            <enabled>false</enabled>\n        <snapshots>\n        <releases>\n            <updatePolicy>never</updatePolicy>\n        </releases>\n    </pluginRepository>\n</pluginRepositories>\n```\n一般来说，中央仓库所包含的插件完全能够满足我们的需要，因此也不需要配置其他的插件仓库。只有在很少的情况下，项目使用的插件无法在中央仓库找到，或者自己编写的插件，这个时候可以参考上述的配置，在POM或者settings.xml中加入其他的插件仓库配置。\n### 插件的默认groupId\n在POM配置中配置插件的时候，如果该插件是Maven的官方插件（即如果其groupId为org.apache.maven.plugins），就可以省略groupId配置，见代码清单：\n\n```xml\n<build>\n    <plugins>\n        <plugin>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>2.1</version>\n            <configuration>\n                <source>1.5</source>\n                <target>1.5</target>\n            </configuration>\n        </plugin>\n    </plugins>\n</build>\n```\n上面省略了配置maven-compiler-plugin的groupId，Maven在解析该插件的时候，会自动用默认groupId org.apache.maven.plugins补齐。但是并不推荐使用Maven的这一机制，这样虽然可以省略一些配置，但是这样的配置会让团队中不熟悉Maven的成员感到费解，况且能省略的配置也就仅仅一行而已。\n### 解析插件版本\n> 同样是为了简化插件的配置和使用，在用户没有提供插件版本的情况下，Maven会自动解析插件版本。\n> 首先，Maven的超级POM中为所有核心插件设定了版本,超级POM是所有Maven项目的父POM，所有项目都会继承这个超级POM配置，因此，即使用户不加任何配置，Maven使用核心插件的时候，他们的版本都已经确定了，这些插件包括maven-clean-plugin、maven-compiler-plugin、maven-surefire-plugin等。\n\n上面说法是来自其他博客，我表示质疑，我使用的是maven3.5.4，在超级pom中并没有发现其为所有核心插件设定了版本。这点不明白，以后搞清楚再补充。\n\n如果用户使用某个插件时没有设定版本，而这个插件又不属于核心插件范畴，Maven就会去检查所有仓库中的可用版本，然后做出选择。以maven-compiler-plugin为例，他在中央仓库的[仓库元数据](http://repo1.maven.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/maven-metadata.xml)\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<metadata>\n  <groupId>org.apache.maven.plugins</groupId>\n  <artifactId>maven-compiler-plugin</artifactId>\n  <versioning>\n    <latest>3.7.0</latest>\n    <release>3.7.0</release>\n    <versions>\n      <version>2.0-beta-1</version>\n      <version>2.0</version>\n      <version>2.0.1</version>\n      <version>2.0.2</version>\n      <version>2.1</version>\n      <version>2.2</version>\n      <version>2.3</version>\n      <version>2.3.1</version>\n      <version>2.3.2</version>\n      <version>2.4</version>\n      <version>2.5</version>\n      <version>2.5.1</version>\n      <version>3.0</version>\n      <version>3.1</version>\n      <version>3.2</version>\n      <version>3.3</version>\n      <version>3.5</version>\n      <version>3.5.1</version>\n      <version>3.6.0</version>\n      <version>3.6.1</version>\n      <version>3.6.2</version>\n      <version>3.7.0</version>\n    </versions>\n    <lastUpdated>20170904193138</lastUpdated>\n  </versioning>\n</metadata>\n```\nMaven遍历本地仓库和所有远程插件仓库，将该路径下的仓库元数据归并后，就能计算出latest和release的值。latest表示所有仓库中该构件的最新版本，而release表示最新的非快照版本。在Maven2中，插件的版本会被解析至latest。也就是说，当用户使用某个非核心插件且没有声明版本的时候，Maven会将版本解析为所有可用仓库中的最新版本，而这个版本也可能是快照版本的。\n\n当插件的版本为快照版本的时，就会出现潜在的问题。Maven会基于更新策略，检查并使用快照的更新。某个插件可能昨天还好好的，今天就出错了。其原因是因为这个版本的插件发生了变化，为了防止这类问题，Maven3调整了解析机制，当插件没有声明版本的时候，不再解析至latest，而是使用release。这样就可以避免由于快照频繁更新而导致的插件行为不稳定。\n\n依赖Maven解析插件版本其实是不推荐的做法，即使Maven3将版本解析到最新的非快照版本，也还是唯有潜在的不稳定性。例如，可能某个构件发布了一个新的版本，而这个版本的行为与之前的的版本发生了变化，这种变化就可能导致项目构建失败。因此，使用插件的时候，应该一直显式的设定版本，这也解释了Maven为什么要在超级POM中为核心插件设定版本。\n\n### 解析插件前缀\nmvn命令行支持使用插件前缀来简化插件的调用，现在解释Maven如何根据插件前缀解析到插件的坐标的。\n\n插件前缀与`groupId:artifactId`是一一对应的，这种匹配关系存储在仓库元数据中。这里的仓库元数据不是groupId/artifactId/maven-metadata.xml，而是groupId/maven-metadata.xml。当Maven解析前缀:\n\n* 首先会基于默认的groupId(org.apache.maven.plugins)归并所有插件仓库的元数据org/apache/maven/plugins/maven-metadata.xml\n* 其次检查归并后的元素，根据前缀(prefix)找到对应的artifactId；\n* 结合artifactId和groupId，最后获取version，这是就得到了完整的插件坐标。\n* 若org/apache/maven/plugins/maven-metadata.xml没有记录该插件前缀，则接着检查其他groupId下的元数据，如org/codehaus/mojo/maven-metadata.xml以及用户自定义的插件。若所有元数据都不包含该前缀，则报错。\n\n> 插件前缀元数据部分内容:\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<metadata>\n  <plugins>\n    <plugin>\n      <name>Apache Maven ACR Plugin</name>\n      <prefix>acr</prefix>\n      <artifactId>maven-acr-plugin</artifactId>\n    </plugin>\n    <plugin>\n      <name>Apache Maven Ant Plugin</name>\n      <prefix>ant</prefix>\n      <artifactId>maven-ant-plugin</artifactId>\n    </plugin>\n    <plugin>\n      <name>Maven ANTLR Plugin</name>\n      <prefix>antlr</prefix>\n      <artifactId>maven-antlr-plugin</artifactId>\n    </plugin>\n    ……\n  </plugins>\n</metadata>\n```\n\n## 参考资料\n\n>**321笨丫头**,[maven install、maven clean、project clean ](http://blog.sina.com.cn/s/blog_e01142dc0102wup3.html)\n>**lofty**,[Maven——生命周期与插件****](https://www.cnblogs.com/wangwei-beijing/p/6535081.html)\n\n\n","source":"_posts/maven(二)生命周期和插件.md","raw":"---\ntitle: maven(二):生命周期和插件\ncomment: true\ntags:\n  - maven\n  - maven生命周期\n  - maven插件\ncategories:\n  - 工具学习\n  - maven\ndate: 2018-07-24 07:30:00\n---\n\n## maven生命周期\n\nmaven抽象出了3套生命周期，其具体实现是依赖于[插件](https://maven.apache.org/plugins/index.html)。每套生命周期是相互独立的，都由一组阶段(Phase)组成。每套生命周期中的阶段是有顺序的，后面阶段依赖于前面的阶段，执行后面阶段会自动执行之前的阶段，但不会触发不同生命周期的阶段。\n<!--more-->\n**下面是三个生命周期及其包含的阶段。**\n\n### Clean Lifecycle \n清理项目，在进行真正的构建之前进行一些清理工作。\n\n*  `pre-clean`     执行clean前需要完成的工作  \n\n*  `clean`     clean上一次构建生成的所有文件  \n\n*  `post-clean`    执行clean后需要立刻完成的工作  \n    \n这里的clean就是指的`mvn clean`。在一套生命周期内，运行某个阶段会自动按序运行之前阶段，`mvn clean=mvn pre-clean clean`。\n\n\n### Default Lifecycle\n**构建的核心部分**，编译，测试，打包，部署等等。\n\n* `validate`      验证项目是否正确，并且所有必要的信息可用于完成构建过程\n\n* `initialize`    建立初始化状态，例如设置属性\n\n* `generate-sources`\n  \n* `process-sources` \n  \n* `generate-resources`\n\n* `process-resources`     复制并处理资源文件，至目标目录，准备打包。\n\n* `compile`     编译项目的源代码。\n\n* `process-classes`\n\n* `generate-test-sources`\n\n* `process-test-sources` \n\n* `generate-test-resources`\n\n* `process-test-resources`     复制并处理资源文件，至目标测试目录。\n\n* `test-compile`     编译测试源代码。\n\n* `process-test-classes`\n\n* `test`     使用合适的单元测试框架运行测试。这些测试代码不会被打包或部署。\n\n* `prepare-package`\n\n* `package`     提取编译后的代码，并在其分发格式打包，如JAR，WAR或EAR文件\n\n* `pre-integration-test`     完成执行集成测试之前所需操作。例如，设置所需的环境\n\n* `integration-test`\n\n* `post-integration-test`     完成集成测试已全部执行后所需操作。例如，清理环境\n\n* `verify`        运行任何检查，验证包是有效的，符合质量审核规定\n\n* `install`     将包安装至本地仓库，以让其它项目依赖。\n\n* `deploy`     将最终的包复制到远程的仓库，以让其它开发人员与项目共享    \n  \n### Site Lifecycle   \n生成项目报告，站点，发布站点。\n\n* `pre-site`     执行一些需要在生成站点文档(html)之前完成的工作\n\n* `site`     生成项目信息的站点文档\n\n* `post-site `    执行一些需要在生成站点文档之后完成的工作，并且为部署做准备\n\n* `site-deploy`     将生成的站点文档部署到特定的服务器上\n\n## maven插件目标\nmaven本质是一个插件框架，maven每个生命周期的每个阶段(phase)默认绑定了一个或多个插件中的一个或多个目标。用户可以自行配置或编写插件。\n**一个插件对应一个或多个目标，一个插件可以绑定多个生命周期阶段。**\n\n##  两种方式调用插件目标\n### 插件目标绑定maven生命周期阶段  \n   这分为内置绑定和自定义绑定。\n     \n* 内置绑定。maven的生命周期的阶段已经默认和一些插件的目标进行了绑定。例如Maven默认将`maven-compiler-plugin`的`compile`目标与compile生命周期阶段绑定，因此命令mvn compile实际上是先定位到compile这一生命周期阶段，然后再根据绑定关系调用maven-compiler-plugin的`compile`目标。  \n* 自定义绑定。在pom.xml中进行配置，我们可以根据需要将任何插件目标绑定到任何生命周期的任何阶段。如：将maven-source-plugin的`jar-no-fork`目标绑定到default生命周期的package阶段，这样，以后在执行`mvn package`命令打包项目时，在package**阶段之后**会执行源代码打包。  \n**自定义绑定的插件目标是在绑定的生命周期阶段之后执行的**\n\n```xml\n<build>\n    <plugins>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-source-plugin</artifactId>\n            <version>2.2.1</version>\n            <executions> <!--执行-->\n                <execution>\n                    <id>attach-source</id>\n                    <!-- 要绑定到的生命周期的阶段 -->\n                    <phase>package</phase>\n                    <goals>\n                        <!-- 要绑定的插件的目标，在maven官网plugins上可以查到 -->\n                        <goal>jar-no-fork</goal>\n                    </goals>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n    ……\n</build>\n```\n\n### 运行命令时直接指定插件目标(与生命周期无关)  \n\n\n```\nmvn 插件目标前缀(prefix):插件目标 \n```\n\n各插件目标的命令在官网可以查。例如`mvn archetype:generate` 就表示调用maven-archetype-plugin的`generate`目标，这种**带冒号的调用方式与生命周期无关**。\n\n## 插件配置\n\n完成插件和生命周期的绑定后，用户还可以配置插件目标的参数，进一步调整插件目标所执行的任务，以满足项目的需求。几乎所有的Maven插件的目标都有一些可配置的参数，用户可以通过命令行和POM配置的方式来配置这些参数。\n### 命令行插件配置\n用户可以在Maven命令中使用-D参数，并伴随一个参数键=参数值得形式，来配置插件目标的参数。\n\n例如，maven-surefire-plugin提供了一个maven.test.skip参数，当其值为true的时候，就会跳过执行测试，于是在运行命令的时候，加上如下-D参数就能跳过测试。\n\n```\nmvn install -Dmaven.test.skip=true\n```\n\n参数-D是Java自带的，其功能是通过命令行设置一个Java系统属性，Maven简单的重用了该参数，在准备插件的时候检查系统属性，便实现了插件参数的配置。\n### 在POM中插件全局配置\n并不是所有的插件参数都适合从命令行配置，有些参数的值从项目创建到项目发布都不会改变，或者说很少改变，对于这种情况，在POM文件中一次性配置就显然比重负在命令行输入要方便。\n\n用户可以在声明插件的时候，对此插件进行一个全局配置。也就是说，所有该基于该插件目标的任务，都会使用这些配置。例如我们通常会需要配置maven-compiler-plugin告诉它配置Java1.5版本的源文件，生成与JVM1.5兼容的字节码文件，代码如下：\n\n```xml\n<build>\n    <plugins>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artfactId>\n            <version>2.1</version>\n            <configuration>\n                <source>1.5</source>\n                <target>1.5</target>\n            </configration>\n        </plugin>\n    </plugins>\n</build>\n```\n \n这样，不管绑定到compile阶段的`maven-compiler-plugin:compile`任务，还是绑定到test-compiler阶段的`maven-compiler-plugin:testCompiler`任务，这都能够使用该配置，基于Java1.5版本进行编译。\n\n\n\n### POM中插件任务配置\n除了为插件配置全局的参数，用户还可以为某个插件任务配置特定的参数。以maven-antrun-plugin为例，它有一个目标`run`,可以用来在Maven中调用Ant任务。用户将`maven-antrun-plugin:run`绑定到多个生命周期阶段上，再加以不同的配置，就可以让Maven在不同的生命周期执行不同的任务，代码如下:\n\n```xml\n<build>\n    <plugins>\n        <groupId>org.apache.maven.plugins<groupId>\n        <artifactId>maven-antrun-plugin</artifactId>\n        <version>1.3</version>\n        <executions>\n            <execution>\n                <id>ant-validate</id>\n                <phase>validate<phase>\n                <goals>\n                    <goal>run</goal>\n                </goals>\n                <configuration>\n                    <tasks>\n                        <echo>Im'bound to validate phase</echo>\n                    </tasks>\n                </configurationo>\n            </execution>\n            <execution>\n                <id>ant-verify</id>\n                <phase>verify</phase>\n                <goals>\n                    <goal>run</goal>\n                </goals>\n                <configuration>\n                    <tasks>\n                        <echo>I'm bound to verify phase</echo>\n                    </tasks>\n                </configuration>\n            </execution>\n        </executions>\n    </plugins>\n</build>\n```\n上述代码片段中，首先，`maven-antrun-plugin:run`与validate绑定，从而构成一个id为ant-validate的任务。插件全局配置中的configuration元素位于plugin元素下面，而这里的configuration元素则位于execution元素下，表示这是特定任务的配置，而非插件整体的配置。这个ant-validate任务配置了一个echo Ant任务，向命令行输出一段文字，表示该任务是绑定到validate阶段的。第二个任务的id为ant-verify，它绑定到了verify阶段，同样它也输出一段文字到命令行，告诉该任务绑定到了verify阶段。\n\n## 获取插件信息\n\n仅仅理解如何配置和使用插件是不够的，当遇到一个构建任务的时候，用户还需要知道去哪里寻找合适的插件，以帮助完成任务，找到正确的插件之后，还要详细了解该插件的配置点。由于Maven的插件非常多，这其中大部分没有完善文档，因此，使用正确的插件并进行正确的配置，其实并不是一件容易的事。\n### 在线插件信息\n基本所有的主要的Maven插件都来自Apache和Codehaus。由于Maven本身是属于Apache软件基金会的，因此他有很多的官方的插件，每天都有成千上万的Maven用户在使用这些插件，他们具有非常好的的稳定性。\n[官网插件介绍](https://maven.apache.org/plugins/index.html)  \n[插件列表](http://repo1.maven.org/maven2/org/apache/maven/plugins)  \n### 使用maven-help-plugin描述插件\n除了访问在线的插件文档之外，还可以借助maven-help-plugin来获取插件的详细信息。。可以运行一下命令来获取maven-compiler-plugin2.1版本的信息：\n\n```\nmvn help:describe-Dplugin=org.apache.maven.plugins:maven-compiler-plugin:2.1\n```\n这里执行的是maven-help-plugins的`describe`目标，在参数的plugin中输入需要描述插件的groupId、artfactId和version。Maven在命令行输出maven-compiler-plugin的简要信息。\n\n在描述插件的时候，还可以省去版本信息，让Maven自动获取最新版本来进行表述。例如：\n\n```\nmvn help:describe-Dplugin=org.apache.maven.plugins:maven-compiler-plugin\n```\n进一步简化，可以使用插件目标前缀替换坐标。例如：\n\n```\nmvn help:describe-Dplugin=compiler\n```\n如果仅仅想描述某个插件目标的信息，可以加上goal参数：\n\n```\nmvn help:describe-Dplugin=compiler-Dgoal=compile\n```\n如果想让maven-help-plugin输出更详细的信息，可以加上detail参数：\n\n```\nmvn help:describe -Dplugin=compiler-Ddetail\n```\n### 从命令行调用插件\n如果在命令行运行mvn -h来显示mvn命令帮助，可以看到如下的信息：\n\n```\nusage: mvn [options] [<goal(s)>] [<phase(s)>]\n \nOptions:\n -am,--also-make                        If project list is specified, also\n                                        build projects required by the\n                                        list\n -amd,--also-make-dependents            If project list is specified, also\n                                        build projects that depend on\n\n...\n```\n该信息告诉了我们mvn命令的基本用法，options表示可用的选项，mvn命令有20多个选项，除了选项之外，mvn命令后面可以添加一个或者多个goal和phase，他们分别是指插件目标和生命周期阶段\n\n可以通过mvn命令激活生命周期阶段，从而执行那些绑定在生命周期阶段上的插件目标。但Maven还支持直接从命令行调用插件目标。Maven支持这种方式是因为有些任务不适合绑定在生命周期上，例如maven-help-plugin:describe，我们不需要在构建项目的时候去描述插件信息，又如maven-dependency-plugin:tree,我们也不需要在构建项目的时候去显示依赖树，因此这些插件目标应该通过如下方式使用：\n\n```\nmvn help:describe-Dplugin=compiler\nmvn dependency:tree\n```\n不过这里有个疑问，describe是maven-help-plugin的目标没错，但是冒号前面的help是什么呢？它既不是groupId，也不是artifactId,Maven是如何根据该信息找到对应版本插件的呢？同理为什么不是`maven-dependency-plugin:tree`,而是`dependency:tree`\n\n解答该疑问之前，可以尝试一下如下命令：\n\n```\nmvn org.apache.maven.plugins:maven-help-plugin:2.1:describe-Dplugin=compiler\n\nmvn org.apache.maven.plugins:maven-dependency-plugin:2.1:tree\n```\n这两条命令就比较容易理解了，插件的groupId、artifactId、version以及goal都得以清晰描述。它们的效果与之前的两条命令基本是一样的，但是显然前面的命令更简洁，更容易记忆和使用。为了达到该目的，Maven引入了目标前缀的概念help是maven-help-plugin的目标前缀，dependency是maven-dependency-plugin的前缀，有了插件前缀，Maven就能找到对应的artifactId。不过，除了artifactId,Maven还需要得到groupId和version才能精确定位到某个插件。\n\n## 插件解析机制\n\n### 仓库元数据\n#### 插件元数据\n\n**主要用于解释插件版本**\n\n> 在远程仓库存放的位置结构:  \n> http://repo1.maven.org/maven2/groupId/artifactId/maven-metadata.xml  \n\n这里的groupId指的就是构件的groupId，artifactId指的是构件的artifactId，例如插件maven-compiler-plugin的元数据链接:  \nhttp://repo1.maven.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/maven-metadata.xml  \n内容如下：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<metadata>\n  <groupId>org.apache.maven.plugins</groupId>\n  <artifactId>maven-compiler-plugin</artifactId>\n  <versioning>\n    <latest>3.7.0</latest>\n    <release>3.7.0</release>\n    <versions>\n      <version>2.0-beta-1</version>\n      <version>2.0</version>\n      <version>2.0.1</version>\n      <version>2.0.2</version>\n      <version>2.1</version>\n      <version>2.2</version>\n      <version>2.3</version>\n      <version>2.3.1</version>\n      <version>2.3.2</version>\n      <version>2.4</version>\n      <version>2.5</version>\n      <version>2.5.1</version>\n      <version>3.0</version>\n      <version>3.1</version>\n      <version>3.2</version>\n      <version>3.3</version>\n      <version>3.5</version>\n      <version>3.5.1</version>\n      <version>3.6.0</version>\n      <version>3.6.1</version>\n      <version>3.6.2</version>\n      <version>3.7.0</version>\n    </versions>\n    <lastUpdated>20170904193138</lastUpdated>\n  </versioning>\n</metadata>\n```\n#### 插件前缀元数据\n\n**主要用于解释插件前缀**\n\n> 在远程仓库存放的位置结构:  \n> http://repo1.maven.org/maven2/groupId/maven-metadata.xml\n\n我们使用一般使用官方的插件就够了，官方插件默认的groupId为org.apache.maven.plugins，对应的链接为  \nhttp://repo1.maven.org/maven2/org/apache/maven/plugins/maven-metadata.xml  \n下面是前缀元数据xml文件截取的部分内容\n\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<metadata>\n  <plugins>\n    <plugin>\n      <name>Apache Maven ACR Plugin</name>\n      <prefix>acr</prefix>\n      <artifactId>maven-acr-plugin</artifactId>\n    </plugin>\n    <plugin>\n      <name>Apache Maven Ant Plugin</name>\n      <prefix>ant</prefix>\n      <artifactId>maven-ant-plugin</artifactId>\n    </plugin>\n    <plugin>\n      <name>Maven ANTLR Plugin</name>\n      <prefix>antlr</prefix>\n      <artifactId>maven-antlr-plugin</artifactId>\n    </plugin>\n    ……\n  </plugins>\n</metadata>\n```\n\n### 插件仓库\n与依赖仓库一样，插件构件同样基于坐标存储在Maven仓库中，在需要的时候Maven会从本地仓库查找插件，如果不存在，则从远程仓库查找。找到插件之后，再下载到本地仓库使用。\n\n需要注意的是，Maven会区别对待依赖的远程仓库与插件的远程仓库。前面提到如何配置远程仓库，但是这种配置只对一般依赖有效果，当Maven需要的依赖在本地仓库不存在时，它会去所配置的远程仓库中查找，可是当Maven需要的插件在本地仓库存在时，他就不会去那些远程仓库查找。\n\n不同于repositories及其repository子元素，插件的远程仓库使用pluginRepositories和pluginReposirory配置，例如，Maven的超级pom:pom-4.0.0.xml配置了如下的插件远程仓库,代码如下：\n\n```xml\n<pluginRepositories>\n    <pluginRepository>\n        <id>central</id>\n        <name>Maven Plugin Repository</name>\n        <url>http://repo1.maven.org/maven2</url>\n        <layout>default</layout>\n        <snapshots>\n            <enabled>false</enabled>\n        <snapshots>\n        <releases>\n            <updatePolicy>never</updatePolicy>\n        </releases>\n    </pluginRepository>\n</pluginRepositories>\n```\n一般来说，中央仓库所包含的插件完全能够满足我们的需要，因此也不需要配置其他的插件仓库。只有在很少的情况下，项目使用的插件无法在中央仓库找到，或者自己编写的插件，这个时候可以参考上述的配置，在POM或者settings.xml中加入其他的插件仓库配置。\n### 插件的默认groupId\n在POM配置中配置插件的时候，如果该插件是Maven的官方插件（即如果其groupId为org.apache.maven.plugins），就可以省略groupId配置，见代码清单：\n\n```xml\n<build>\n    <plugins>\n        <plugin>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>2.1</version>\n            <configuration>\n                <source>1.5</source>\n                <target>1.5</target>\n            </configuration>\n        </plugin>\n    </plugins>\n</build>\n```\n上面省略了配置maven-compiler-plugin的groupId，Maven在解析该插件的时候，会自动用默认groupId org.apache.maven.plugins补齐。但是并不推荐使用Maven的这一机制，这样虽然可以省略一些配置，但是这样的配置会让团队中不熟悉Maven的成员感到费解，况且能省略的配置也就仅仅一行而已。\n### 解析插件版本\n> 同样是为了简化插件的配置和使用，在用户没有提供插件版本的情况下，Maven会自动解析插件版本。\n> 首先，Maven的超级POM中为所有核心插件设定了版本,超级POM是所有Maven项目的父POM，所有项目都会继承这个超级POM配置，因此，即使用户不加任何配置，Maven使用核心插件的时候，他们的版本都已经确定了，这些插件包括maven-clean-plugin、maven-compiler-plugin、maven-surefire-plugin等。\n\n上面说法是来自其他博客，我表示质疑，我使用的是maven3.5.4，在超级pom中并没有发现其为所有核心插件设定了版本。这点不明白，以后搞清楚再补充。\n\n如果用户使用某个插件时没有设定版本，而这个插件又不属于核心插件范畴，Maven就会去检查所有仓库中的可用版本，然后做出选择。以maven-compiler-plugin为例，他在中央仓库的[仓库元数据](http://repo1.maven.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/maven-metadata.xml)\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<metadata>\n  <groupId>org.apache.maven.plugins</groupId>\n  <artifactId>maven-compiler-plugin</artifactId>\n  <versioning>\n    <latest>3.7.0</latest>\n    <release>3.7.0</release>\n    <versions>\n      <version>2.0-beta-1</version>\n      <version>2.0</version>\n      <version>2.0.1</version>\n      <version>2.0.2</version>\n      <version>2.1</version>\n      <version>2.2</version>\n      <version>2.3</version>\n      <version>2.3.1</version>\n      <version>2.3.2</version>\n      <version>2.4</version>\n      <version>2.5</version>\n      <version>2.5.1</version>\n      <version>3.0</version>\n      <version>3.1</version>\n      <version>3.2</version>\n      <version>3.3</version>\n      <version>3.5</version>\n      <version>3.5.1</version>\n      <version>3.6.0</version>\n      <version>3.6.1</version>\n      <version>3.6.2</version>\n      <version>3.7.0</version>\n    </versions>\n    <lastUpdated>20170904193138</lastUpdated>\n  </versioning>\n</metadata>\n```\nMaven遍历本地仓库和所有远程插件仓库，将该路径下的仓库元数据归并后，就能计算出latest和release的值。latest表示所有仓库中该构件的最新版本，而release表示最新的非快照版本。在Maven2中，插件的版本会被解析至latest。也就是说，当用户使用某个非核心插件且没有声明版本的时候，Maven会将版本解析为所有可用仓库中的最新版本，而这个版本也可能是快照版本的。\n\n当插件的版本为快照版本的时，就会出现潜在的问题。Maven会基于更新策略，检查并使用快照的更新。某个插件可能昨天还好好的，今天就出错了。其原因是因为这个版本的插件发生了变化，为了防止这类问题，Maven3调整了解析机制，当插件没有声明版本的时候，不再解析至latest，而是使用release。这样就可以避免由于快照频繁更新而导致的插件行为不稳定。\n\n依赖Maven解析插件版本其实是不推荐的做法，即使Maven3将版本解析到最新的非快照版本，也还是唯有潜在的不稳定性。例如，可能某个构件发布了一个新的版本，而这个版本的行为与之前的的版本发生了变化，这种变化就可能导致项目构建失败。因此，使用插件的时候，应该一直显式的设定版本，这也解释了Maven为什么要在超级POM中为核心插件设定版本。\n\n### 解析插件前缀\nmvn命令行支持使用插件前缀来简化插件的调用，现在解释Maven如何根据插件前缀解析到插件的坐标的。\n\n插件前缀与`groupId:artifactId`是一一对应的，这种匹配关系存储在仓库元数据中。这里的仓库元数据不是groupId/artifactId/maven-metadata.xml，而是groupId/maven-metadata.xml。当Maven解析前缀:\n\n* 首先会基于默认的groupId(org.apache.maven.plugins)归并所有插件仓库的元数据org/apache/maven/plugins/maven-metadata.xml\n* 其次检查归并后的元素，根据前缀(prefix)找到对应的artifactId；\n* 结合artifactId和groupId，最后获取version，这是就得到了完整的插件坐标。\n* 若org/apache/maven/plugins/maven-metadata.xml没有记录该插件前缀，则接着检查其他groupId下的元数据，如org/codehaus/mojo/maven-metadata.xml以及用户自定义的插件。若所有元数据都不包含该前缀，则报错。\n\n> 插件前缀元数据部分内容:\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<metadata>\n  <plugins>\n    <plugin>\n      <name>Apache Maven ACR Plugin</name>\n      <prefix>acr</prefix>\n      <artifactId>maven-acr-plugin</artifactId>\n    </plugin>\n    <plugin>\n      <name>Apache Maven Ant Plugin</name>\n      <prefix>ant</prefix>\n      <artifactId>maven-ant-plugin</artifactId>\n    </plugin>\n    <plugin>\n      <name>Maven ANTLR Plugin</name>\n      <prefix>antlr</prefix>\n      <artifactId>maven-antlr-plugin</artifactId>\n    </plugin>\n    ……\n  </plugins>\n</metadata>\n```\n\n## 参考资料\n\n>**321笨丫头**,[maven install、maven clean、project clean ](http://blog.sina.com.cn/s/blog_e01142dc0102wup3.html)\n>**lofty**,[Maven——生命周期与插件****](https://www.cnblogs.com/wangwei-beijing/p/6535081.html)\n\n\n","slug":"maven(二)生命周期和插件","published":1,"updated":"2018-08-12T06:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkqg7nqx0009dfzl1rya2ayo","content":"<h2 id=\"maven生命周期\"><a href=\"#maven生命周期\" class=\"headerlink\" title=\"maven生命周期\"></a>maven生命周期</h2><p>maven抽象出了3套生命周期，其具体实现是依赖于<a href=\"https://maven.apache.org/plugins/index.html\" target=\"_blank\" rel=\"noopener\">插件</a>。每套生命周期是相互独立的，都由一组阶段(Phase)组成。每套生命周期中的阶段是有顺序的，后面阶段依赖于前面的阶段，执行后面阶段会自动执行之前的阶段，但不会触发不同生命周期的阶段。<br><a id=\"more\"></a><br><strong>下面是三个生命周期及其包含的阶段。</strong></p>\n<h3 id=\"Clean-Lifecycle\"><a href=\"#Clean-Lifecycle\" class=\"headerlink\" title=\"Clean Lifecycle\"></a>Clean Lifecycle</h3><p>清理项目，在进行真正的构建之前进行一些清理工作。</p>\n<ul>\n<li><p><code>pre-clean</code>     执行clean前需要完成的工作  </p>\n</li>\n<li><p><code>clean</code>     clean上一次构建生成的所有文件  </p>\n</li>\n<li><p><code>post-clean</code>    执行clean后需要立刻完成的工作  </p>\n</li>\n</ul>\n<p>这里的clean就是指的<code>mvn clean</code>。在一套生命周期内，运行某个阶段会自动按序运行之前阶段，<code>mvn clean=mvn pre-clean clean</code>。</p>\n<h3 id=\"Default-Lifecycle\"><a href=\"#Default-Lifecycle\" class=\"headerlink\" title=\"Default Lifecycle\"></a>Default Lifecycle</h3><p><strong>构建的核心部分</strong>，编译，测试，打包，部署等等。</p>\n<ul>\n<li><p><code>validate</code>      验证项目是否正确，并且所有必要的信息可用于完成构建过程</p>\n</li>\n<li><p><code>initialize</code>    建立初始化状态，例如设置属性</p>\n</li>\n<li><p><code>generate-sources</code></p>\n</li>\n<li><p><code>process-sources</code> </p>\n</li>\n<li><p><code>generate-resources</code></p>\n</li>\n<li><p><code>process-resources</code>     复制并处理资源文件，至目标目录，准备打包。</p>\n</li>\n<li><p><code>compile</code>     编译项目的源代码。</p>\n</li>\n<li><p><code>process-classes</code></p>\n</li>\n<li><p><code>generate-test-sources</code></p>\n</li>\n<li><p><code>process-test-sources</code> </p>\n</li>\n<li><p><code>generate-test-resources</code></p>\n</li>\n<li><p><code>process-test-resources</code>     复制并处理资源文件，至目标测试目录。</p>\n</li>\n<li><p><code>test-compile</code>     编译测试源代码。</p>\n</li>\n<li><p><code>process-test-classes</code></p>\n</li>\n<li><p><code>test</code>     使用合适的单元测试框架运行测试。这些测试代码不会被打包或部署。</p>\n</li>\n<li><p><code>prepare-package</code></p>\n</li>\n<li><p><code>package</code>     提取编译后的代码，并在其分发格式打包，如JAR，WAR或EAR文件</p>\n</li>\n<li><p><code>pre-integration-test</code>     完成执行集成测试之前所需操作。例如，设置所需的环境</p>\n</li>\n<li><p><code>integration-test</code></p>\n</li>\n<li><p><code>post-integration-test</code>     完成集成测试已全部执行后所需操作。例如，清理环境</p>\n</li>\n<li><p><code>verify</code>        运行任何检查，验证包是有效的，符合质量审核规定</p>\n</li>\n<li><p><code>install</code>     将包安装至本地仓库，以让其它项目依赖。</p>\n</li>\n<li><p><code>deploy</code>     将最终的包复制到远程的仓库，以让其它开发人员与项目共享    </p>\n</li>\n</ul>\n<h3 id=\"Site-Lifecycle\"><a href=\"#Site-Lifecycle\" class=\"headerlink\" title=\"Site Lifecycle\"></a>Site Lifecycle</h3><p>生成项目报告，站点，发布站点。</p>\n<ul>\n<li><p><code>pre-site</code>     执行一些需要在生成站点文档(html)之前完成的工作</p>\n</li>\n<li><p><code>site</code>     生成项目信息的站点文档</p>\n</li>\n<li><p><code>post-site</code>    执行一些需要在生成站点文档之后完成的工作，并且为部署做准备</p>\n</li>\n<li><p><code>site-deploy</code>     将生成的站点文档部署到特定的服务器上</p>\n</li>\n</ul>\n<h2 id=\"maven插件目标\"><a href=\"#maven插件目标\" class=\"headerlink\" title=\"maven插件目标\"></a>maven插件目标</h2><p>maven本质是一个插件框架，maven每个生命周期的每个阶段(phase)默认绑定了一个或多个插件中的一个或多个目标。用户可以自行配置或编写插件。<br><strong>一个插件对应一个或多个目标，一个插件可以绑定多个生命周期阶段。</strong></p>\n<h2 id=\"两种方式调用插件目标\"><a href=\"#两种方式调用插件目标\" class=\"headerlink\" title=\"两种方式调用插件目标\"></a>两种方式调用插件目标</h2><h3 id=\"插件目标绑定maven生命周期阶段\"><a href=\"#插件目标绑定maven生命周期阶段\" class=\"headerlink\" title=\"插件目标绑定maven生命周期阶段\"></a>插件目标绑定maven生命周期阶段</h3><p>   这分为内置绑定和自定义绑定。</p>\n<ul>\n<li>内置绑定。maven的生命周期的阶段已经默认和一些插件的目标进行了绑定。例如Maven默认将<code>maven-compiler-plugin</code>的<code>compile</code>目标与compile生命周期阶段绑定，因此命令mvn compile实际上是先定位到compile这一生命周期阶段，然后再根据绑定关系调用maven-compiler-plugin的<code>compile</code>目标。  </li>\n<li>自定义绑定。在pom.xml中进行配置，我们可以根据需要将任何插件目标绑定到任何生命周期的任何阶段。如：将maven-source-plugin的<code>jar-no-fork</code>目标绑定到default生命周期的package阶段，这样，以后在执行<code>mvn package</code>命令打包项目时，在package<strong>阶段之后</strong>会执行源代码打包。<br><strong>自定义绑定的插件目标是在绑定的生命周期阶段之后执行的</strong></li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-source-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span> <span class=\"comment\">&lt;!--执行--&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>attach-source<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"comment\">&lt;!-- 要绑定到的生命周期的阶段 --&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"comment\">&lt;!-- 要绑定的插件的目标，在maven官网plugins上可以查到 --&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>jar-no-fork<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    ……</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"运行命令时直接指定插件目标-与生命周期无关\"><a href=\"#运行命令时直接指定插件目标-与生命周期无关\" class=\"headerlink\" title=\"运行命令时直接指定插件目标(与生命周期无关)\"></a>运行命令时直接指定插件目标(与生命周期无关)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn 插件目标前缀(prefix):插件目标</span><br></pre></td></tr></table></figure>\n<p>各插件目标的命令在官网可以查。例如<code>mvn archetype:generate</code> 就表示调用maven-archetype-plugin的<code>generate</code>目标，这种<strong>带冒号的调用方式与生命周期无关</strong>。</p>\n<h2 id=\"插件配置\"><a href=\"#插件配置\" class=\"headerlink\" title=\"插件配置\"></a>插件配置</h2><p>完成插件和生命周期的绑定后，用户还可以配置插件目标的参数，进一步调整插件目标所执行的任务，以满足项目的需求。几乎所有的Maven插件的目标都有一些可配置的参数，用户可以通过命令行和POM配置的方式来配置这些参数。</p>\n<h3 id=\"命令行插件配置\"><a href=\"#命令行插件配置\" class=\"headerlink\" title=\"命令行插件配置\"></a>命令行插件配置</h3><p>用户可以在Maven命令中使用-D参数，并伴随一个参数键=参数值得形式，来配置插件目标的参数。</p>\n<p>例如，maven-surefire-plugin提供了一个maven.test.skip参数，当其值为true的时候，就会跳过执行测试，于是在运行命令的时候，加上如下-D参数就能跳过测试。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn install -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure>\n<p>参数-D是Java自带的，其功能是通过命令行设置一个Java系统属性，Maven简单的重用了该参数，在准备插件的时候检查系统属性，便实现了插件参数的配置。</p>\n<h3 id=\"在POM中插件全局配置\"><a href=\"#在POM中插件全局配置\" class=\"headerlink\" title=\"在POM中插件全局配置\"></a>在POM中插件全局配置</h3><p>并不是所有的插件参数都适合从命令行配置，有些参数的值从项目创建到项目发布都不会改变，或者说很少改变，对于这种情况，在POM文件中一次性配置就显然比重负在命令行输入要方便。</p>\n<p>用户可以在声明插件的时候，对此插件进行一个全局配置。也就是说，所有该基于该插件目标的任务，都会使用这些配置。例如我们通常会需要配置maven-compiler-plugin告诉它配置Java1.5版本的源文件，生成与JVM1.5兼容的字节码文件，代码如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artfactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">source</span>&gt;</span>1.5<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">target</span>&gt;</span>1.5<span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">configration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样，不管绑定到compile阶段的<code>maven-compiler-plugin:compile</code>任务，还是绑定到test-compiler阶段的<code>maven-compiler-plugin:testCompiler</code>任务，这都能够使用该配置，基于Java1.5版本进行编译。</p>\n<h3 id=\"POM中插件任务配置\"><a href=\"#POM中插件任务配置\" class=\"headerlink\" title=\"POM中插件任务配置\"></a>POM中插件任务配置</h3><p>除了为插件配置全局的参数，用户还可以为某个插件任务配置特定的参数。以maven-antrun-plugin为例，它有一个目标<code>run</code>,可以用来在Maven中调用Ant任务。用户将<code>maven-antrun-plugin:run</code>绑定到多个生命周期阶段上，再加以不同的配置，就可以让Maven在不同的生命周期执行不同的任务，代码如下:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-antrun-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ant-validate<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>validate<span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>run<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">tasks</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">echo</span>&gt;</span>Im'bound to validate phase<span class=\"tag\">&lt;/<span class=\"name\">echo</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">tasks</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configurationo</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ant-verify<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>verify<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>run<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">tasks</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">echo</span>&gt;</span>I'm bound to verify phase<span class=\"tag\">&lt;/<span class=\"name\">echo</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">tasks</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上述代码片段中，首先，<code>maven-antrun-plugin:run</code>与validate绑定，从而构成一个id为ant-validate的任务。插件全局配置中的configuration元素位于plugin元素下面，而这里的configuration元素则位于execution元素下，表示这是特定任务的配置，而非插件整体的配置。这个ant-validate任务配置了一个echo Ant任务，向命令行输出一段文字，表示该任务是绑定到validate阶段的。第二个任务的id为ant-verify，它绑定到了verify阶段，同样它也输出一段文字到命令行，告诉该任务绑定到了verify阶段。</p>\n<h2 id=\"获取插件信息\"><a href=\"#获取插件信息\" class=\"headerlink\" title=\"获取插件信息\"></a>获取插件信息</h2><p>仅仅理解如何配置和使用插件是不够的，当遇到一个构建任务的时候，用户还需要知道去哪里寻找合适的插件，以帮助完成任务，找到正确的插件之后，还要详细了解该插件的配置点。由于Maven的插件非常多，这其中大部分没有完善文档，因此，使用正确的插件并进行正确的配置，其实并不是一件容易的事。</p>\n<h3 id=\"在线插件信息\"><a href=\"#在线插件信息\" class=\"headerlink\" title=\"在线插件信息\"></a>在线插件信息</h3><p>基本所有的主要的Maven插件都来自Apache和Codehaus。由于Maven本身是属于Apache软件基金会的，因此他有很多的官方的插件，每天都有成千上万的Maven用户在使用这些插件，他们具有非常好的的稳定性。<br><a href=\"https://maven.apache.org/plugins/index.html\" target=\"_blank\" rel=\"noopener\">官网插件介绍</a><br><a href=\"http://repo1.maven.org/maven2/org/apache/maven/plugins\" target=\"_blank\" rel=\"noopener\">插件列表</a>  </p>\n<h3 id=\"使用maven-help-plugin描述插件\"><a href=\"#使用maven-help-plugin描述插件\" class=\"headerlink\" title=\"使用maven-help-plugin描述插件\"></a>使用maven-help-plugin描述插件</h3><p>除了访问在线的插件文档之外，还可以借助maven-help-plugin来获取插件的详细信息。。可以运行一下命令来获取maven-compiler-plugin2.1版本的信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe-Dplugin=org.apache.maven.plugins:maven-compiler-plugin:2.1</span><br></pre></td></tr></table></figure>\n<p>这里执行的是maven-help-plugins的<code>describe</code>目标，在参数的plugin中输入需要描述插件的groupId、artfactId和version。Maven在命令行输出maven-compiler-plugin的简要信息。</p>\n<p>在描述插件的时候，还可以省去版本信息，让Maven自动获取最新版本来进行表述。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe-Dplugin=org.apache.maven.plugins:maven-compiler-plugin</span><br></pre></td></tr></table></figure>\n<p>进一步简化，可以使用插件目标前缀替换坐标。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe-Dplugin=compiler</span><br></pre></td></tr></table></figure>\n<p>如果仅仅想描述某个插件目标的信息，可以加上goal参数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe-Dplugin=compiler-Dgoal=compile</span><br></pre></td></tr></table></figure>\n<p>如果想让maven-help-plugin输出更详细的信息，可以加上detail参数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe -Dplugin=compiler-Ddetail</span><br></pre></td></tr></table></figure>\n<h3 id=\"从命令行调用插件\"><a href=\"#从命令行调用插件\" class=\"headerlink\" title=\"从命令行调用插件\"></a>从命令行调用插件</h3><p>如果在命令行运行mvn -h来显示mvn命令帮助，可以看到如下的信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">usage: mvn [options] [&lt;goal(s)&gt;] [&lt;phase(s)&gt;]</span><br><span class=\"line\"> </span><br><span class=\"line\">Options:</span><br><span class=\"line\"> -am,--also-make                        If project list is specified, also</span><br><span class=\"line\">                                        build projects required by the</span><br><span class=\"line\">                                        list</span><br><span class=\"line\"> -amd,--also-make-dependents            If project list is specified, also</span><br><span class=\"line\">                                        build projects that depend on</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>该信息告诉了我们mvn命令的基本用法，options表示可用的选项，mvn命令有20多个选项，除了选项之外，mvn命令后面可以添加一个或者多个goal和phase，他们分别是指插件目标和生命周期阶段</p>\n<p>可以通过mvn命令激活生命周期阶段，从而执行那些绑定在生命周期阶段上的插件目标。但Maven还支持直接从命令行调用插件目标。Maven支持这种方式是因为有些任务不适合绑定在生命周期上，例如maven-help-plugin:describe，我们不需要在构建项目的时候去描述插件信息，又如maven-dependency-plugin:tree,我们也不需要在构建项目的时候去显示依赖树，因此这些插件目标应该通过如下方式使用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe-Dplugin=compiler</span><br><span class=\"line\">mvn dependency:tree</span><br></pre></td></tr></table></figure>\n<p>不过这里有个疑问，describe是maven-help-plugin的目标没错，但是冒号前面的help是什么呢？它既不是groupId，也不是artifactId,Maven是如何根据该信息找到对应版本插件的呢？同理为什么不是<code>maven-dependency-plugin:tree</code>,而是<code>dependency:tree</code></p>\n<p>解答该疑问之前，可以尝试一下如下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn org.apache.maven.plugins:maven-help-plugin:2.1:describe-Dplugin=compiler</span><br><span class=\"line\"></span><br><span class=\"line\">mvn org.apache.maven.plugins:maven-dependency-plugin:2.1:tree</span><br></pre></td></tr></table></figure>\n<p>这两条命令就比较容易理解了，插件的groupId、artifactId、version以及goal都得以清晰描述。它们的效果与之前的两条命令基本是一样的，但是显然前面的命令更简洁，更容易记忆和使用。为了达到该目的，Maven引入了目标前缀的概念help是maven-help-plugin的目标前缀，dependency是maven-dependency-plugin的前缀，有了插件前缀，Maven就能找到对应的artifactId。不过，除了artifactId,Maven还需要得到groupId和version才能精确定位到某个插件。</p>\n<h2 id=\"插件解析机制\"><a href=\"#插件解析机制\" class=\"headerlink\" title=\"插件解析机制\"></a>插件解析机制</h2><h3 id=\"仓库元数据\"><a href=\"#仓库元数据\" class=\"headerlink\" title=\"仓库元数据\"></a>仓库元数据</h3><h4 id=\"插件元数据\"><a href=\"#插件元数据\" class=\"headerlink\" title=\"插件元数据\"></a>插件元数据</h4><p><strong>主要用于解释插件版本</strong></p>\n<blockquote>\n<p>在远程仓库存放的位置结构:<br><a href=\"http://repo1.maven.org/maven2/groupId/artifactId/maven-metadata.xml\" target=\"_blank\" rel=\"noopener\">http://repo1.maven.org/maven2/groupId/artifactId/maven-metadata.xml</a>  </p>\n</blockquote>\n<p>这里的groupId指的就是构件的groupId，artifactId指的是构件的artifactId，例如插件maven-compiler-plugin的元数据链接:<br><a href=\"http://repo1.maven.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/maven-metadata.xml\" target=\"_blank\" rel=\"noopener\">http://repo1.maven.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/maven-metadata.xml</a><br>内容如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">metadata</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">versioning</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">latest</span>&gt;</span>3.7.0<span class=\"tag\">&lt;/<span class=\"name\">latest</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">release</span>&gt;</span>3.7.0<span class=\"tag\">&lt;/<span class=\"name\">release</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">versions</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0-beta-1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.6.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.6.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.6.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.7.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">versions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">lastUpdated</span>&gt;</span>20170904193138<span class=\"tag\">&lt;/<span class=\"name\">lastUpdated</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">versioning</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">metadata</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"插件前缀元数据\"><a href=\"#插件前缀元数据\" class=\"headerlink\" title=\"插件前缀元数据\"></a>插件前缀元数据</h4><p><strong>主要用于解释插件前缀</strong></p>\n<blockquote>\n<p>在远程仓库存放的位置结构:<br><a href=\"http://repo1.maven.org/maven2/groupId/maven-metadata.xml\" target=\"_blank\" rel=\"noopener\">http://repo1.maven.org/maven2/groupId/maven-metadata.xml</a></p>\n</blockquote>\n<p>我们使用一般使用官方的插件就够了，官方插件默认的groupId为org.apache.maven.plugins，对应的链接为<br><a href=\"http://repo1.maven.org/maven2/org/apache/maven/plugins/maven-metadata.xml\" target=\"_blank\" rel=\"noopener\">http://repo1.maven.org/maven2/org/apache/maven/plugins/maven-metadata.xml</a><br>下面是前缀元数据xml文件截取的部分内容</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">metadata</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Apache Maven ACR Plugin<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">prefix</span>&gt;</span>acr<span class=\"tag\">&lt;/<span class=\"name\">prefix</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-acr-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Apache Maven Ant Plugin<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">prefix</span>&gt;</span>ant<span class=\"tag\">&lt;/<span class=\"name\">prefix</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-ant-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Maven ANTLR Plugin<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">prefix</span>&gt;</span>antlr<span class=\"tag\">&lt;/<span class=\"name\">prefix</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-antlr-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    ……</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">metadata</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"插件仓库\"><a href=\"#插件仓库\" class=\"headerlink\" title=\"插件仓库\"></a>插件仓库</h3><p>与依赖仓库一样，插件构件同样基于坐标存储在Maven仓库中，在需要的时候Maven会从本地仓库查找插件，如果不存在，则从远程仓库查找。找到插件之后，再下载到本地仓库使用。</p>\n<p>需要注意的是，Maven会区别对待依赖的远程仓库与插件的远程仓库。前面提到如何配置远程仓库，但是这种配置只对一般依赖有效果，当Maven需要的依赖在本地仓库不存在时，它会去所配置的远程仓库中查找，可是当Maven需要的插件在本地仓库存在时，他就不会去那些远程仓库查找。</p>\n<p>不同于repositories及其repository子元素，插件的远程仓库使用pluginRepositories和pluginReposirory配置，例如，Maven的超级pom:pom-4.0.0.xml配置了如下的插件远程仓库,代码如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Maven Plugin Repository<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://repo1.maven.org/maven2<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">layout</span>&gt;</span>default<span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>&gt;</span>never<span class=\"tag\">&lt;/<span class=\"name\">updatePolicy</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">pluginRepositories</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>一般来说，中央仓库所包含的插件完全能够满足我们的需要，因此也不需要配置其他的插件仓库。只有在很少的情况下，项目使用的插件无法在中央仓库找到，或者自己编写的插件，这个时候可以参考上述的配置，在POM或者settings.xml中加入其他的插件仓库配置。</p>\n<h3 id=\"插件的默认groupId\"><a href=\"#插件的默认groupId\" class=\"headerlink\" title=\"插件的默认groupId\"></a>插件的默认groupId</h3><p>在POM配置中配置插件的时候，如果该插件是Maven的官方插件（即如果其groupId为org.apache.maven.plugins），就可以省略groupId配置，见代码清单：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">source</span>&gt;</span>1.5<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">target</span>&gt;</span>1.5<span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面省略了配置maven-compiler-plugin的groupId，Maven在解析该插件的时候，会自动用默认groupId org.apache.maven.plugins补齐。但是并不推荐使用Maven的这一机制，这样虽然可以省略一些配置，但是这样的配置会让团队中不熟悉Maven的成员感到费解，况且能省略的配置也就仅仅一行而已。</p>\n<h3 id=\"解析插件版本\"><a href=\"#解析插件版本\" class=\"headerlink\" title=\"解析插件版本\"></a>解析插件版本</h3><blockquote>\n<p>同样是为了简化插件的配置和使用，在用户没有提供插件版本的情况下，Maven会自动解析插件版本。<br>首先，Maven的超级POM中为所有核心插件设定了版本,超级POM是所有Maven项目的父POM，所有项目都会继承这个超级POM配置，因此，即使用户不加任何配置，Maven使用核心插件的时候，他们的版本都已经确定了，这些插件包括maven-clean-plugin、maven-compiler-plugin、maven-surefire-plugin等。</p>\n</blockquote>\n<p>上面说法是来自其他博客，我表示质疑，我使用的是maven3.5.4，在超级pom中并没有发现其为所有核心插件设定了版本。这点不明白，以后搞清楚再补充。</p>\n<p>如果用户使用某个插件时没有设定版本，而这个插件又不属于核心插件范畴，Maven就会去检查所有仓库中的可用版本，然后做出选择。以maven-compiler-plugin为例，他在中央仓库的<a href=\"http://repo1.maven.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/maven-metadata.xml\" target=\"_blank\" rel=\"noopener\">仓库元数据</a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">metadata</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">versioning</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">latest</span>&gt;</span>3.7.0<span class=\"tag\">&lt;/<span class=\"name\">latest</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">release</span>&gt;</span>3.7.0<span class=\"tag\">&lt;/<span class=\"name\">release</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">versions</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0-beta-1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.6.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.6.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.6.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.7.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">versions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">lastUpdated</span>&gt;</span>20170904193138<span class=\"tag\">&lt;/<span class=\"name\">lastUpdated</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">versioning</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">metadata</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Maven遍历本地仓库和所有远程插件仓库，将该路径下的仓库元数据归并后，就能计算出latest和release的值。latest表示所有仓库中该构件的最新版本，而release表示最新的非快照版本。在Maven2中，插件的版本会被解析至latest。也就是说，当用户使用某个非核心插件且没有声明版本的时候，Maven会将版本解析为所有可用仓库中的最新版本，而这个版本也可能是快照版本的。</p>\n<p>当插件的版本为快照版本的时，就会出现潜在的问题。Maven会基于更新策略，检查并使用快照的更新。某个插件可能昨天还好好的，今天就出错了。其原因是因为这个版本的插件发生了变化，为了防止这类问题，Maven3调整了解析机制，当插件没有声明版本的时候，不再解析至latest，而是使用release。这样就可以避免由于快照频繁更新而导致的插件行为不稳定。</p>\n<p>依赖Maven解析插件版本其实是不推荐的做法，即使Maven3将版本解析到最新的非快照版本，也还是唯有潜在的不稳定性。例如，可能某个构件发布了一个新的版本，而这个版本的行为与之前的的版本发生了变化，这种变化就可能导致项目构建失败。因此，使用插件的时候，应该一直显式的设定版本，这也解释了Maven为什么要在超级POM中为核心插件设定版本。</p>\n<h3 id=\"解析插件前缀\"><a href=\"#解析插件前缀\" class=\"headerlink\" title=\"解析插件前缀\"></a>解析插件前缀</h3><p>mvn命令行支持使用插件前缀来简化插件的调用，现在解释Maven如何根据插件前缀解析到插件的坐标的。</p>\n<p>插件前缀与<code>groupId:artifactId</code>是一一对应的，这种匹配关系存储在仓库元数据中。这里的仓库元数据不是groupId/artifactId/maven-metadata.xml，而是groupId/maven-metadata.xml。当Maven解析前缀:</p>\n<ul>\n<li>首先会基于默认的groupId(org.apache.maven.plugins)归并所有插件仓库的元数据org/apache/maven/plugins/maven-metadata.xml</li>\n<li>其次检查归并后的元素，根据前缀(prefix)找到对应的artifactId；</li>\n<li>结合artifactId和groupId，最后获取version，这是就得到了完整的插件坐标。</li>\n<li>若org/apache/maven/plugins/maven-metadata.xml没有记录该插件前缀，则接着检查其他groupId下的元数据，如org/codehaus/mojo/maven-metadata.xml以及用户自定义的插件。若所有元数据都不包含该前缀，则报错。</li>\n</ul>\n<blockquote>\n<p>插件前缀元数据部分内容:</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">metadata</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Apache Maven ACR Plugin<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">prefix</span>&gt;</span>acr<span class=\"tag\">&lt;/<span class=\"name\">prefix</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-acr-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Apache Maven Ant Plugin<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">prefix</span>&gt;</span>ant<span class=\"tag\">&lt;/<span class=\"name\">prefix</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-ant-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Maven ANTLR Plugin<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">prefix</span>&gt;</span>antlr<span class=\"tag\">&lt;/<span class=\"name\">prefix</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-antlr-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    ……</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">metadata</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><blockquote>\n<p><strong>321笨丫头</strong>,<a href=\"http://blog.sina.com.cn/s/blog_e01142dc0102wup3.html\" target=\"_blank\" rel=\"noopener\">maven install、maven clean、project clean </a><br><strong>lofty</strong>,<a href=\"https://www.cnblogs.com/wangwei-beijing/p/6535081.html\" target=\"_blank\" rel=\"noopener\">Maven——生命周期与插件<em>**</em></a></p>\n</blockquote>\n","site":{"data":{}},"abbrlink":"fa942646","excerpt":"<h2 id=\"maven生命周期\"><a href=\"#maven生命周期\" class=\"headerlink\" title=\"maven生命周期\"></a>maven生命周期</h2><p>maven抽象出了3套生命周期，其具体实现是依赖于<a href=\"https://maven.apache.org/plugins/index.html\" target=\"_blank\" rel=\"noopener\">插件</a>。每套生命周期是相互独立的，都由一组阶段(Phase)组成。每套生命周期中的阶段是有顺序的，后面阶段依赖于前面的阶段，执行后面阶段会自动执行之前的阶段，但不会触发不同生命周期的阶段。<br>","more":"<br><strong>下面是三个生命周期及其包含的阶段。</strong></p>\n<h3 id=\"Clean-Lifecycle\"><a href=\"#Clean-Lifecycle\" class=\"headerlink\" title=\"Clean Lifecycle\"></a>Clean Lifecycle</h3><p>清理项目，在进行真正的构建之前进行一些清理工作。</p>\n<ul>\n<li><p><code>pre-clean</code>     执行clean前需要完成的工作  </p>\n</li>\n<li><p><code>clean</code>     clean上一次构建生成的所有文件  </p>\n</li>\n<li><p><code>post-clean</code>    执行clean后需要立刻完成的工作  </p>\n</li>\n</ul>\n<p>这里的clean就是指的<code>mvn clean</code>。在一套生命周期内，运行某个阶段会自动按序运行之前阶段，<code>mvn clean=mvn pre-clean clean</code>。</p>\n<h3 id=\"Default-Lifecycle\"><a href=\"#Default-Lifecycle\" class=\"headerlink\" title=\"Default Lifecycle\"></a>Default Lifecycle</h3><p><strong>构建的核心部分</strong>，编译，测试，打包，部署等等。</p>\n<ul>\n<li><p><code>validate</code>      验证项目是否正确，并且所有必要的信息可用于完成构建过程</p>\n</li>\n<li><p><code>initialize</code>    建立初始化状态，例如设置属性</p>\n</li>\n<li><p><code>generate-sources</code></p>\n</li>\n<li><p><code>process-sources</code> </p>\n</li>\n<li><p><code>generate-resources</code></p>\n</li>\n<li><p><code>process-resources</code>     复制并处理资源文件，至目标目录，准备打包。</p>\n</li>\n<li><p><code>compile</code>     编译项目的源代码。</p>\n</li>\n<li><p><code>process-classes</code></p>\n</li>\n<li><p><code>generate-test-sources</code></p>\n</li>\n<li><p><code>process-test-sources</code> </p>\n</li>\n<li><p><code>generate-test-resources</code></p>\n</li>\n<li><p><code>process-test-resources</code>     复制并处理资源文件，至目标测试目录。</p>\n</li>\n<li><p><code>test-compile</code>     编译测试源代码。</p>\n</li>\n<li><p><code>process-test-classes</code></p>\n</li>\n<li><p><code>test</code>     使用合适的单元测试框架运行测试。这些测试代码不会被打包或部署。</p>\n</li>\n<li><p><code>prepare-package</code></p>\n</li>\n<li><p><code>package</code>     提取编译后的代码，并在其分发格式打包，如JAR，WAR或EAR文件</p>\n</li>\n<li><p><code>pre-integration-test</code>     完成执行集成测试之前所需操作。例如，设置所需的环境</p>\n</li>\n<li><p><code>integration-test</code></p>\n</li>\n<li><p><code>post-integration-test</code>     完成集成测试已全部执行后所需操作。例如，清理环境</p>\n</li>\n<li><p><code>verify</code>        运行任何检查，验证包是有效的，符合质量审核规定</p>\n</li>\n<li><p><code>install</code>     将包安装至本地仓库，以让其它项目依赖。</p>\n</li>\n<li><p><code>deploy</code>     将最终的包复制到远程的仓库，以让其它开发人员与项目共享    </p>\n</li>\n</ul>\n<h3 id=\"Site-Lifecycle\"><a href=\"#Site-Lifecycle\" class=\"headerlink\" title=\"Site Lifecycle\"></a>Site Lifecycle</h3><p>生成项目报告，站点，发布站点。</p>\n<ul>\n<li><p><code>pre-site</code>     执行一些需要在生成站点文档(html)之前完成的工作</p>\n</li>\n<li><p><code>site</code>     生成项目信息的站点文档</p>\n</li>\n<li><p><code>post-site</code>    执行一些需要在生成站点文档之后完成的工作，并且为部署做准备</p>\n</li>\n<li><p><code>site-deploy</code>     将生成的站点文档部署到特定的服务器上</p>\n</li>\n</ul>\n<h2 id=\"maven插件目标\"><a href=\"#maven插件目标\" class=\"headerlink\" title=\"maven插件目标\"></a>maven插件目标</h2><p>maven本质是一个插件框架，maven每个生命周期的每个阶段(phase)默认绑定了一个或多个插件中的一个或多个目标。用户可以自行配置或编写插件。<br><strong>一个插件对应一个或多个目标，一个插件可以绑定多个生命周期阶段。</strong></p>\n<h2 id=\"两种方式调用插件目标\"><a href=\"#两种方式调用插件目标\" class=\"headerlink\" title=\"两种方式调用插件目标\"></a>两种方式调用插件目标</h2><h3 id=\"插件目标绑定maven生命周期阶段\"><a href=\"#插件目标绑定maven生命周期阶段\" class=\"headerlink\" title=\"插件目标绑定maven生命周期阶段\"></a>插件目标绑定maven生命周期阶段</h3><p>   这分为内置绑定和自定义绑定。</p>\n<ul>\n<li>内置绑定。maven的生命周期的阶段已经默认和一些插件的目标进行了绑定。例如Maven默认将<code>maven-compiler-plugin</code>的<code>compile</code>目标与compile生命周期阶段绑定，因此命令mvn compile实际上是先定位到compile这一生命周期阶段，然后再根据绑定关系调用maven-compiler-plugin的<code>compile</code>目标。  </li>\n<li>自定义绑定。在pom.xml中进行配置，我们可以根据需要将任何插件目标绑定到任何生命周期的任何阶段。如：将maven-source-plugin的<code>jar-no-fork</code>目标绑定到default生命周期的package阶段，这样，以后在执行<code>mvn package</code>命令打包项目时，在package<strong>阶段之后</strong>会执行源代码打包。<br><strong>自定义绑定的插件目标是在绑定的生命周期阶段之后执行的</strong></li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-source-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span> <span class=\"comment\">&lt;!--执行--&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>attach-source<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"comment\">&lt;!-- 要绑定到的生命周期的阶段 --&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>package<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"comment\">&lt;!-- 要绑定的插件的目标，在maven官网plugins上可以查到 --&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>jar-no-fork<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    ……</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"运行命令时直接指定插件目标-与生命周期无关\"><a href=\"#运行命令时直接指定插件目标-与生命周期无关\" class=\"headerlink\" title=\"运行命令时直接指定插件目标(与生命周期无关)\"></a>运行命令时直接指定插件目标(与生命周期无关)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn 插件目标前缀(prefix):插件目标</span><br></pre></td></tr></table></figure>\n<p>各插件目标的命令在官网可以查。例如<code>mvn archetype:generate</code> 就表示调用maven-archetype-plugin的<code>generate</code>目标，这种<strong>带冒号的调用方式与生命周期无关</strong>。</p>\n<h2 id=\"插件配置\"><a href=\"#插件配置\" class=\"headerlink\" title=\"插件配置\"></a>插件配置</h2><p>完成插件和生命周期的绑定后，用户还可以配置插件目标的参数，进一步调整插件目标所执行的任务，以满足项目的需求。几乎所有的Maven插件的目标都有一些可配置的参数，用户可以通过命令行和POM配置的方式来配置这些参数。</p>\n<h3 id=\"命令行插件配置\"><a href=\"#命令行插件配置\" class=\"headerlink\" title=\"命令行插件配置\"></a>命令行插件配置</h3><p>用户可以在Maven命令中使用-D参数，并伴随一个参数键=参数值得形式，来配置插件目标的参数。</p>\n<p>例如，maven-surefire-plugin提供了一个maven.test.skip参数，当其值为true的时候，就会跳过执行测试，于是在运行命令的时候，加上如下-D参数就能跳过测试。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn install -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure>\n<p>参数-D是Java自带的，其功能是通过命令行设置一个Java系统属性，Maven简单的重用了该参数，在准备插件的时候检查系统属性，便实现了插件参数的配置。</p>\n<h3 id=\"在POM中插件全局配置\"><a href=\"#在POM中插件全局配置\" class=\"headerlink\" title=\"在POM中插件全局配置\"></a>在POM中插件全局配置</h3><p>并不是所有的插件参数都适合从命令行配置，有些参数的值从项目创建到项目发布都不会改变，或者说很少改变，对于这种情况，在POM文件中一次性配置就显然比重负在命令行输入要方便。</p>\n<p>用户可以在声明插件的时候，对此插件进行一个全局配置。也就是说，所有该基于该插件目标的任务，都会使用这些配置。例如我们通常会需要配置maven-compiler-plugin告诉它配置Java1.5版本的源文件，生成与JVM1.5兼容的字节码文件，代码如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artfactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">source</span>&gt;</span>1.5<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">target</span>&gt;</span>1.5<span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">configration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样，不管绑定到compile阶段的<code>maven-compiler-plugin:compile</code>任务，还是绑定到test-compiler阶段的<code>maven-compiler-plugin:testCompiler</code>任务，这都能够使用该配置，基于Java1.5版本进行编译。</p>\n<h3 id=\"POM中插件任务配置\"><a href=\"#POM中插件任务配置\" class=\"headerlink\" title=\"POM中插件任务配置\"></a>POM中插件任务配置</h3><p>除了为插件配置全局的参数，用户还可以为某个插件任务配置特定的参数。以maven-antrun-plugin为例，它有一个目标<code>run</code>,可以用来在Maven中调用Ant任务。用户将<code>maven-antrun-plugin:run</code>绑定到多个生命周期阶段上，再加以不同的配置，就可以让Maven在不同的生命周期执行不同的任务，代码如下:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-antrun-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ant-validate<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>validate<span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>run<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">tasks</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">echo</span>&gt;</span>Im'bound to validate phase<span class=\"tag\">&lt;/<span class=\"name\">echo</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">tasks</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configurationo</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>ant-verify<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>verify<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>run<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">tasks</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">echo</span>&gt;</span>I'm bound to verify phase<span class=\"tag\">&lt;/<span class=\"name\">echo</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">tasks</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上述代码片段中，首先，<code>maven-antrun-plugin:run</code>与validate绑定，从而构成一个id为ant-validate的任务。插件全局配置中的configuration元素位于plugin元素下面，而这里的configuration元素则位于execution元素下，表示这是特定任务的配置，而非插件整体的配置。这个ant-validate任务配置了一个echo Ant任务，向命令行输出一段文字，表示该任务是绑定到validate阶段的。第二个任务的id为ant-verify，它绑定到了verify阶段，同样它也输出一段文字到命令行，告诉该任务绑定到了verify阶段。</p>\n<h2 id=\"获取插件信息\"><a href=\"#获取插件信息\" class=\"headerlink\" title=\"获取插件信息\"></a>获取插件信息</h2><p>仅仅理解如何配置和使用插件是不够的，当遇到一个构建任务的时候，用户还需要知道去哪里寻找合适的插件，以帮助完成任务，找到正确的插件之后，还要详细了解该插件的配置点。由于Maven的插件非常多，这其中大部分没有完善文档，因此，使用正确的插件并进行正确的配置，其实并不是一件容易的事。</p>\n<h3 id=\"在线插件信息\"><a href=\"#在线插件信息\" class=\"headerlink\" title=\"在线插件信息\"></a>在线插件信息</h3><p>基本所有的主要的Maven插件都来自Apache和Codehaus。由于Maven本身是属于Apache软件基金会的，因此他有很多的官方的插件，每天都有成千上万的Maven用户在使用这些插件，他们具有非常好的的稳定性。<br><a href=\"https://maven.apache.org/plugins/index.html\" target=\"_blank\" rel=\"noopener\">官网插件介绍</a><br><a href=\"http://repo1.maven.org/maven2/org/apache/maven/plugins\" target=\"_blank\" rel=\"noopener\">插件列表</a>  </p>\n<h3 id=\"使用maven-help-plugin描述插件\"><a href=\"#使用maven-help-plugin描述插件\" class=\"headerlink\" title=\"使用maven-help-plugin描述插件\"></a>使用maven-help-plugin描述插件</h3><p>除了访问在线的插件文档之外，还可以借助maven-help-plugin来获取插件的详细信息。。可以运行一下命令来获取maven-compiler-plugin2.1版本的信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe-Dplugin=org.apache.maven.plugins:maven-compiler-plugin:2.1</span><br></pre></td></tr></table></figure>\n<p>这里执行的是maven-help-plugins的<code>describe</code>目标，在参数的plugin中输入需要描述插件的groupId、artfactId和version。Maven在命令行输出maven-compiler-plugin的简要信息。</p>\n<p>在描述插件的时候，还可以省去版本信息，让Maven自动获取最新版本来进行表述。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe-Dplugin=org.apache.maven.plugins:maven-compiler-plugin</span><br></pre></td></tr></table></figure>\n<p>进一步简化，可以使用插件目标前缀替换坐标。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe-Dplugin=compiler</span><br></pre></td></tr></table></figure>\n<p>如果仅仅想描述某个插件目标的信息，可以加上goal参数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe-Dplugin=compiler-Dgoal=compile</span><br></pre></td></tr></table></figure>\n<p>如果想让maven-help-plugin输出更详细的信息，可以加上detail参数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe -Dplugin=compiler-Ddetail</span><br></pre></td></tr></table></figure>\n<h3 id=\"从命令行调用插件\"><a href=\"#从命令行调用插件\" class=\"headerlink\" title=\"从命令行调用插件\"></a>从命令行调用插件</h3><p>如果在命令行运行mvn -h来显示mvn命令帮助，可以看到如下的信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">usage: mvn [options] [&lt;goal(s)&gt;] [&lt;phase(s)&gt;]</span><br><span class=\"line\"> </span><br><span class=\"line\">Options:</span><br><span class=\"line\"> -am,--also-make                        If project list is specified, also</span><br><span class=\"line\">                                        build projects required by the</span><br><span class=\"line\">                                        list</span><br><span class=\"line\"> -amd,--also-make-dependents            If project list is specified, also</span><br><span class=\"line\">                                        build projects that depend on</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>该信息告诉了我们mvn命令的基本用法，options表示可用的选项，mvn命令有20多个选项，除了选项之外，mvn命令后面可以添加一个或者多个goal和phase，他们分别是指插件目标和生命周期阶段</p>\n<p>可以通过mvn命令激活生命周期阶段，从而执行那些绑定在生命周期阶段上的插件目标。但Maven还支持直接从命令行调用插件目标。Maven支持这种方式是因为有些任务不适合绑定在生命周期上，例如maven-help-plugin:describe，我们不需要在构建项目的时候去描述插件信息，又如maven-dependency-plugin:tree,我们也不需要在构建项目的时候去显示依赖树，因此这些插件目标应该通过如下方式使用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn help:describe-Dplugin=compiler</span><br><span class=\"line\">mvn dependency:tree</span><br></pre></td></tr></table></figure>\n<p>不过这里有个疑问，describe是maven-help-plugin的目标没错，但是冒号前面的help是什么呢？它既不是groupId，也不是artifactId,Maven是如何根据该信息找到对应版本插件的呢？同理为什么不是<code>maven-dependency-plugin:tree</code>,而是<code>dependency:tree</code></p>\n<p>解答该疑问之前，可以尝试一下如下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn org.apache.maven.plugins:maven-help-plugin:2.1:describe-Dplugin=compiler</span><br><span class=\"line\"></span><br><span class=\"line\">mvn org.apache.maven.plugins:maven-dependency-plugin:2.1:tree</span><br></pre></td></tr></table></figure>\n<p>这两条命令就比较容易理解了，插件的groupId、artifactId、version以及goal都得以清晰描述。它们的效果与之前的两条命令基本是一样的，但是显然前面的命令更简洁，更容易记忆和使用。为了达到该目的，Maven引入了目标前缀的概念help是maven-help-plugin的目标前缀，dependency是maven-dependency-plugin的前缀，有了插件前缀，Maven就能找到对应的artifactId。不过，除了artifactId,Maven还需要得到groupId和version才能精确定位到某个插件。</p>\n<h2 id=\"插件解析机制\"><a href=\"#插件解析机制\" class=\"headerlink\" title=\"插件解析机制\"></a>插件解析机制</h2><h3 id=\"仓库元数据\"><a href=\"#仓库元数据\" class=\"headerlink\" title=\"仓库元数据\"></a>仓库元数据</h3><h4 id=\"插件元数据\"><a href=\"#插件元数据\" class=\"headerlink\" title=\"插件元数据\"></a>插件元数据</h4><p><strong>主要用于解释插件版本</strong></p>\n<blockquote>\n<p>在远程仓库存放的位置结构:<br><a href=\"http://repo1.maven.org/maven2/groupId/artifactId/maven-metadata.xml\" target=\"_blank\" rel=\"noopener\">http://repo1.maven.org/maven2/groupId/artifactId/maven-metadata.xml</a>  </p>\n</blockquote>\n<p>这里的groupId指的就是构件的groupId，artifactId指的是构件的artifactId，例如插件maven-compiler-plugin的元数据链接:<br><a href=\"http://repo1.maven.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/maven-metadata.xml\" target=\"_blank\" rel=\"noopener\">http://repo1.maven.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/maven-metadata.xml</a><br>内容如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">metadata</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">versioning</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">latest</span>&gt;</span>3.7.0<span class=\"tag\">&lt;/<span class=\"name\">latest</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">release</span>&gt;</span>3.7.0<span class=\"tag\">&lt;/<span class=\"name\">release</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">versions</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0-beta-1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.6.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.6.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.6.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.7.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">versions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">lastUpdated</span>&gt;</span>20170904193138<span class=\"tag\">&lt;/<span class=\"name\">lastUpdated</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">versioning</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">metadata</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"插件前缀元数据\"><a href=\"#插件前缀元数据\" class=\"headerlink\" title=\"插件前缀元数据\"></a>插件前缀元数据</h4><p><strong>主要用于解释插件前缀</strong></p>\n<blockquote>\n<p>在远程仓库存放的位置结构:<br><a href=\"http://repo1.maven.org/maven2/groupId/maven-metadata.xml\" target=\"_blank\" rel=\"noopener\">http://repo1.maven.org/maven2/groupId/maven-metadata.xml</a></p>\n</blockquote>\n<p>我们使用一般使用官方的插件就够了，官方插件默认的groupId为org.apache.maven.plugins，对应的链接为<br><a href=\"http://repo1.maven.org/maven2/org/apache/maven/plugins/maven-metadata.xml\" target=\"_blank\" rel=\"noopener\">http://repo1.maven.org/maven2/org/apache/maven/plugins/maven-metadata.xml</a><br>下面是前缀元数据xml文件截取的部分内容</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">metadata</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Apache Maven ACR Plugin<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">prefix</span>&gt;</span>acr<span class=\"tag\">&lt;/<span class=\"name\">prefix</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-acr-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Apache Maven Ant Plugin<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">prefix</span>&gt;</span>ant<span class=\"tag\">&lt;/<span class=\"name\">prefix</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-ant-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Maven ANTLR Plugin<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">prefix</span>&gt;</span>antlr<span class=\"tag\">&lt;/<span class=\"name\">prefix</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-antlr-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    ……</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">metadata</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"插件仓库\"><a href=\"#插件仓库\" class=\"headerlink\" title=\"插件仓库\"></a>插件仓库</h3><p>与依赖仓库一样，插件构件同样基于坐标存储在Maven仓库中，在需要的时候Maven会从本地仓库查找插件，如果不存在，则从远程仓库查找。找到插件之后，再下载到本地仓库使用。</p>\n<p>需要注意的是，Maven会区别对待依赖的远程仓库与插件的远程仓库。前面提到如何配置远程仓库，但是这种配置只对一般依赖有效果，当Maven需要的依赖在本地仓库不存在时，它会去所配置的远程仓库中查找，可是当Maven需要的插件在本地仓库存在时，他就不会去那些远程仓库查找。</p>\n<p>不同于repositories及其repository子元素，插件的远程仓库使用pluginRepositories和pluginReposirory配置，例如，Maven的超级pom:pom-4.0.0.xml配置了如下的插件远程仓库,代码如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Maven Plugin Repository<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://repo1.maven.org/maven2<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">layout</span>&gt;</span>default<span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>&gt;</span>never<span class=\"tag\">&lt;/<span class=\"name\">updatePolicy</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">pluginRepositories</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>一般来说，中央仓库所包含的插件完全能够满足我们的需要，因此也不需要配置其他的插件仓库。只有在很少的情况下，项目使用的插件无法在中央仓库找到，或者自己编写的插件，这个时候可以参考上述的配置，在POM或者settings.xml中加入其他的插件仓库配置。</p>\n<h3 id=\"插件的默认groupId\"><a href=\"#插件的默认groupId\" class=\"headerlink\" title=\"插件的默认groupId\"></a>插件的默认groupId</h3><p>在POM配置中配置插件的时候，如果该插件是Maven的官方插件（即如果其groupId为org.apache.maven.plugins），就可以省略groupId配置，见代码清单：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">source</span>&gt;</span>1.5<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">target</span>&gt;</span>1.5<span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面省略了配置maven-compiler-plugin的groupId，Maven在解析该插件的时候，会自动用默认groupId org.apache.maven.plugins补齐。但是并不推荐使用Maven的这一机制，这样虽然可以省略一些配置，但是这样的配置会让团队中不熟悉Maven的成员感到费解，况且能省略的配置也就仅仅一行而已。</p>\n<h3 id=\"解析插件版本\"><a href=\"#解析插件版本\" class=\"headerlink\" title=\"解析插件版本\"></a>解析插件版本</h3><blockquote>\n<p>同样是为了简化插件的配置和使用，在用户没有提供插件版本的情况下，Maven会自动解析插件版本。<br>首先，Maven的超级POM中为所有核心插件设定了版本,超级POM是所有Maven项目的父POM，所有项目都会继承这个超级POM配置，因此，即使用户不加任何配置，Maven使用核心插件的时候，他们的版本都已经确定了，这些插件包括maven-clean-plugin、maven-compiler-plugin、maven-surefire-plugin等。</p>\n</blockquote>\n<p>上面说法是来自其他博客，我表示质疑，我使用的是maven3.5.4，在超级pom中并没有发现其为所有核心插件设定了版本。这点不明白，以后搞清楚再补充。</p>\n<p>如果用户使用某个插件时没有设定版本，而这个插件又不属于核心插件范畴，Maven就会去检查所有仓库中的可用版本，然后做出选择。以maven-compiler-plugin为例，他在中央仓库的<a href=\"http://repo1.maven.org/maven2/org/apache/maven/plugins/maven-compiler-plugin/maven-metadata.xml\" target=\"_blank\" rel=\"noopener\">仓库元数据</a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">metadata</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">versioning</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">latest</span>&gt;</span>3.7.0<span class=\"tag\">&lt;/<span class=\"name\">latest</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">release</span>&gt;</span>3.7.0<span class=\"tag\">&lt;/<span class=\"name\">release</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">versions</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0-beta-1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.6.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.6.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.6.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.7.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">versions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">lastUpdated</span>&gt;</span>20170904193138<span class=\"tag\">&lt;/<span class=\"name\">lastUpdated</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">versioning</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">metadata</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Maven遍历本地仓库和所有远程插件仓库，将该路径下的仓库元数据归并后，就能计算出latest和release的值。latest表示所有仓库中该构件的最新版本，而release表示最新的非快照版本。在Maven2中，插件的版本会被解析至latest。也就是说，当用户使用某个非核心插件且没有声明版本的时候，Maven会将版本解析为所有可用仓库中的最新版本，而这个版本也可能是快照版本的。</p>\n<p>当插件的版本为快照版本的时，就会出现潜在的问题。Maven会基于更新策略，检查并使用快照的更新。某个插件可能昨天还好好的，今天就出错了。其原因是因为这个版本的插件发生了变化，为了防止这类问题，Maven3调整了解析机制，当插件没有声明版本的时候，不再解析至latest，而是使用release。这样就可以避免由于快照频繁更新而导致的插件行为不稳定。</p>\n<p>依赖Maven解析插件版本其实是不推荐的做法，即使Maven3将版本解析到最新的非快照版本，也还是唯有潜在的不稳定性。例如，可能某个构件发布了一个新的版本，而这个版本的行为与之前的的版本发生了变化，这种变化就可能导致项目构建失败。因此，使用插件的时候，应该一直显式的设定版本，这也解释了Maven为什么要在超级POM中为核心插件设定版本。</p>\n<h3 id=\"解析插件前缀\"><a href=\"#解析插件前缀\" class=\"headerlink\" title=\"解析插件前缀\"></a>解析插件前缀</h3><p>mvn命令行支持使用插件前缀来简化插件的调用，现在解释Maven如何根据插件前缀解析到插件的坐标的。</p>\n<p>插件前缀与<code>groupId:artifactId</code>是一一对应的，这种匹配关系存储在仓库元数据中。这里的仓库元数据不是groupId/artifactId/maven-metadata.xml，而是groupId/maven-metadata.xml。当Maven解析前缀:</p>\n<ul>\n<li>首先会基于默认的groupId(org.apache.maven.plugins)归并所有插件仓库的元数据org/apache/maven/plugins/maven-metadata.xml</li>\n<li>其次检查归并后的元素，根据前缀(prefix)找到对应的artifactId；</li>\n<li>结合artifactId和groupId，最后获取version，这是就得到了完整的插件坐标。</li>\n<li>若org/apache/maven/plugins/maven-metadata.xml没有记录该插件前缀，则接着检查其他groupId下的元数据，如org/codehaus/mojo/maven-metadata.xml以及用户自定义的插件。若所有元数据都不包含该前缀，则报错。</li>\n</ul>\n<blockquote>\n<p>插件前缀元数据部分内容:</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">metadata</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Apache Maven ACR Plugin<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">prefix</span>&gt;</span>acr<span class=\"tag\">&lt;/<span class=\"name\">prefix</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-acr-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Apache Maven Ant Plugin<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">prefix</span>&gt;</span>ant<span class=\"tag\">&lt;/<span class=\"name\">prefix</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-ant-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Maven ANTLR Plugin<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">prefix</span>&gt;</span>antlr<span class=\"tag\">&lt;/<span class=\"name\">prefix</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-antlr-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    ……</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">metadata</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><blockquote>\n<p><strong>321笨丫头</strong>,<a href=\"http://blog.sina.com.cn/s/blog_e01142dc0102wup3.html\" target=\"_blank\" rel=\"noopener\">maven install、maven clean、project clean </a><br><strong>lofty</strong>,<a href=\"https://www.cnblogs.com/wangwei-beijing/p/6535081.html\" target=\"_blank\" rel=\"noopener\">Maven——生命周期与插件<em>**</em></a></p>\n</blockquote>","popularPost_tmp_postPath":true,"popularPost_tmp_gaData":{"updated":"Sun Aug 12 2018 14:00:53 GMT+0800 (CST)","title":"maven(二):生命周期和插件","path":"post/fa942646.html","eyeCatchImage":null,"excerpt":"<h2 id=\"maven生命周期\"><a href=\"#maven生命周期\" class=\"headerlink\" title=\"maven生命周期\"></a>maven生命周期</h2><p>maven抽象出了3套生命周期，其具体实现是依赖于<a href=\"https://maven.apache.org/plugins/index.html\" target=\"_blank\" rel=\"noopener\">插件</a>。每套生命周期是相互独立的，都由一组阶段(Phase)组成。每套生命周期中的阶段是有顺序的，后面阶段依赖于前面的阶段，执行后面阶段会自动执行之前的阶段，但不会触发不同生命周期的阶段。<br>","date":"2018-07-23T23:30:00.000Z","pv":0,"totalPV":0,"categories":"工具学习 > maven","tags":["maven","maven生命周期","maven插件"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"maven(三):pom.xml详解","comment":true,"date":"2018-08-07T14:03:00.000Z","_content":"## pom.xml详解\n<!--more-->\n```xml\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"     \n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"     \n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0http://maven.apache.org/maven-v4_0_0.xsd\">\n  <!--父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。 坐标包括group ID，artifact ID和 version。-->    \n  <parent>\n    <!--被继承的父项目的构件标识符-->    \n    <artifactId><artifactId/>\n    <!--被继承的父项目的全球唯一标识符-->    \n    <groupId><groupId/>\n    <!--被继承的父项目的版本-->    \n    <version><version/>\n    <!-- 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是../pom.xml。Maven首先在构建当前项目的地方寻找父项目的pom，其次在文件系统的这个位置（relativePath位置），然后在本地仓库，最后在远程仓库寻找父项目的pom。-->    \n    <relativePath><relativePath/>\n  </parent>\n  <!--声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。-->       \n  <modelVersion>4.0.0</modelVersion>\n  <!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目,一般是网址的反写+项目名。构建时生成的路径也是由此生成，如com.yangyuanming.blog生成的相对路径为：/com/yangyuanming/blog-->     \n  <groupId>com.yangyuanming.blog</groupId>\n  <!-- 构件的标识符，它和group ID一起唯一标识一个构件,通常由”项目名-模块名“构成。换句话说，你不能有两个不同的项目拥有同样的artifactId和groupId；在某个特定的groupId下，artifactId也必须是唯一的。构件是项目产生的或使用的一个东西，Maven为项目产生的构件包括：JARs，源 码，二进制发布和WARs等。-->     \n  <artifactId>blog-v1</artifactId>\n  <!--项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型-->     \n  <packaging>war</packaging>\n  <!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号。版本号包括：snapshot(快照)、alpha(内部测试)、beta(公测)、release(稳定)、GA(正式发布)\n  -->     \n  <version>1.0-SNAPSHOT</version>\n  <!--项目的名称, Maven产生的文档用-->     \n  <name>Yang Yuanming,s Blog</name>\n  <!--项目主页的URL, Maven产生的文档用-->     \n  <url>https://yangyuanming.com</url>\n  <!-- 项目的详细描述, Maven产生的文档用。当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，就可以包含HTML标签），不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的索引页文件，而不是调整这里的文档。-->     \n  <description>A blog project</description>\n  <!--描述了这个项目构建环境中的前提条件。-->    \n  <prerequisites>\n    <!--构建该项目或使用该插件所需要的Maven的最低版本-->    \n    <maven><maven/>\n  </prerequisites>\n  <!--项目的问题管理系统，如Bugzilla, Jira, Scarab等-->     \n  <issueManagement>\n    <!--问题管理系统的名字-->     \n    <system>jira</system>\n    <!--该项目使用的问题管理系统的URL-->   \n    <url>http://jira.xxx.com/xxx</url> \n  </issueManagement>\n  <!--项目持续集成信息-->    \n  <ciManagement>\n    <!--持续集成系统的名字，例如continuum-->    \n    <system><system/>\n    <!--该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。-->    \n    <url><url/>\n    <!--构建完成时，需要通知的开发者/用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告）-->    \n    <notifiers>\n      <!--配置一种方式，当构建中断时，以该方式通知用户/开发者-->    \n      <notifier>\n        <!--传送通知的途径-->    \n        <type/>\n        <!--发生错误时是否通知-->    \n        <sendOnError/>\n        <!--构建失败时是否通知-->    \n        <sendOnFailure/>\n        <!--构建成功时是否通知-->    \n        <sendOnSuccess/>\n        <!--发生警告时是否通知-->    \n        <sendOnWarning/>\n        <!--不赞成使用。通知发送到哪里-->    \n        <address/>\n        <!--扩展配置项-->    \n        <configuration/>\n      </notifier>\n    </notifiers>\n  </ciManagement>\n  <!--项目创建年份，4位数字。当产生版权信息时需要使用这个值。-->    \n  <inceptionYear><inceptionYear/>\n  <!--项目相关邮件列表信息-->     \n  <mailingLists>\n    <!--该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。-->     \n    <mailingList>\n      <!--邮件的名称-->    \n      <name>Demo</name>\n      <!--发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建-->     \n      <post>chaibozhou@163.com</post>\n      <!--订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建-->     \n      <subscribe>chaibozhou@163.com</subscribe>\n      <!--取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建-->     \n      <unsubscribe>chaibozhou@163.com</unsubscribe>\n      <!--你可以浏览邮件信息的URL-->    \n      <archive>chaibozhou@163.com</archive>\n    </mailingList>\n  </mailingLists>\n  <!--项目开发者列表-->     \n  <developers>\n    <!--某个项目开发者的信息-->    \n    <developer>\n      <!--SCM里项目开发者的唯一标识符-->    \n      <id>HELLO WORLD</id>\n      <!--项目开发者的全名-->    \n      <name>chaimm</name>\n      <!--项目开发者的email-->    \n      <email>chaibozhou@163.com</email>\n      <!--项目开发者的主页的URL-->    \n      <url><url/>\n      <!--项目开发者在项目中扮演的角色，角色元素描述了各种角色-->    \n      <roles>\n        <role>Project Manager</role>\n        <role>Architect</role>\n      </roles>\n      <!--项目开发者所属组织-->    \n      <organization>demo</organization>\n      <!--项目开发者所属组织的URL-->    \n      <organizationUrl>https://yangyuanming.com</organizationUrl>\n      <!--项目开发者属性，如即时消息如何处理等-->    \n      <properties>\n        <dept>No</dept>\n      </properties>\n      <!--项目开发者所在时区， -11到12范围内的整数。-->    \n      <timezone>-5</timezone>\n    </developer>\n  </developers>\n  <!--项目的其他贡献者列表-->     \n  <contributors>\n    <!--项目的其他贡献者。参见developers/developer元素-->    \n    <contributor></contributor>\n  </contributors>\n  <!--该元素描述了项目所有License列表。 应该只列出该项目的license列表，不要列出依赖项目的 license列表。如果列出多个license，用户可以选择它们中的一个而不是接受所有license。-->     \n  <licenses>\n    <!--描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。-->     \n    <license>\n      <!--license用于法律上的名称-->    \n      <name>Apache 2</name>\n      <!--官方的license正文页面的URL-->    \n      <url></url>\n      <!--项目分发的主要方式：    \n        repo，可以从Maven库下载    \n        manual， 用户必须手动下载和安装依赖-->    \n      <distribution>repo</distribution>\n      <!--关于license的补充信息-->    \n      <comments></comments>\n    </license>\n  </licenses>\n  <!--SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。-->     \n  <scm>\n    <!--SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。-->     \n    <connection>     \n      scm:svn:http://svn.baidu.com/banseon/maven/banseon/banseon-maven2-trunk(dao-trunk)      \n    </connection>\n    <!--给开发者使用的，类似connection元素。即该连接不仅仅只读-->    \n    <developerConnection>     \n      scm:svn:http://svn.baidu.com/banseon/maven/banseon/dao-trunk      \n    </developerConnection>\n    <!--当前代码的标签，在开发阶段默认为HEAD-->    \n    <tag><tag/>\n    <!--指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。-->     \n    <url>http://svn.baidu.com/banseon</url>\n  </scm>\n  <!--描述项目所属组织的各种属性。Maven产生的文档用-->     \n  <organization>\n    <!--组织的全名-->    \n    <name>demo</name>\n    <!--组织主页的URL-->    \n    <url>https://yangyuanming.com</url>\n  </organization>\n  <!--构建项目需要的信息-->    \n  <build>\n    <!--该元素配置了构建输出文件的存放目录，默认${project.basedir}/target-->\n    <directory></directory>\n    <!--产生的构件的文件名，默认值是${artifactId}-${version}。-->    \n    <finalName><finalName/>\n    <!--该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。默认${project.basedir}/src/main/java-->    \n    <sourceDirectory><sourceDirectory/>\n    <!--该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容会被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。${project.basedir}/src/main/scripts-->    \n    <scriptSourceDirectory><scriptSourceDirectory/>\n    <!--该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。默认${project.basedir}/src/test/java-->    \n    <testSourceDirectory><testSourceDirectory/>\n    <!--被编译过的应用程序class文件存放的目录。默认${project.build.directory}/classes-->    \n    <outputDirectory><outputDirectory/>\n    <!--被编译过的测试class文件存放的目录。默认${project.build.directory}/test-classes-->    \n    <testOutputDirectory><testOutputDirectory/>\n    <!--使用来自该项目的一系列构建扩展-->    \n    <extensions>\n      <!--描述使用到的构建扩展。-->    \n      <extension>\n        <!--构建扩展的groupId-->    \n        <groupId><groupId/>\n        <!--构建扩展的artifactId-->    \n        <artifactId><artifactId/>\n        <!--构建扩展的版本-->    \n        <version><version/>\n      </extension>\n    </extensions>\n    <!--当项目没有规定目标（Maven2 叫做阶段）时的默认值-->    \n    <defaultGoal><defaultGoal/>\n    <!--这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。-->    \n    <resources>\n      <!--这个元素描述了项目相关的资源信息-->    \n      <resource>\n        <!-- 描述了资源的目标路径。该路径相对target/classes目录（例如${project.build.outputDirectory}）。举个例子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为org/apache/maven/messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。-->    \n        <targetPath><targetPath/>\n        <!--是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素里列出。-->    \n        <filtering><filtering/>\n        <!--描述存放资源的目录，该路径相对POM路径。默认${project.basedir}/src/main/resources-->    \n        <directory><directory/>\n        <!--包含的模式列表，例如**/*.xml.-->    \n        <includes><includes/>\n        <!--排除的模式列表，例如**/*.xml-->    \n        <excludes><excludes/>\n      </resource>\n    </resources>\n    <!--这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。-->    \n    <testResources>\n      <!--这个元素描述了测试相关的资源信息-->    \n      <testResource>\n        <targetPath><targetPath/>\n        <filtering><filtering/>\n        <!--默认${project.basedir}/src/test/resources-->\n        <directory><directory/>\n        <includes><includes/>\n        <excludes><excludes/>\n      </testResource>\n    </testResources>\n    <!--当filtering开关打开时，使用到的过滤器属性文件列表-->    \n    <filters><filters/>\n    <!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置-->    \n    <pluginManagement>\n      <!--使用的插件列表 。-->    \n      <plugins>\n        <!--plugin元素包含描述插件所需要的信息。-->    \n        <plugin>\n          <!--插件在仓库里的group ID-->    \n          <groupId><groupId/>\n          <!--插件在仓库里的artifact ID-->    \n          <artifactId><artifactId/>\n          <!--被使用的插件的版本（或版本范围）-->    \n          <version><version/>\n          <!--是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该元素才被设置成enabled。-->    \n          <extensions><extensions/>\n          <!--在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。-->    \n          <executions>\n            <!--execution元素包含了插件执行需要的信息-->    \n            <execution>\n              <!--执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标-->    \n              <id><id/>\n              <!--绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段-->    \n              <phase><phase/>\n              <!--配置的执行目标-->    \n              <goals><goals/>\n              <!--配置是否被传播到子POM-->    \n              <inherited><inherited/>\n              <!--作为DOM对象的配置-->    \n              <configuration><configuration/>\n            </execution>\n          </executions>\n          <!--项目引入插件所需要的额外依赖-->    \n          <dependencies>\n            <!--参见dependencies/dependency元素-->    \n            <dependency>    \n              ......    \n            </dependency>\n          </dependencies>\n          <!--任何配置是否被传播到子项目-->    \n          <inherited><inherited/>\n          <!--作为DOM对象的配置-->    \n          <configuration><configuration/>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n    <!--使用的插件列表-->    \n    <plugins>\n      <!--参见build/pluginManagement/plugins/plugin元素-->    \n      <plugin>\n        <groupId><groupId/>\n        <artifactId><artifactId/>\n        <version><version/>\n        <extendsions><extensions/>\n        <executions>\n          <execution>\n            <id><id/>\n            <phase><phase/>\n            <goals><goals/>\n            <inherited><inherited/>\n            <configuration><configuration/>\n          </execution>\n        </executions>\n        <dependencies>\n          <!--参见dependencies/dependency元素-->    \n          <dependency>    \n            ......    \n          </dependency>\n        </dependencies>\n        <goals><goals/>\n        <inherited><inherited/>\n        <configuration><configuration/>\n      </plugin>\n    </plugins>\n  </build>\n  <!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径-->    \n  <modules><modules/>\n  <!--发现依赖和扩展的远程仓库列表。-->     \n  <repositories>\n    <!--包含需要连接到远程仓库的信息-->    \n    <repository>\n      <!--如何处理远程仓库里发布版本的下载-->    \n      <releases>\n        <!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 -->    \n        <enabled><enabled/>\n        <!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。-->    \n        <updatePolicy><updatePolicy/>\n        <!--当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。-->    \n        <checksumPolicy><checksumPolicy/>\n      </releases>\n      <!-- 如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，为每种类型的构件采取不同的 策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素 -->    \n      <snapshots>\n        <enabled/>\n        <updatePolicy/>\n        <checksumPolicy/>\n      </snapshots>\n      <!--远程仓库唯一标识符。可以用来匹配在settings.xml文件里配置的远程仓库-->    \n      <id>banseon-repository-proxy</id>\n      <!--远程仓库名称-->    \n      <name>banseon-repository-proxy</name>\n      <!--远程仓库URL，按protocol://hostname/path形式-->    \n      <url>http://192.168.1.169:9999/repository/</url>\n      <!-- 用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认的布局；然 而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。-->    \n      <layout>default</layout>\n    </repository>\n  </repositories>\n  <!--发现插件的远程仓库列表，这些插件用于构建和报表-->    \n  <pluginRepositories>\n    <!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素-->    \n    <pluginRepository>    \n      ......    \n    </pluginRepository>\n  </pluginRepositories>\n  <!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。-->     \n  <dependencies>\n    <dependency>\n      <!--依赖的group ID-->    \n      <groupId>org.apache.maven</groupId>\n      <!--依赖的artifact ID-->    \n      <artifactId>maven-artifact</artifactId>\n      <!--依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。-->    \n      <version>3.8.1</version>\n      <!-- 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。类型经常和使用的打包方式对应， 尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。如果设置extensions为 true，就可以在 plugin里定义新的类型。所以前面的类型的例子不完整。-->    \n      <type>jar</type>\n      <!-- 依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，如果你想要构建两个单独的构件成 JAR，一个使用Java 1.4编译器，另一个使用Java 6编译器，你就可以使用分类器来生成两个单独的JAR构件。-->    \n      <classifier></classifier>\n      \n      <!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。\n      - compile:编译依赖范围。如果没有指定，就会默认使用该依赖范围，使用此依赖范围的Maven依赖，对于编译、测试、运行三种classpath都有效。此外，这些依赖关系会传播到依赖项目。\n      - test:测试依赖范围。使用该范围的Maven依赖，只对于测试classpath有效，在编译主代码或者运行项目的使用时将无法使用此类依赖。典型的例子是JUnit,它只是在编译测试代码和运行测试的时候需要该依赖。这个范围是不可传递的。     \n      - provided：已提供依赖范围。使用此依赖范围的Maven依赖，对于编译和测试的classpath有效，但是在运行时无效。典型的例子是servlet-api，编译和测试项目的时候需要改依赖，但是在运行项目的时候，由于容器已经提供，就不需要Maven重复地引入一遍。该依赖不可传递。\n      - runtime:运行时依赖范围。使用此依赖范围的Maven依赖，对于测试和运行classpath有效，但是编译主代码时无效。典型的例子是JDBC驱动实现，项目主代码的编译只需要JDK提供的JDBC接口，只有在测试或者运行项目的时候才需要实现上述接口的JDBC驱动。\n      - system:系统依赖范围，该范围与三种classpath的关系，和provided依赖范围完全一致。但是，使用system范围的依赖时必须通过systemPath元素显式的指定依赖文件的路径。由于此类依赖不是通过Maven仓库解析，而且往往与本机系统绑定，可能造成构建的不可移植，因此需要谨慎使用。\n      - import(Maven 2.0.9及以上)：导入依赖范围。该依赖范围不会对三种classpath产生实际的影响-->     \n      <scope>test</scope>\n      <!--仅供system scope使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如${java.home}。-->    \n      <systemPath></systemPath>\n      <!--当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的依赖。此元素主要用于解决版本冲突问题-->    \n      <exclusions>\n        <exclusion>\n          <artifactId>spring-core</artifactId>\n          <groupId>org.springframework</groupId>\n        </exclusion>\n      </exclusions>\n      <!--可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。可选依赖阻断依赖的传递性。如果为true，需要显式引用-->     \n      <optional>true</optional>\n    </dependency>\n  </dependencies>\n  <!--不赞成使用. 现在Maven忽略该元素.-->    \n  <reports></reports>\n  <!--该元素描述使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。-->    \n  <reporting>\n    <!--true，则，网站不包括默认的报表。这包括“项目信息”菜单中的报表。-->    \n    <excludeDefaults><excludeDefaults/>\n    <!--所有产生的报表存放到哪里。默认值是${project.build.directory}/site。-->    \n    <outputDirectory><outputDirectory/>\n    <!--使用的报表插件和他们的配置。-->    \n    <plugins> \n      <plugin>\n        <!--报表插件在仓库里的group ID-->    \n        <groupId><groupId/>\n        <!--报表插件在仓库里的artifact ID-->    \n        <artifactId><artifactId/>\n        <!--被使用的报表插件的版本（或版本范围）-->    \n        <version><version/>\n        <!--任何配置是否被传播到子项目-->    \n        <inherited><inherited/>\n        <!--报表插件的配置-->    \n        <configuration><configuration/>\n        <!--一组报表的多重规范，每个规范可能有不同的配置。一个规范（报表集）对应一个执行目标 。例如，有1，2，3，4，5，6，7，8，9个报表。1，2，5构成A报表集，对应一个执行目标。2，5，8构成B报表集，对应另一个执行目标-->    \n        <reportSets>\n          <!--表示报表的一个集合，以及产生该集合的配置-->    \n          <reportSet>\n            <!--报表集合的唯一标识符，POM继承时用到-->    \n            <id><id/>\n            <!--产生报表集合时，被使用的报表的配置-->    \n            <configuration><configuration/>\n            <!--配置是否被继承到子POMs-->    \n            <inherited>><inherited/>\n            <!--这个集合里使用到哪些报表-->    \n            <reports/>\n          </reportSet>\n        </reportSets>\n      </plugin>\n    </plugins>\n  </reporting>\n  <!-- 继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖（必须描述group ID和 artifact ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过group ID和artifact ID 匹配到这里的依赖，并使用这里的依赖信息。-->    \n  <dependencyManagement>\n    <dependencies>\n      <!--参见dependencies/dependency元素-->    \n      <dependency>    \n        ......    \n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n  <!--项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者把构件部署到远程仓库。-->     \n  <distributionManagement>\n    <!--部署项目产生的构件到远程仓库需要的信息-->    \n    <repository>\n      <!--是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见repositories/repository元素-->    \n      <uniqueVersion><uniqueVersion/>\n      <id>banseon-maven2</id>\n      <name>banseon maven2</name>\n      <url>file://${basedir}/target/deploy</url>\n      <layout/>\n    </repository>\n    <!--构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见distributionManagement/repository元素-->     \n    <snapshotRepository>\n      <uniqueVersion><uniqueVersion/>\n      <id>banseon-maven2</id>\n      <name>Banseon-maven2 Snapshot Repository</name>\n      <url>scp://svn.baidu.com/banseon:/usr/local/maven-snapshot</url>\n      <layout><layout/>\n    </snapshotRepository>\n    <!--部署项目的网站需要的信息-->     \n    <site>\n      <!--部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置-->     \n      <id>banseon-site</id>\n      <!--部署位置的名称-->    \n      <name>business api website</name>\n      <!--部署位置的URL，按protocol://hostname/path形式-->    \n      <url>     \n        scp://svn.baidu.com/banseon:/var/www/localhost/banseon-web      \n      </url>\n    </site>\n    <!--项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位那些不在仓库里的构件（由于license限制）。-->    \n    <downloadUrl><downloadUrl/>\n    <!--如果构件有了新的group ID和artifact ID（构件移到了新的位置），这里列出构件的重定位信息。-->    \n    <relocation>\n      <!--构件新的group ID-->    \n      <groupId><groupId/>\n      <!--构件新的artifact ID-->    \n      <artifactId><artifactId/>\n      <!--构件新的版本号-->    \n      <version><version/>\n      <!--显示给用户的，关于移动的额外信息，例如原因。-->    \n      <message><message/>\n    </relocation>\n    <!-- 给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值有：none（默认），converted（仓库管理员从 Maven 1 POM转换过来），partner（直接从伙伴Maven 2仓库同步过来），deployed（从Maven 2实例部 署），verified（被核实时正确的和最终的）。-->    \n    <status/>\n  </distributionManagement>\n  \n  <!--以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里activation元素的说明）。格式是<name>value</name>。-->    \n  <properties><properties/>\n  \n  <!--在列的项目构建profile，如果被激活，会修改构建处理-->    \n  <profiles>\n    <!--根据环境参数或命令行参数激活某个构建处理-->    \n    <profile>\n      <!--构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。-->    \n      <id><id/>\n      <!--自动触发profile的条件逻辑。Activation是profile的开启钥匙。profile的力量来自于它    \n        能够在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。activation元素并不是激活profile的唯一方式。-->    \n      <activation>\n        <!--profile默认是否激活的标志,当值为true，如果没有被指定激活的profile，该profile就会被默认被激活-->    \n        <activeByDefault>true<activeByDefault/>\n        <!--当匹配的jdk被检测到，profile被激活。例如，1.4激活JDK1.4，1.4.0_2，而!1.4激活所有版本不是以1.4开头的JDK。-->    \n        <jdk><jdk/>\n        <!--当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。-->    \n        <os>\n          <!--激活profile的操作系统的名字-->    \n          <name>Windows XP</name>\n          <!--激活profile的操作系统所属家族(如 'windows')-->    \n          <family>Windows</family>\n          <!--激活profile的操作系统体系结构 -->    \n          <arch>x86</arch>\n          <!--激活profile的操作系统版本-->    \n          <version>5.1.2600</version>\n        </os>\n        <!--如果Maven检测到某一个属性（其值可以在POM中通过${名称}引用），其拥有对应的名称和值，Profile就会被激活。如果值    \n          字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹配属性值字段-->    \n        <property>\n          <!--激活profile的属性的名称-->    \n          <name>mavenVersion</name>\n          <!--激活profile的属性的值-->    \n          <value>2.0.3</value>\n        </property>\n        <!--提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活    \n          profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。-->    \n        <file>\n          <!--如果指定的文件存在，则激活profile。-->    \n          <exists>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/</exists>\n          <!--如果指定的文件不存在，则激活profile。-->    \n          <missing>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/</missing>\n        </file>\n      </activation>\n      <!--构建项目所需要的信息。参见build元素-->    \n      <build>\n        <defaultGoal/>\n        <resources>\n          <resource>\n            <targetPath/>\n            <filtering/>\n            <directory/>\n            <includes/>\n            <excludes/>\n          </resource>\n        </resources>\n        <testResources>\n          <testResource>\n            <targetPath/>\n            <filtering/>\n            <directory/>\n            <includes/>\n            <excludes/>\n          </testResource>\n        </testResources>\n        <directory/>\n        <finalName/>\n        <filters/>\n        <pluginManagement>\n          <plugins>\n            <!--参见build/pluginManagement/plugins/plugin元素-->    \n            <plugin>\n              <groupId/>\n              <artifactId/>\n              <version/>\n              <extensions/>\n              <executions>\n                <execution>\n                  <id/>\n                  <phase/>\n                  <goals/>\n                  <inherited/>\n                  <configuration/>\n                </execution>\n              </executions>\n              <dependencies>\n                <!--参见dependencies/dependency元素-->    \n                <dependency>    \n                  ......    \n                </dependency>\n              </dependencies>\n              <goals/>\n              <inherited/>\n              <configuration/>\n            </plugin>\n          </plugins>\n        </pluginManagement>\n        <plugins>\n          <!--参见build/pluginManagement/plugins/plugin元素-->    \n          <plugin>\n            <groupId/>\n            <artifactId/>\n            <version/>\n            <extensions/>\n            <executions>\n              <execution>\n                <id/>\n                <phase/>\n                <goals/>\n                <inherited/>\n                <configuration/>\n              </execution>\n            </executions>\n            <dependencies>\n              <!--参见dependencies/dependency元素-->    \n              <dependency>    \n                ......    \n              </dependency>\n            </dependencies>\n            <goals/>\n            <inherited/>\n            <configuration/>\n          </plugin>\n        </plugins>\n      </build>\n      <!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径-->    \n      <modules><modules/>\n      <!--发现依赖和扩展的远程仓库列表。-->    \n      <repositories>\n        <!--参见repositories/repository元素-->    \n        <repository>\n          <releases>\n            <enabled><enabled/>\n            <updatePolicy><updatePolicy/>\n            <checksumPolicy><checksumPolicy/>\n          </releases>\n          <snapshots>\n            <enabled/>\n            <updatePolicy/>\n            <checksumPolicy/>\n          </snapshots>\n          <id/>\n          <name/>\n          <url/>\n          <layout/>\n        </repository>\n      </repositories>\n      <!--发现插件的远程仓库列表，这些插件用于构建和报表-->    \n      <pluginRepositories>\n        <!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素-->        \n        <pluginRepository>\n          <releases>\n            <enabled/>\n            <updatePolicy/>\n            <checksumPolicy/>\n          </releases>\n          <snapshots>\n            <enabled/>\n            <updatePolicy/>\n            <checksumPolicy/>\n          </snapshots>\n          <id/>\n          <name/>\n          <url/>\n          <layout/>\n        </pluginRepository>\n      </pluginRepositories>\n      <!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。-->    \n      <dependencies>\n        <!--参见dependencies/dependency元素-->    \n        <dependency>    \n          ......    \n        </dependency>\n      </dependencies>\n      <!--不赞成使用. 现在Maven忽略该元素.-->    \n      <reports/>\n      <!--该元素包括使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。参见reporting元素-->    \n      <reporting>    \n        ......    \n      </reporting>\n      <!--参见dependencyManagement元素-->    \n      <dependencyManagement>\n        <dependencies>\n          <!--参见dependencies/dependency元素-->    \n          <dependency>    \n            ......    \n          </dependency>\n        </dependencies>\n      </dependencyManagement>\n      <!--参见distributionManagement元素-->    \n      <distributionManagement>    \n        ......    \n      </distributionManagement>\n      <!--参见properties元素-->    \n      <properties/>\n    </profile>\n  </profiles>\n</project>\n\n```\n## 参考资料\n**hcmony**,[Maven使用详解，非常详细](https://blog.csdn.net/hcmony/article/details/56013655)\n\n\n","source":"_posts/maven(三)pom.xml详解.md","raw":"---\ntitle: maven(三):pom.xml详解\ncomment: true\ntags:\n  - maven\n  - pom.xml\ncategories:\n  - 工具学习\n  - maven\ndate: 2018-08-07 22:03:00\n---\n## pom.xml详解\n<!--more-->\n```xml\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"     \n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"     \n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0http://maven.apache.org/maven-v4_0_0.xsd\">\n  <!--父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。 坐标包括group ID，artifact ID和 version。-->    \n  <parent>\n    <!--被继承的父项目的构件标识符-->    \n    <artifactId><artifactId/>\n    <!--被继承的父项目的全球唯一标识符-->    \n    <groupId><groupId/>\n    <!--被继承的父项目的版本-->    \n    <version><version/>\n    <!-- 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是../pom.xml。Maven首先在构建当前项目的地方寻找父项目的pom，其次在文件系统的这个位置（relativePath位置），然后在本地仓库，最后在远程仓库寻找父项目的pom。-->    \n    <relativePath><relativePath/>\n  </parent>\n  <!--声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。-->       \n  <modelVersion>4.0.0</modelVersion>\n  <!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目,一般是网址的反写+项目名。构建时生成的路径也是由此生成，如com.yangyuanming.blog生成的相对路径为：/com/yangyuanming/blog-->     \n  <groupId>com.yangyuanming.blog</groupId>\n  <!-- 构件的标识符，它和group ID一起唯一标识一个构件,通常由”项目名-模块名“构成。换句话说，你不能有两个不同的项目拥有同样的artifactId和groupId；在某个特定的groupId下，artifactId也必须是唯一的。构件是项目产生的或使用的一个东西，Maven为项目产生的构件包括：JARs，源 码，二进制发布和WARs等。-->     \n  <artifactId>blog-v1</artifactId>\n  <!--项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型-->     \n  <packaging>war</packaging>\n  <!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号。版本号包括：snapshot(快照)、alpha(内部测试)、beta(公测)、release(稳定)、GA(正式发布)\n  -->     \n  <version>1.0-SNAPSHOT</version>\n  <!--项目的名称, Maven产生的文档用-->     \n  <name>Yang Yuanming,s Blog</name>\n  <!--项目主页的URL, Maven产生的文档用-->     \n  <url>https://yangyuanming.com</url>\n  <!-- 项目的详细描述, Maven产生的文档用。当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，就可以包含HTML标签），不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的索引页文件，而不是调整这里的文档。-->     \n  <description>A blog project</description>\n  <!--描述了这个项目构建环境中的前提条件。-->    \n  <prerequisites>\n    <!--构建该项目或使用该插件所需要的Maven的最低版本-->    \n    <maven><maven/>\n  </prerequisites>\n  <!--项目的问题管理系统，如Bugzilla, Jira, Scarab等-->     \n  <issueManagement>\n    <!--问题管理系统的名字-->     \n    <system>jira</system>\n    <!--该项目使用的问题管理系统的URL-->   \n    <url>http://jira.xxx.com/xxx</url> \n  </issueManagement>\n  <!--项目持续集成信息-->    \n  <ciManagement>\n    <!--持续集成系统的名字，例如continuum-->    \n    <system><system/>\n    <!--该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。-->    \n    <url><url/>\n    <!--构建完成时，需要通知的开发者/用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告）-->    \n    <notifiers>\n      <!--配置一种方式，当构建中断时，以该方式通知用户/开发者-->    \n      <notifier>\n        <!--传送通知的途径-->    \n        <type/>\n        <!--发生错误时是否通知-->    \n        <sendOnError/>\n        <!--构建失败时是否通知-->    \n        <sendOnFailure/>\n        <!--构建成功时是否通知-->    \n        <sendOnSuccess/>\n        <!--发生警告时是否通知-->    \n        <sendOnWarning/>\n        <!--不赞成使用。通知发送到哪里-->    \n        <address/>\n        <!--扩展配置项-->    \n        <configuration/>\n      </notifier>\n    </notifiers>\n  </ciManagement>\n  <!--项目创建年份，4位数字。当产生版权信息时需要使用这个值。-->    \n  <inceptionYear><inceptionYear/>\n  <!--项目相关邮件列表信息-->     \n  <mailingLists>\n    <!--该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。-->     \n    <mailingList>\n      <!--邮件的名称-->    \n      <name>Demo</name>\n      <!--发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建-->     \n      <post>chaibozhou@163.com</post>\n      <!--订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建-->     \n      <subscribe>chaibozhou@163.com</subscribe>\n      <!--取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建-->     \n      <unsubscribe>chaibozhou@163.com</unsubscribe>\n      <!--你可以浏览邮件信息的URL-->    \n      <archive>chaibozhou@163.com</archive>\n    </mailingList>\n  </mailingLists>\n  <!--项目开发者列表-->     \n  <developers>\n    <!--某个项目开发者的信息-->    \n    <developer>\n      <!--SCM里项目开发者的唯一标识符-->    \n      <id>HELLO WORLD</id>\n      <!--项目开发者的全名-->    \n      <name>chaimm</name>\n      <!--项目开发者的email-->    \n      <email>chaibozhou@163.com</email>\n      <!--项目开发者的主页的URL-->    \n      <url><url/>\n      <!--项目开发者在项目中扮演的角色，角色元素描述了各种角色-->    \n      <roles>\n        <role>Project Manager</role>\n        <role>Architect</role>\n      </roles>\n      <!--项目开发者所属组织-->    \n      <organization>demo</organization>\n      <!--项目开发者所属组织的URL-->    \n      <organizationUrl>https://yangyuanming.com</organizationUrl>\n      <!--项目开发者属性，如即时消息如何处理等-->    \n      <properties>\n        <dept>No</dept>\n      </properties>\n      <!--项目开发者所在时区， -11到12范围内的整数。-->    \n      <timezone>-5</timezone>\n    </developer>\n  </developers>\n  <!--项目的其他贡献者列表-->     \n  <contributors>\n    <!--项目的其他贡献者。参见developers/developer元素-->    \n    <contributor></contributor>\n  </contributors>\n  <!--该元素描述了项目所有License列表。 应该只列出该项目的license列表，不要列出依赖项目的 license列表。如果列出多个license，用户可以选择它们中的一个而不是接受所有license。-->     \n  <licenses>\n    <!--描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。-->     \n    <license>\n      <!--license用于法律上的名称-->    \n      <name>Apache 2</name>\n      <!--官方的license正文页面的URL-->    \n      <url></url>\n      <!--项目分发的主要方式：    \n        repo，可以从Maven库下载    \n        manual， 用户必须手动下载和安装依赖-->    \n      <distribution>repo</distribution>\n      <!--关于license的补充信息-->    \n      <comments></comments>\n    </license>\n  </licenses>\n  <!--SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。-->     \n  <scm>\n    <!--SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。-->     \n    <connection>     \n      scm:svn:http://svn.baidu.com/banseon/maven/banseon/banseon-maven2-trunk(dao-trunk)      \n    </connection>\n    <!--给开发者使用的，类似connection元素。即该连接不仅仅只读-->    \n    <developerConnection>     \n      scm:svn:http://svn.baidu.com/banseon/maven/banseon/dao-trunk      \n    </developerConnection>\n    <!--当前代码的标签，在开发阶段默认为HEAD-->    \n    <tag><tag/>\n    <!--指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。-->     \n    <url>http://svn.baidu.com/banseon</url>\n  </scm>\n  <!--描述项目所属组织的各种属性。Maven产生的文档用-->     \n  <organization>\n    <!--组织的全名-->    \n    <name>demo</name>\n    <!--组织主页的URL-->    \n    <url>https://yangyuanming.com</url>\n  </organization>\n  <!--构建项目需要的信息-->    \n  <build>\n    <!--该元素配置了构建输出文件的存放目录，默认${project.basedir}/target-->\n    <directory></directory>\n    <!--产生的构件的文件名，默认值是${artifactId}-${version}。-->    \n    <finalName><finalName/>\n    <!--该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。默认${project.basedir}/src/main/java-->    \n    <sourceDirectory><sourceDirectory/>\n    <!--该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容会被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。${project.basedir}/src/main/scripts-->    \n    <scriptSourceDirectory><scriptSourceDirectory/>\n    <!--该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。默认${project.basedir}/src/test/java-->    \n    <testSourceDirectory><testSourceDirectory/>\n    <!--被编译过的应用程序class文件存放的目录。默认${project.build.directory}/classes-->    \n    <outputDirectory><outputDirectory/>\n    <!--被编译过的测试class文件存放的目录。默认${project.build.directory}/test-classes-->    \n    <testOutputDirectory><testOutputDirectory/>\n    <!--使用来自该项目的一系列构建扩展-->    \n    <extensions>\n      <!--描述使用到的构建扩展。-->    \n      <extension>\n        <!--构建扩展的groupId-->    \n        <groupId><groupId/>\n        <!--构建扩展的artifactId-->    \n        <artifactId><artifactId/>\n        <!--构建扩展的版本-->    \n        <version><version/>\n      </extension>\n    </extensions>\n    <!--当项目没有规定目标（Maven2 叫做阶段）时的默认值-->    \n    <defaultGoal><defaultGoal/>\n    <!--这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。-->    \n    <resources>\n      <!--这个元素描述了项目相关的资源信息-->    \n      <resource>\n        <!-- 描述了资源的目标路径。该路径相对target/classes目录（例如${project.build.outputDirectory}）。举个例子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为org/apache/maven/messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。-->    \n        <targetPath><targetPath/>\n        <!--是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素里列出。-->    \n        <filtering><filtering/>\n        <!--描述存放资源的目录，该路径相对POM路径。默认${project.basedir}/src/main/resources-->    \n        <directory><directory/>\n        <!--包含的模式列表，例如**/*.xml.-->    \n        <includes><includes/>\n        <!--排除的模式列表，例如**/*.xml-->    \n        <excludes><excludes/>\n      </resource>\n    </resources>\n    <!--这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。-->    \n    <testResources>\n      <!--这个元素描述了测试相关的资源信息-->    \n      <testResource>\n        <targetPath><targetPath/>\n        <filtering><filtering/>\n        <!--默认${project.basedir}/src/test/resources-->\n        <directory><directory/>\n        <includes><includes/>\n        <excludes><excludes/>\n      </testResource>\n    </testResources>\n    <!--当filtering开关打开时，使用到的过滤器属性文件列表-->    \n    <filters><filters/>\n    <!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置-->    \n    <pluginManagement>\n      <!--使用的插件列表 。-->    \n      <plugins>\n        <!--plugin元素包含描述插件所需要的信息。-->    \n        <plugin>\n          <!--插件在仓库里的group ID-->    \n          <groupId><groupId/>\n          <!--插件在仓库里的artifact ID-->    \n          <artifactId><artifactId/>\n          <!--被使用的插件的版本（或版本范围）-->    \n          <version><version/>\n          <!--是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该元素才被设置成enabled。-->    \n          <extensions><extensions/>\n          <!--在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。-->    \n          <executions>\n            <!--execution元素包含了插件执行需要的信息-->    \n            <execution>\n              <!--执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标-->    \n              <id><id/>\n              <!--绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段-->    \n              <phase><phase/>\n              <!--配置的执行目标-->    \n              <goals><goals/>\n              <!--配置是否被传播到子POM-->    \n              <inherited><inherited/>\n              <!--作为DOM对象的配置-->    \n              <configuration><configuration/>\n            </execution>\n          </executions>\n          <!--项目引入插件所需要的额外依赖-->    \n          <dependencies>\n            <!--参见dependencies/dependency元素-->    \n            <dependency>    \n              ......    \n            </dependency>\n          </dependencies>\n          <!--任何配置是否被传播到子项目-->    \n          <inherited><inherited/>\n          <!--作为DOM对象的配置-->    \n          <configuration><configuration/>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n    <!--使用的插件列表-->    \n    <plugins>\n      <!--参见build/pluginManagement/plugins/plugin元素-->    \n      <plugin>\n        <groupId><groupId/>\n        <artifactId><artifactId/>\n        <version><version/>\n        <extendsions><extensions/>\n        <executions>\n          <execution>\n            <id><id/>\n            <phase><phase/>\n            <goals><goals/>\n            <inherited><inherited/>\n            <configuration><configuration/>\n          </execution>\n        </executions>\n        <dependencies>\n          <!--参见dependencies/dependency元素-->    \n          <dependency>    \n            ......    \n          </dependency>\n        </dependencies>\n        <goals><goals/>\n        <inherited><inherited/>\n        <configuration><configuration/>\n      </plugin>\n    </plugins>\n  </build>\n  <!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径-->    \n  <modules><modules/>\n  <!--发现依赖和扩展的远程仓库列表。-->     \n  <repositories>\n    <!--包含需要连接到远程仓库的信息-->    \n    <repository>\n      <!--如何处理远程仓库里发布版本的下载-->    \n      <releases>\n        <!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 -->    \n        <enabled><enabled/>\n        <!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。-->    \n        <updatePolicy><updatePolicy/>\n        <!--当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。-->    \n        <checksumPolicy><checksumPolicy/>\n      </releases>\n      <!-- 如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，为每种类型的构件采取不同的 策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素 -->    \n      <snapshots>\n        <enabled/>\n        <updatePolicy/>\n        <checksumPolicy/>\n      </snapshots>\n      <!--远程仓库唯一标识符。可以用来匹配在settings.xml文件里配置的远程仓库-->    \n      <id>banseon-repository-proxy</id>\n      <!--远程仓库名称-->    \n      <name>banseon-repository-proxy</name>\n      <!--远程仓库URL，按protocol://hostname/path形式-->    \n      <url>http://192.168.1.169:9999/repository/</url>\n      <!-- 用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认的布局；然 而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。-->    \n      <layout>default</layout>\n    </repository>\n  </repositories>\n  <!--发现插件的远程仓库列表，这些插件用于构建和报表-->    \n  <pluginRepositories>\n    <!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素-->    \n    <pluginRepository>    \n      ......    \n    </pluginRepository>\n  </pluginRepositories>\n  <!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。-->     \n  <dependencies>\n    <dependency>\n      <!--依赖的group ID-->    \n      <groupId>org.apache.maven</groupId>\n      <!--依赖的artifact ID-->    \n      <artifactId>maven-artifact</artifactId>\n      <!--依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。-->    \n      <version>3.8.1</version>\n      <!-- 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。类型经常和使用的打包方式对应， 尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。如果设置extensions为 true，就可以在 plugin里定义新的类型。所以前面的类型的例子不完整。-->    \n      <type>jar</type>\n      <!-- 依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，如果你想要构建两个单独的构件成 JAR，一个使用Java 1.4编译器，另一个使用Java 6编译器，你就可以使用分类器来生成两个单独的JAR构件。-->    \n      <classifier></classifier>\n      \n      <!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。\n      - compile:编译依赖范围。如果没有指定，就会默认使用该依赖范围，使用此依赖范围的Maven依赖，对于编译、测试、运行三种classpath都有效。此外，这些依赖关系会传播到依赖项目。\n      - test:测试依赖范围。使用该范围的Maven依赖，只对于测试classpath有效，在编译主代码或者运行项目的使用时将无法使用此类依赖。典型的例子是JUnit,它只是在编译测试代码和运行测试的时候需要该依赖。这个范围是不可传递的。     \n      - provided：已提供依赖范围。使用此依赖范围的Maven依赖，对于编译和测试的classpath有效，但是在运行时无效。典型的例子是servlet-api，编译和测试项目的时候需要改依赖，但是在运行项目的时候，由于容器已经提供，就不需要Maven重复地引入一遍。该依赖不可传递。\n      - runtime:运行时依赖范围。使用此依赖范围的Maven依赖，对于测试和运行classpath有效，但是编译主代码时无效。典型的例子是JDBC驱动实现，项目主代码的编译只需要JDK提供的JDBC接口，只有在测试或者运行项目的时候才需要实现上述接口的JDBC驱动。\n      - system:系统依赖范围，该范围与三种classpath的关系，和provided依赖范围完全一致。但是，使用system范围的依赖时必须通过systemPath元素显式的指定依赖文件的路径。由于此类依赖不是通过Maven仓库解析，而且往往与本机系统绑定，可能造成构建的不可移植，因此需要谨慎使用。\n      - import(Maven 2.0.9及以上)：导入依赖范围。该依赖范围不会对三种classpath产生实际的影响-->     \n      <scope>test</scope>\n      <!--仅供system scope使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如${java.home}。-->    \n      <systemPath></systemPath>\n      <!--当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的依赖。此元素主要用于解决版本冲突问题-->    \n      <exclusions>\n        <exclusion>\n          <artifactId>spring-core</artifactId>\n          <groupId>org.springframework</groupId>\n        </exclusion>\n      </exclusions>\n      <!--可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。可选依赖阻断依赖的传递性。如果为true，需要显式引用-->     \n      <optional>true</optional>\n    </dependency>\n  </dependencies>\n  <!--不赞成使用. 现在Maven忽略该元素.-->    \n  <reports></reports>\n  <!--该元素描述使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。-->    \n  <reporting>\n    <!--true，则，网站不包括默认的报表。这包括“项目信息”菜单中的报表。-->    \n    <excludeDefaults><excludeDefaults/>\n    <!--所有产生的报表存放到哪里。默认值是${project.build.directory}/site。-->    \n    <outputDirectory><outputDirectory/>\n    <!--使用的报表插件和他们的配置。-->    \n    <plugins> \n      <plugin>\n        <!--报表插件在仓库里的group ID-->    \n        <groupId><groupId/>\n        <!--报表插件在仓库里的artifact ID-->    \n        <artifactId><artifactId/>\n        <!--被使用的报表插件的版本（或版本范围）-->    \n        <version><version/>\n        <!--任何配置是否被传播到子项目-->    \n        <inherited><inherited/>\n        <!--报表插件的配置-->    \n        <configuration><configuration/>\n        <!--一组报表的多重规范，每个规范可能有不同的配置。一个规范（报表集）对应一个执行目标 。例如，有1，2，3，4，5，6，7，8，9个报表。1，2，5构成A报表集，对应一个执行目标。2，5，8构成B报表集，对应另一个执行目标-->    \n        <reportSets>\n          <!--表示报表的一个集合，以及产生该集合的配置-->    \n          <reportSet>\n            <!--报表集合的唯一标识符，POM继承时用到-->    \n            <id><id/>\n            <!--产生报表集合时，被使用的报表的配置-->    \n            <configuration><configuration/>\n            <!--配置是否被继承到子POMs-->    \n            <inherited>><inherited/>\n            <!--这个集合里使用到哪些报表-->    \n            <reports/>\n          </reportSet>\n        </reportSets>\n      </plugin>\n    </plugins>\n  </reporting>\n  <!-- 继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖（必须描述group ID和 artifact ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过group ID和artifact ID 匹配到这里的依赖，并使用这里的依赖信息。-->    \n  <dependencyManagement>\n    <dependencies>\n      <!--参见dependencies/dependency元素-->    \n      <dependency>    \n        ......    \n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n  <!--项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者把构件部署到远程仓库。-->     \n  <distributionManagement>\n    <!--部署项目产生的构件到远程仓库需要的信息-->    \n    <repository>\n      <!--是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见repositories/repository元素-->    \n      <uniqueVersion><uniqueVersion/>\n      <id>banseon-maven2</id>\n      <name>banseon maven2</name>\n      <url>file://${basedir}/target/deploy</url>\n      <layout/>\n    </repository>\n    <!--构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见distributionManagement/repository元素-->     \n    <snapshotRepository>\n      <uniqueVersion><uniqueVersion/>\n      <id>banseon-maven2</id>\n      <name>Banseon-maven2 Snapshot Repository</name>\n      <url>scp://svn.baidu.com/banseon:/usr/local/maven-snapshot</url>\n      <layout><layout/>\n    </snapshotRepository>\n    <!--部署项目的网站需要的信息-->     \n    <site>\n      <!--部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置-->     \n      <id>banseon-site</id>\n      <!--部署位置的名称-->    \n      <name>business api website</name>\n      <!--部署位置的URL，按protocol://hostname/path形式-->    \n      <url>     \n        scp://svn.baidu.com/banseon:/var/www/localhost/banseon-web      \n      </url>\n    </site>\n    <!--项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位那些不在仓库里的构件（由于license限制）。-->    \n    <downloadUrl><downloadUrl/>\n    <!--如果构件有了新的group ID和artifact ID（构件移到了新的位置），这里列出构件的重定位信息。-->    \n    <relocation>\n      <!--构件新的group ID-->    \n      <groupId><groupId/>\n      <!--构件新的artifact ID-->    \n      <artifactId><artifactId/>\n      <!--构件新的版本号-->    \n      <version><version/>\n      <!--显示给用户的，关于移动的额外信息，例如原因。-->    \n      <message><message/>\n    </relocation>\n    <!-- 给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值有：none（默认），converted（仓库管理员从 Maven 1 POM转换过来），partner（直接从伙伴Maven 2仓库同步过来），deployed（从Maven 2实例部 署），verified（被核实时正确的和最终的）。-->    \n    <status/>\n  </distributionManagement>\n  \n  <!--以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里activation元素的说明）。格式是<name>value</name>。-->    \n  <properties><properties/>\n  \n  <!--在列的项目构建profile，如果被激活，会修改构建处理-->    \n  <profiles>\n    <!--根据环境参数或命令行参数激活某个构建处理-->    \n    <profile>\n      <!--构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。-->    \n      <id><id/>\n      <!--自动触发profile的条件逻辑。Activation是profile的开启钥匙。profile的力量来自于它    \n        能够在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。activation元素并不是激活profile的唯一方式。-->    \n      <activation>\n        <!--profile默认是否激活的标志,当值为true，如果没有被指定激活的profile，该profile就会被默认被激活-->    \n        <activeByDefault>true<activeByDefault/>\n        <!--当匹配的jdk被检测到，profile被激活。例如，1.4激活JDK1.4，1.4.0_2，而!1.4激活所有版本不是以1.4开头的JDK。-->    \n        <jdk><jdk/>\n        <!--当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。-->    \n        <os>\n          <!--激活profile的操作系统的名字-->    \n          <name>Windows XP</name>\n          <!--激活profile的操作系统所属家族(如 'windows')-->    \n          <family>Windows</family>\n          <!--激活profile的操作系统体系结构 -->    \n          <arch>x86</arch>\n          <!--激活profile的操作系统版本-->    \n          <version>5.1.2600</version>\n        </os>\n        <!--如果Maven检测到某一个属性（其值可以在POM中通过${名称}引用），其拥有对应的名称和值，Profile就会被激活。如果值    \n          字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹配属性值字段-->    \n        <property>\n          <!--激活profile的属性的名称-->    \n          <name>mavenVersion</name>\n          <!--激活profile的属性的值-->    \n          <value>2.0.3</value>\n        </property>\n        <!--提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活    \n          profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。-->    \n        <file>\n          <!--如果指定的文件存在，则激活profile。-->    \n          <exists>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/</exists>\n          <!--如果指定的文件不存在，则激活profile。-->    \n          <missing>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/</missing>\n        </file>\n      </activation>\n      <!--构建项目所需要的信息。参见build元素-->    \n      <build>\n        <defaultGoal/>\n        <resources>\n          <resource>\n            <targetPath/>\n            <filtering/>\n            <directory/>\n            <includes/>\n            <excludes/>\n          </resource>\n        </resources>\n        <testResources>\n          <testResource>\n            <targetPath/>\n            <filtering/>\n            <directory/>\n            <includes/>\n            <excludes/>\n          </testResource>\n        </testResources>\n        <directory/>\n        <finalName/>\n        <filters/>\n        <pluginManagement>\n          <plugins>\n            <!--参见build/pluginManagement/plugins/plugin元素-->    \n            <plugin>\n              <groupId/>\n              <artifactId/>\n              <version/>\n              <extensions/>\n              <executions>\n                <execution>\n                  <id/>\n                  <phase/>\n                  <goals/>\n                  <inherited/>\n                  <configuration/>\n                </execution>\n              </executions>\n              <dependencies>\n                <!--参见dependencies/dependency元素-->    \n                <dependency>    \n                  ......    \n                </dependency>\n              </dependencies>\n              <goals/>\n              <inherited/>\n              <configuration/>\n            </plugin>\n          </plugins>\n        </pluginManagement>\n        <plugins>\n          <!--参见build/pluginManagement/plugins/plugin元素-->    \n          <plugin>\n            <groupId/>\n            <artifactId/>\n            <version/>\n            <extensions/>\n            <executions>\n              <execution>\n                <id/>\n                <phase/>\n                <goals/>\n                <inherited/>\n                <configuration/>\n              </execution>\n            </executions>\n            <dependencies>\n              <!--参见dependencies/dependency元素-->    \n              <dependency>    \n                ......    \n              </dependency>\n            </dependencies>\n            <goals/>\n            <inherited/>\n            <configuration/>\n          </plugin>\n        </plugins>\n      </build>\n      <!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径-->    \n      <modules><modules/>\n      <!--发现依赖和扩展的远程仓库列表。-->    \n      <repositories>\n        <!--参见repositories/repository元素-->    \n        <repository>\n          <releases>\n            <enabled><enabled/>\n            <updatePolicy><updatePolicy/>\n            <checksumPolicy><checksumPolicy/>\n          </releases>\n          <snapshots>\n            <enabled/>\n            <updatePolicy/>\n            <checksumPolicy/>\n          </snapshots>\n          <id/>\n          <name/>\n          <url/>\n          <layout/>\n        </repository>\n      </repositories>\n      <!--发现插件的远程仓库列表，这些插件用于构建和报表-->    \n      <pluginRepositories>\n        <!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素-->        \n        <pluginRepository>\n          <releases>\n            <enabled/>\n            <updatePolicy/>\n            <checksumPolicy/>\n          </releases>\n          <snapshots>\n            <enabled/>\n            <updatePolicy/>\n            <checksumPolicy/>\n          </snapshots>\n          <id/>\n          <name/>\n          <url/>\n          <layout/>\n        </pluginRepository>\n      </pluginRepositories>\n      <!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。-->    \n      <dependencies>\n        <!--参见dependencies/dependency元素-->    \n        <dependency>    \n          ......    \n        </dependency>\n      </dependencies>\n      <!--不赞成使用. 现在Maven忽略该元素.-->    \n      <reports/>\n      <!--该元素包括使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。参见reporting元素-->    \n      <reporting>    \n        ......    \n      </reporting>\n      <!--参见dependencyManagement元素-->    \n      <dependencyManagement>\n        <dependencies>\n          <!--参见dependencies/dependency元素-->    \n          <dependency>    \n            ......    \n          </dependency>\n        </dependencies>\n      </dependencyManagement>\n      <!--参见distributionManagement元素-->    \n      <distributionManagement>    \n        ......    \n      </distributionManagement>\n      <!--参见properties元素-->    \n      <properties/>\n    </profile>\n  </profiles>\n</project>\n\n```\n## 参考资料\n**hcmony**,[Maven使用详解，非常详细](https://blog.csdn.net/hcmony/article/details/56013655)\n\n\n","slug":"maven(三)pom.xml详解","published":1,"updated":"2018-08-12T06:00:51.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkqg7nr1000bdfzl4u9j44od","content":"<h2 id=\"pom-xml详解\"><a href=\"#pom-xml详解\" class=\"headerlink\" title=\"pom.xml详解\"></a>pom.xml详解</h2><a id=\"more\"></a>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span>     </span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>     </span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0http://maven.apache.org/maven-v4_0_0.xsd\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。 坐标包括group ID，artifact ID和 version。--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--被继承的父项目的构件标识符--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--被继承的父项目的全球唯一标识符--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--被继承的父项目的版本--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是../pom.xml。Maven首先在构建当前项目的地方寻找父项目的pom，其次在文件系统的这个位置（relativePath位置），然后在本地仓库，最后在远程仓库寻找父项目的pom。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">relativePath</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">relativePath</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。--&gt;</span>       </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目,一般是网址的反写+项目名。构建时生成的路径也是由此生成，如com.yangyuanming.blog生成的相对路径为：/com/yangyuanming/blog--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.yangyuanming.blog<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 构件的标识符，它和group ID一起唯一标识一个构件,通常由”项目名-模块名“构成。换句话说，你不能有两个不同的项目拥有同样的artifactId和groupId；在某个特定的groupId下，artifactId也必须是唯一的。构件是项目产生的或使用的一个东西，Maven为项目产生的构件包括：JARs，源 码，二进制发布和WARs等。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>blog-v1<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>war<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号。版本号包括：snapshot(快照)、alpha(内部测试)、beta(公测)、release(稳定)、GA(正式发布)</span></span><br><span class=\"line\"><span class=\"comment\">  --&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目的名称, Maven产生的文档用--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Yang Yuanming,s Blog<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目主页的URL, Maven产生的文档用--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://yangyuanming.com<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 项目的详细描述, Maven产生的文档用。当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，就可以包含HTML标签），不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的索引页文件，而不是调整这里的文档。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>A blog project<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--描述了这个项目构建环境中的前提条件。--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">prerequisites</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--构建该项目或使用该插件所需要的Maven的最低版本--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">maven</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">maven</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">prerequisites</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目的问题管理系统，如Bugzilla, Jira, Scarab等--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">issueManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--问题管理系统的名字--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">system</span>&gt;</span>jira<span class=\"tag\">&lt;/<span class=\"name\">system</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该项目使用的问题管理系统的URL--&gt;</span>   </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://jira.xxx.com/xxx<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">issueManagement</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目持续集成信息--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ciManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--持续集成系统的名字，例如continuum--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">system</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">system</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">url</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--构建完成时，需要通知的开发者/用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告）--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">notifiers</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--配置一种方式，当构建中断时，以该方式通知用户/开发者--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">notifier</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--传送通知的途径--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">type</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--发生错误时是否通知--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sendOnError</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--构建失败时是否通知--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sendOnFailure</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--构建成功时是否通知--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sendOnSuccess</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--发生警告时是否通知--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sendOnWarning</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--不赞成使用。通知发送到哪里--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">address</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--扩展配置项--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">notifier</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">notifiers</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ciManagement</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目创建年份，4位数字。当产生版权信息时需要使用这个值。--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">inceptionYear</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">inceptionYear</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目相关邮件列表信息--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mailingLists</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mailingList</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--邮件的名称--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Demo<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&gt;</span>     </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">post</span>&gt;</span>chaibozhou@163.com<span class=\"tag\">&lt;/<span class=\"name\">post</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&gt;</span>     </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">subscribe</span>&gt;</span>chaibozhou@163.com<span class=\"tag\">&lt;/<span class=\"name\">subscribe</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&gt;</span>     </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">unsubscribe</span>&gt;</span>chaibozhou@163.com<span class=\"tag\">&lt;/<span class=\"name\">unsubscribe</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--你可以浏览邮件信息的URL--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">archive</span>&gt;</span>chaibozhou@163.com<span class=\"tag\">&lt;/<span class=\"name\">archive</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mailingList</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">mailingLists</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目开发者列表--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">developers</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--某个项目开发者的信息--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">developer</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--SCM里项目开发者的唯一标识符--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>HELLO WORLD<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者的全名--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>chaimm<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者的email--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">email</span>&gt;</span>chaibozhou@163.com<span class=\"tag\">&lt;/<span class=\"name\">email</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者的主页的URL--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">url</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者在项目中扮演的角色，角色元素描述了各种角色--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">roles</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">role</span>&gt;</span>Project Manager<span class=\"tag\">&lt;/<span class=\"name\">role</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">role</span>&gt;</span>Architect<span class=\"tag\">&lt;/<span class=\"name\">role</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">roles</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者所属组织--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">organization</span>&gt;</span>demo<span class=\"tag\">&lt;/<span class=\"name\">organization</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者所属组织的URL--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">organizationUrl</span>&gt;</span>https://yangyuanming.com<span class=\"tag\">&lt;/<span class=\"name\">organizationUrl</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者属性，如即时消息如何处理等--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dept</span>&gt;</span>No<span class=\"tag\">&lt;/<span class=\"name\">dept</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者所在时区， -11到12范围内的整数。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">timezone</span>&gt;</span>-5<span class=\"tag\">&lt;/<span class=\"name\">timezone</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">developer</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">developers</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目的其他贡献者列表--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">contributors</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--项目的其他贡献者。参见developers/developer元素--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">contributor</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">contributor</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">contributors</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--该元素描述了项目所有License列表。 应该只列出该项目的license列表，不要列出依赖项目的 license列表。如果列出多个license，用户可以选择它们中的一个而不是接受所有license。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">licenses</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">license</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--license用于法律上的名称--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Apache 2<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--官方的license正文页面的URL--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目分发的主要方式：    </span></span><br><span class=\"line\"><span class=\"comment\">        repo，可以从Maven库下载    </span></span><br><span class=\"line\"><span class=\"comment\">        manual， 用户必须手动下载和安装依赖--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">distribution</span>&gt;</span>repo<span class=\"tag\">&lt;/<span class=\"name\">distribution</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--关于license的补充信息--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">comments</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comments</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">license</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">licenses</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">scm</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">connection</span>&gt;</span>     </span><br><span class=\"line\">      scm:svn:http://svn.baidu.com/banseon/maven/banseon/banseon-maven2-trunk(dao-trunk)      </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">connection</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--给开发者使用的，类似connection元素。即该连接不仅仅只读--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">developerConnection</span>&gt;</span>     </span><br><span class=\"line\">      scm:svn:http://svn.baidu.com/banseon/maven/banseon/dao-trunk      </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">developerConnection</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--当前代码的标签，在开发阶段默认为HEAD--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tag</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">tag</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://svn.baidu.com/banseon<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">scm</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--描述项目所属组织的各种属性。Maven产生的文档用--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">organization</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--组织的全名--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>demo<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--组织主页的URL--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://yangyuanming.com<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">organization</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--构建项目需要的信息--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该元素配置了构建输出文件的存放目录，默认$&#123;project.basedir&#125;/target--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--产生的构件的文件名，默认值是$&#123;artifactId&#125;-$&#123;version&#125;。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">finalName</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">finalName</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。默认$&#123;project.basedir&#125;/src/main/java--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sourceDirectory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">sourceDirectory</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容会被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。$&#123;project.basedir&#125;/src/main/scripts--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scriptSourceDirectory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">scriptSourceDirectory</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。默认$&#123;project.basedir&#125;/src/test/java--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">testSourceDirectory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">testSourceDirectory</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--被编译过的应用程序class文件存放的目录。默认$&#123;project.build.directory&#125;/classes--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">outputDirectory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">outputDirectory</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--被编译过的测试class文件存放的目录。默认$&#123;project.build.directory&#125;/test-classes--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">testOutputDirectory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">testOutputDirectory</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--使用来自该项目的一系列构建扩展--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">extensions</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--描述使用到的构建扩展。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">extension</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--构建扩展的groupId--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--构建扩展的artifactId--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--构建扩展的版本--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">extension</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">extensions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--当项目没有规定目标（Maven2 叫做阶段）时的默认值--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">defaultGoal</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">defaultGoal</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--这个元素描述了项目相关的资源信息--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 描述了资源的目标路径。该路径相对target/classes目录（例如$&#123;project.build.outputDirectory&#125;）。举个例子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为org/apache/maven/messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetPath</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">targetPath</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素里列出。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">filtering</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--描述存放资源的目录，该路径相对POM路径。默认$&#123;project.basedir&#125;/src/main/resources--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">directory</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--包含的模式列表，例如**/*.xml.--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">includes</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--排除的模式列表，例如**/*.xml--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">excludes</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">excludes</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">testResources</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--这个元素描述了测试相关的资源信息--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">testResource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetPath</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">targetPath</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">filtering</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--默认$&#123;project.basedir&#125;/src/test/resources--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">directory</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">includes</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">excludes</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">excludes</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">testResource</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">testResources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--当filtering开关打开时，使用到的过滤器属性文件列表--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filters</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">filters</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">pluginManagement</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--使用的插件列表 。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--plugin元素包含描述插件所需要的信息。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--插件在仓库里的group ID--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--插件在仓库里的artifact ID--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--被使用的插件的版本（或版本范围）--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该元素才被设置成enabled。--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">extensions</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">extensions</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--execution元素包含了插件执行需要的信息--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!--执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标--&gt;</span>    </span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!--绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段--&gt;</span>    </span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">phase</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!--配置的执行目标--&gt;</span>    </span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!--配置是否被传播到子POM--&gt;</span>    </span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">inherited</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!--作为DOM对象的配置--&gt;</span>    </span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--项目引入插件所需要的额外依赖--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">              ......    </span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--任何配置是否被传播到子项目--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">inherited</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--作为DOM对象的配置--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">pluginManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--使用的插件列表--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">extendsions</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">extensions</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">phase</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">inherited</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">            ......    </span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">inherited</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">modules</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">modules</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--发现依赖和扩展的远程仓库列表。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--包含需要连接到远程仓库的信息--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--如何处理远程仓库里发布版本的下载--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">enabled</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，为每种类型的构件采取不同的 策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素 --&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--远程仓库唯一标识符。可以用来匹配在settings.xml文件里配置的远程仓库--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>banseon-repository-proxy<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--远程仓库名称--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>banseon-repository-proxy<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--远程仓库URL，按protocol://hostname/path形式--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://192.168.1.169:9999/repository/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认的布局；然 而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">layout</span>&gt;</span>default<span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--发现插件的远程仓库列表，这些插件用于构建和报表--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">pluginRepository</span>&gt;</span>    </span><br><span class=\"line\">      ......    </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--依赖的group ID--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--依赖的artifact ID--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-artifact<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.8.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。类型经常和使用的打包方式对应， 尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。如果设置extensions为 true，就可以在 plugin里定义新的类型。所以前面的类型的例子不完整。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，如果你想要构建两个单独的构件成 JAR，一个使用Java 1.4编译器，另一个使用Java 6编译器，你就可以使用分类器来生成两个单独的JAR构件。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">classifier</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">classifier</span>&gt;</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">&lt;!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。</span></span><br><span class=\"line\"><span class=\"comment\">      - compile:编译依赖范围。如果没有指定，就会默认使用该依赖范围，使用此依赖范围的Maven依赖，对于编译、测试、运行三种classpath都有效。此外，这些依赖关系会传播到依赖项目。</span></span><br><span class=\"line\"><span class=\"comment\">      - test:测试依赖范围。使用该范围的Maven依赖，只对于测试classpath有效，在编译主代码或者运行项目的使用时将无法使用此类依赖。典型的例子是JUnit,它只是在编译测试代码和运行测试的时候需要该依赖。这个范围是不可传递的。     </span></span><br><span class=\"line\"><span class=\"comment\">      - provided：已提供依赖范围。使用此依赖范围的Maven依赖，对于编译和测试的classpath有效，但是在运行时无效。典型的例子是servlet-api，编译和测试项目的时候需要改依赖，但是在运行项目的时候，由于容器已经提供，就不需要Maven重复地引入一遍。该依赖不可传递。</span></span><br><span class=\"line\"><span class=\"comment\">      - runtime:运行时依赖范围。使用此依赖范围的Maven依赖，对于测试和运行classpath有效，但是编译主代码时无效。典型的例子是JDBC驱动实现，项目主代码的编译只需要JDK提供的JDBC接口，只有在测试或者运行项目的时候才需要实现上述接口的JDBC驱动。</span></span><br><span class=\"line\"><span class=\"comment\">      - system:系统依赖范围，该范围与三种classpath的关系，和provided依赖范围完全一致。但是，使用system范围的依赖时必须通过systemPath元素显式的指定依赖文件的路径。由于此类依赖不是通过Maven仓库解析，而且往往与本机系统绑定，可能造成构建的不可移植，因此需要谨慎使用。</span></span><br><span class=\"line\"><span class=\"comment\">      - import(Maven 2.0.9及以上)：导入依赖范围。该依赖范围不会对三种classpath产生实际的影响--&gt;</span>     </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--仅供system scope使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如$&#123;java.home&#125;。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">systemPath</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">systemPath</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的依赖。此元素主要用于解决版本冲突问题--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。可选依赖阻断依赖的传递性。如果为true，需要显式引用--&gt;</span>     </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--不赞成使用. 现在Maven忽略该元素.--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">reports</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">reports</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--该元素描述使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">reporting</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--true，则，网站不包括默认的报表。这包括“项目信息”菜单中的报表。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">excludeDefaults</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">excludeDefaults</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--所有产生的报表存放到哪里。默认值是$&#123;project.build.directory&#125;/site。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">outputDirectory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">outputDirectory</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--使用的报表插件和他们的配置。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--报表插件在仓库里的group ID--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--报表插件在仓库里的artifact ID--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--被使用的报表插件的版本（或版本范围）--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--任何配置是否被传播到子项目--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">inherited</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--报表插件的配置--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--一组报表的多重规范，每个规范可能有不同的配置。一个规范（报表集）对应一个执行目标 。例如，有1，2，3，4，5，6，7，8，9个报表。1，2，5构成A报表集，对应一个执行目标。2，5，8构成B报表集，对应另一个执行目标--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">reportSets</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--表示报表的一个集合，以及产生该集合的配置--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">reportSet</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--报表集合的唯一标识符，POM继承时用到--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--产生报表集合时，被使用的报表的配置--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--配置是否被继承到子POMs--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">inherited</span>&gt;</span>&gt;<span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--这个集合里使用到哪些报表--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">reports</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">reportSet</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">reportSets</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">reporting</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖（必须描述group ID和 artifact ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过group ID和artifact ID 匹配到这里的依赖，并使用这里的依赖信息。--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">        ......    </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者把构件部署到远程仓库。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--部署项目产生的构件到远程仓库需要的信息--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见repositories/repository元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">uniqueVersion</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">uniqueVersion</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>banseon-maven2<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>banseon maven2<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>file://$&#123;basedir&#125;/target/deploy<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">layout</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见distributionManagement/repository元素--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">snapshotRepository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">uniqueVersion</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">uniqueVersion</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>banseon-maven2<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Banseon-maven2 Snapshot Repository<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>scp://svn.baidu.com/banseon:/usr/local/maven-snapshot<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">layout</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">layout</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">snapshotRepository</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--部署项目的网站需要的信息--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">site</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置--&gt;</span>     </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>banseon-site<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--部署位置的名称--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>business api website<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--部署位置的URL，按protocol://hostname/path形式--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>     </span><br><span class=\"line\">        scp://svn.baidu.com/banseon:/var/www/localhost/banseon-web      </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">site</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位那些不在仓库里的构件（由于license限制）。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">downloadUrl</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">downloadUrl</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--如果构件有了新的group ID和artifact ID（构件移到了新的位置），这里列出构件的重定位信息。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">relocation</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--构件新的group ID--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--构件新的artifact ID--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--构件新的版本号--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--显示给用户的，关于移动的额外信息，例如原因。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">message</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">message</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">relocation</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值有：none（默认），converted（仓库管理员从 Maven 1 POM转换过来），partner（直接从伙伴Maven 2仓库同步过来），deployed（从Maven 2实例部 署），verified（被核实时正确的和最终的）。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">status</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">&lt;!--以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里activation元素的说明）。格式是&lt;name&gt;value&lt;/name&gt;。--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">properties</span>/&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">&lt;!--在列的项目构建profile，如果被激活，会修改构建处理--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">profiles</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--根据环境参数或命令行参数激活某个构建处理--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--自动触发profile的条件逻辑。Activation是profile的开启钥匙。profile的力量来自于它    </span></span><br><span class=\"line\"><span class=\"comment\">        能够在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。activation元素并不是激活profile的唯一方式。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--profile默认是否激活的标志,当值为true，如果没有被指定激活的profile，该profile就会被默认被激活--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">activeByDefault</span>&gt;</span>true<span class=\"tag\">&lt;<span class=\"name\">activeByDefault</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--当匹配的jdk被检测到，profile被激活。例如，1.4激活JDK1.4，1.4.0_2，而!1.4激活所有版本不是以1.4开头的JDK。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">jdk</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">jdk</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">os</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--激活profile的操作系统的名字--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Windows XP<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--激活profile的操作系统所属家族(如 'windows')--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">family</span>&gt;</span>Windows<span class=\"tag\">&lt;/<span class=\"name\">family</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--激活profile的操作系统体系结构 --&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">arch</span>&gt;</span>x86<span class=\"tag\">&lt;/<span class=\"name\">arch</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--激活profile的操作系统版本--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.2600<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">os</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--如果Maven检测到某一个属性（其值可以在POM中通过$&#123;名称&#125;引用），其拥有对应的名称和值，Profile就会被激活。如果值    </span></span><br><span class=\"line\"><span class=\"comment\">          字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹配属性值字段--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--激活profile的属性的名称--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mavenVersion<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--激活profile的属性的值--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>2.0.3<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活    </span></span><br><span class=\"line\"><span class=\"comment\">          profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">file</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--如果指定的文件存在，则激活profile。--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">exists</span>&gt;</span>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/<span class=\"tag\">&lt;/<span class=\"name\">exists</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--如果指定的文件不存在，则激活profile。--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">missing</span>&gt;</span>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/<span class=\"tag\">&lt;/<span class=\"name\">missing</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">file</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--构建项目所需要的信息。参见build元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">defaultGoal</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">targetPath</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">filtering</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">directory</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">includes</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">excludes</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">testResources</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">testResource</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">targetPath</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">filtering</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">directory</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">includes</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">excludes</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">testResource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">testResources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">directory</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">finalName</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filters</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pluginManagement</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">extensions</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">phase</span>/&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">                  ......    </span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">pluginManagement</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">extensions</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">phase</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">                ......    </span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">modules</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">modules</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--发现依赖和扩展的远程仓库列表。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--参见repositories/repository元素--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">enabled</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">enabled</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">name</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">url</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">layout</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--发现插件的远程仓库列表，这些插件用于构建和报表--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--&gt;</span>        </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">enabled</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">enabled</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">name</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">url</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">layout</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">          ......    </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--不赞成使用. 现在Maven忽略该元素.--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">reports</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--该元素包括使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。参见reporting元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">reporting</span>&gt;</span>    </span><br><span class=\"line\">        ......    </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">reporting</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--参见dependencyManagement元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">            ......    </span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--参见distributionManagement元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">distributionManagement</span>&gt;</span>    </span><br><span class=\"line\">        ......    </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--参见properties元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">properties</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">profiles</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><strong>hcmony</strong>,<a href=\"https://blog.csdn.net/hcmony/article/details/56013655\" target=\"_blank\" rel=\"noopener\">Maven使用详解，非常详细</a></p>\n","site":{"data":{}},"abbrlink":"9d66f127","excerpt":"<h2 id=\"pom-xml详解\"><a href=\"#pom-xml详解\" class=\"headerlink\" title=\"pom.xml详解\"></a>pom.xml详解</h2>","more":"<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span>     </span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>     </span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0http://maven.apache.org/maven-v4_0_0.xsd\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。 坐标包括group ID，artifact ID和 version。--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--被继承的父项目的构件标识符--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--被继承的父项目的全球唯一标识符--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--被继承的父项目的版本--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是../pom.xml。Maven首先在构建当前项目的地方寻找父项目的pom，其次在文件系统的这个位置（relativePath位置），然后在本地仓库，最后在远程仓库寻找父项目的pom。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">relativePath</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">relativePath</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。--&gt;</span>       </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目,一般是网址的反写+项目名。构建时生成的路径也是由此生成，如com.yangyuanming.blog生成的相对路径为：/com/yangyuanming/blog--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.yangyuanming.blog<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 构件的标识符，它和group ID一起唯一标识一个构件,通常由”项目名-模块名“构成。换句话说，你不能有两个不同的项目拥有同样的artifactId和groupId；在某个特定的groupId下，artifactId也必须是唯一的。构件是项目产生的或使用的一个东西，Maven为项目产生的构件包括：JARs，源 码，二进制发布和WARs等。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>blog-v1<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>war<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号。版本号包括：snapshot(快照)、alpha(内部测试)、beta(公测)、release(稳定)、GA(正式发布)</span></span><br><span class=\"line\"><span class=\"comment\">  --&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目的名称, Maven产生的文档用--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Yang Yuanming,s Blog<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目主页的URL, Maven产生的文档用--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://yangyuanming.com<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 项目的详细描述, Maven产生的文档用。当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，就可以包含HTML标签），不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的索引页文件，而不是调整这里的文档。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>A blog project<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--描述了这个项目构建环境中的前提条件。--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">prerequisites</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--构建该项目或使用该插件所需要的Maven的最低版本--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">maven</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">maven</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">prerequisites</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目的问题管理系统，如Bugzilla, Jira, Scarab等--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">issueManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--问题管理系统的名字--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">system</span>&gt;</span>jira<span class=\"tag\">&lt;/<span class=\"name\">system</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该项目使用的问题管理系统的URL--&gt;</span>   </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://jira.xxx.com/xxx<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">issueManagement</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目持续集成信息--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ciManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--持续集成系统的名字，例如continuum--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">system</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">system</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">url</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--构建完成时，需要通知的开发者/用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告）--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">notifiers</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--配置一种方式，当构建中断时，以该方式通知用户/开发者--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">notifier</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--传送通知的途径--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">type</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--发生错误时是否通知--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sendOnError</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--构建失败时是否通知--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sendOnFailure</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--构建成功时是否通知--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sendOnSuccess</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--发生警告时是否通知--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sendOnWarning</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--不赞成使用。通知发送到哪里--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">address</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--扩展配置项--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">notifier</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">notifiers</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ciManagement</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目创建年份，4位数字。当产生版权信息时需要使用这个值。--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">inceptionYear</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">inceptionYear</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目相关邮件列表信息--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mailingLists</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mailingList</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--邮件的名称--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Demo<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&gt;</span>     </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">post</span>&gt;</span>chaibozhou@163.com<span class=\"tag\">&lt;/<span class=\"name\">post</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&gt;</span>     </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">subscribe</span>&gt;</span>chaibozhou@163.com<span class=\"tag\">&lt;/<span class=\"name\">subscribe</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&gt;</span>     </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">unsubscribe</span>&gt;</span>chaibozhou@163.com<span class=\"tag\">&lt;/<span class=\"name\">unsubscribe</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--你可以浏览邮件信息的URL--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">archive</span>&gt;</span>chaibozhou@163.com<span class=\"tag\">&lt;/<span class=\"name\">archive</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mailingList</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">mailingLists</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目开发者列表--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">developers</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--某个项目开发者的信息--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">developer</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--SCM里项目开发者的唯一标识符--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>HELLO WORLD<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者的全名--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>chaimm<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者的email--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">email</span>&gt;</span>chaibozhou@163.com<span class=\"tag\">&lt;/<span class=\"name\">email</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者的主页的URL--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">url</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者在项目中扮演的角色，角色元素描述了各种角色--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">roles</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">role</span>&gt;</span>Project Manager<span class=\"tag\">&lt;/<span class=\"name\">role</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">role</span>&gt;</span>Architect<span class=\"tag\">&lt;/<span class=\"name\">role</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">roles</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者所属组织--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">organization</span>&gt;</span>demo<span class=\"tag\">&lt;/<span class=\"name\">organization</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者所属组织的URL--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">organizationUrl</span>&gt;</span>https://yangyuanming.com<span class=\"tag\">&lt;/<span class=\"name\">organizationUrl</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者属性，如即时消息如何处理等--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dept</span>&gt;</span>No<span class=\"tag\">&lt;/<span class=\"name\">dept</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目开发者所在时区， -11到12范围内的整数。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">timezone</span>&gt;</span>-5<span class=\"tag\">&lt;/<span class=\"name\">timezone</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">developer</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">developers</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目的其他贡献者列表--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">contributors</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--项目的其他贡献者。参见developers/developer元素--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">contributor</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">contributor</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">contributors</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--该元素描述了项目所有License列表。 应该只列出该项目的license列表，不要列出依赖项目的 license列表。如果列出多个license，用户可以选择它们中的一个而不是接受所有license。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">licenses</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">license</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--license用于法律上的名称--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Apache 2<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--官方的license正文页面的URL--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--项目分发的主要方式：    </span></span><br><span class=\"line\"><span class=\"comment\">        repo，可以从Maven库下载    </span></span><br><span class=\"line\"><span class=\"comment\">        manual， 用户必须手动下载和安装依赖--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">distribution</span>&gt;</span>repo<span class=\"tag\">&lt;/<span class=\"name\">distribution</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--关于license的补充信息--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">comments</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comments</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">license</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">licenses</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">scm</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">connection</span>&gt;</span>     </span><br><span class=\"line\">      scm:svn:http://svn.baidu.com/banseon/maven/banseon/banseon-maven2-trunk(dao-trunk)      </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">connection</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--给开发者使用的，类似connection元素。即该连接不仅仅只读--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">developerConnection</span>&gt;</span>     </span><br><span class=\"line\">      scm:svn:http://svn.baidu.com/banseon/maven/banseon/dao-trunk      </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">developerConnection</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--当前代码的标签，在开发阶段默认为HEAD--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tag</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">tag</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://svn.baidu.com/banseon<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">scm</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--描述项目所属组织的各种属性。Maven产生的文档用--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">organization</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--组织的全名--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>demo<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--组织主页的URL--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://yangyuanming.com<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">organization</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--构建项目需要的信息--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该元素配置了构建输出文件的存放目录，默认$&#123;project.basedir&#125;/target--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--产生的构件的文件名，默认值是$&#123;artifactId&#125;-$&#123;version&#125;。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">finalName</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">finalName</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。默认$&#123;project.basedir&#125;/src/main/java--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sourceDirectory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">sourceDirectory</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容会被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。$&#123;project.basedir&#125;/src/main/scripts--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scriptSourceDirectory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">scriptSourceDirectory</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。默认$&#123;project.basedir&#125;/src/test/java--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">testSourceDirectory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">testSourceDirectory</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--被编译过的应用程序class文件存放的目录。默认$&#123;project.build.directory&#125;/classes--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">outputDirectory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">outputDirectory</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--被编译过的测试class文件存放的目录。默认$&#123;project.build.directory&#125;/test-classes--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">testOutputDirectory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">testOutputDirectory</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--使用来自该项目的一系列构建扩展--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">extensions</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--描述使用到的构建扩展。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">extension</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--构建扩展的groupId--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--构建扩展的artifactId--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--构建扩展的版本--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">extension</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">extensions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--当项目没有规定目标（Maven2 叫做阶段）时的默认值--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">defaultGoal</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">defaultGoal</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--这个元素描述了项目相关的资源信息--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 描述了资源的目标路径。该路径相对target/classes目录（例如$&#123;project.build.outputDirectory&#125;）。举个例子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为org/apache/maven/messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetPath</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">targetPath</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素里列出。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">filtering</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--描述存放资源的目录，该路径相对POM路径。默认$&#123;project.basedir&#125;/src/main/resources--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">directory</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--包含的模式列表，例如**/*.xml.--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">includes</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--排除的模式列表，例如**/*.xml--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">excludes</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">excludes</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">testResources</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--这个元素描述了测试相关的资源信息--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">testResource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetPath</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">targetPath</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">filtering</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--默认$&#123;project.basedir&#125;/src/test/resources--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">directory</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">includes</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">excludes</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">excludes</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">testResource</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">testResources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--当filtering开关打开时，使用到的过滤器属性文件列表--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filters</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">filters</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">pluginManagement</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--使用的插件列表 。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--plugin元素包含描述插件所需要的信息。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--插件在仓库里的group ID--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--插件在仓库里的artifact ID--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--被使用的插件的版本（或版本范围）--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该元素才被设置成enabled。--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">extensions</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">extensions</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--execution元素包含了插件执行需要的信息--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!--执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标--&gt;</span>    </span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!--绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段--&gt;</span>    </span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">phase</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!--配置的执行目标--&gt;</span>    </span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!--配置是否被传播到子POM--&gt;</span>    </span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">inherited</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!--作为DOM对象的配置--&gt;</span>    </span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--项目引入插件所需要的额外依赖--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">              ......    </span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--任何配置是否被传播到子项目--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">inherited</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--作为DOM对象的配置--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">pluginManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--使用的插件列表--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">extendsions</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">extensions</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">phase</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">inherited</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">            ......    </span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">inherited</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">modules</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">modules</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--发现依赖和扩展的远程仓库列表。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--包含需要连接到远程仓库的信息--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--如何处理远程仓库里发布版本的下载--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">enabled</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，为每种类型的构件采取不同的 策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素 --&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--远程仓库唯一标识符。可以用来匹配在settings.xml文件里配置的远程仓库--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>banseon-repository-proxy<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--远程仓库名称--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>banseon-repository-proxy<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--远程仓库URL，按protocol://hostname/path形式--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://192.168.1.169:9999/repository/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认的布局；然 而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">layout</span>&gt;</span>default<span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--发现插件的远程仓库列表，这些插件用于构建和报表--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">pluginRepository</span>&gt;</span>    </span><br><span class=\"line\">      ......    </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--依赖的group ID--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--依赖的artifact ID--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-artifact<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.8.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。类型经常和使用的打包方式对应， 尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。如果设置extensions为 true，就可以在 plugin里定义新的类型。所以前面的类型的例子不完整。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，如果你想要构建两个单独的构件成 JAR，一个使用Java 1.4编译器，另一个使用Java 6编译器，你就可以使用分类器来生成两个单独的JAR构件。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">classifier</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">classifier</span>&gt;</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">&lt;!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。</span></span><br><span class=\"line\"><span class=\"comment\">      - compile:编译依赖范围。如果没有指定，就会默认使用该依赖范围，使用此依赖范围的Maven依赖，对于编译、测试、运行三种classpath都有效。此外，这些依赖关系会传播到依赖项目。</span></span><br><span class=\"line\"><span class=\"comment\">      - test:测试依赖范围。使用该范围的Maven依赖，只对于测试classpath有效，在编译主代码或者运行项目的使用时将无法使用此类依赖。典型的例子是JUnit,它只是在编译测试代码和运行测试的时候需要该依赖。这个范围是不可传递的。     </span></span><br><span class=\"line\"><span class=\"comment\">      - provided：已提供依赖范围。使用此依赖范围的Maven依赖，对于编译和测试的classpath有效，但是在运行时无效。典型的例子是servlet-api，编译和测试项目的时候需要改依赖，但是在运行项目的时候，由于容器已经提供，就不需要Maven重复地引入一遍。该依赖不可传递。</span></span><br><span class=\"line\"><span class=\"comment\">      - runtime:运行时依赖范围。使用此依赖范围的Maven依赖，对于测试和运行classpath有效，但是编译主代码时无效。典型的例子是JDBC驱动实现，项目主代码的编译只需要JDK提供的JDBC接口，只有在测试或者运行项目的时候才需要实现上述接口的JDBC驱动。</span></span><br><span class=\"line\"><span class=\"comment\">      - system:系统依赖范围，该范围与三种classpath的关系，和provided依赖范围完全一致。但是，使用system范围的依赖时必须通过systemPath元素显式的指定依赖文件的路径。由于此类依赖不是通过Maven仓库解析，而且往往与本机系统绑定，可能造成构建的不可移植，因此需要谨慎使用。</span></span><br><span class=\"line\"><span class=\"comment\">      - import(Maven 2.0.9及以上)：导入依赖范围。该依赖范围不会对三种classpath产生实际的影响--&gt;</span>     </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--仅供system scope使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如$&#123;java.home&#125;。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">systemPath</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">systemPath</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的依赖。此元素主要用于解决版本冲突问题--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。可选依赖阻断依赖的传递性。如果为true，需要显式引用--&gt;</span>     </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--不赞成使用. 现在Maven忽略该元素.--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">reports</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">reports</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--该元素描述使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">reporting</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--true，则，网站不包括默认的报表。这包括“项目信息”菜单中的报表。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">excludeDefaults</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">excludeDefaults</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--所有产生的报表存放到哪里。默认值是$&#123;project.build.directory&#125;/site。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">outputDirectory</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">outputDirectory</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--使用的报表插件和他们的配置。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--报表插件在仓库里的group ID--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--报表插件在仓库里的artifact ID--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--被使用的报表插件的版本（或版本范围）--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--任何配置是否被传播到子项目--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">inherited</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--报表插件的配置--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--一组报表的多重规范，每个规范可能有不同的配置。一个规范（报表集）对应一个执行目标 。例如，有1，2，3，4，5，6，7，8，9个报表。1，2，5构成A报表集，对应一个执行目标。2，5，8构成B报表集，对应另一个执行目标--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">reportSets</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--表示报表的一个集合，以及产生该集合的配置--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">reportSet</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--报表集合的唯一标识符，POM继承时用到--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--产生报表集合时，被使用的报表的配置--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--配置是否被继承到子POMs--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">inherited</span>&gt;</span>&gt;<span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--这个集合里使用到哪些报表--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">reports</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">reportSet</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">reportSets</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">reporting</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖（必须描述group ID和 artifact ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过group ID和artifact ID 匹配到这里的依赖，并使用这里的依赖信息。--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">        ......    </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者把构件部署到远程仓库。--&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--部署项目产生的构件到远程仓库需要的信息--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见repositories/repository元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">uniqueVersion</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">uniqueVersion</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>banseon-maven2<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>banseon maven2<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>file://$&#123;basedir&#125;/target/deploy<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">layout</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见distributionManagement/repository元素--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">snapshotRepository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">uniqueVersion</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">uniqueVersion</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>banseon-maven2<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Banseon-maven2 Snapshot Repository<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>scp://svn.baidu.com/banseon:/usr/local/maven-snapshot<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">layout</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">layout</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">snapshotRepository</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--部署项目的网站需要的信息--&gt;</span>     </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">site</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置--&gt;</span>     </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>banseon-site<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--部署位置的名称--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>business api website<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--部署位置的URL，按protocol://hostname/path形式--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>     </span><br><span class=\"line\">        scp://svn.baidu.com/banseon:/var/www/localhost/banseon-web      </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">site</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位那些不在仓库里的构件（由于license限制）。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">downloadUrl</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">downloadUrl</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--如果构件有了新的group ID和artifact ID（构件移到了新的位置），这里列出构件的重定位信息。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">relocation</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--构件新的group ID--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--构件新的artifact ID--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--构件新的版本号--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--显示给用户的，关于移动的额外信息，例如原因。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">message</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">message</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">relocation</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值有：none（默认），converted（仓库管理员从 Maven 1 POM转换过来），partner（直接从伙伴Maven 2仓库同步过来），deployed（从Maven 2实例部 署），verified（被核实时正确的和最终的）。--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">status</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">&lt;!--以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里activation元素的说明）。格式是&lt;name&gt;value&lt;/name&gt;。--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">properties</span>/&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">&lt;!--在列的项目构建profile，如果被激活，会修改构建处理--&gt;</span>    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">profiles</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--根据环境参数或命令行参数激活某个构建处理--&gt;</span>    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--自动触发profile的条件逻辑。Activation是profile的开启钥匙。profile的力量来自于它    </span></span><br><span class=\"line\"><span class=\"comment\">        能够在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。activation元素并不是激活profile的唯一方式。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--profile默认是否激活的标志,当值为true，如果没有被指定激活的profile，该profile就会被默认被激活--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">activeByDefault</span>&gt;</span>true<span class=\"tag\">&lt;<span class=\"name\">activeByDefault</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--当匹配的jdk被检测到，profile被激活。例如，1.4激活JDK1.4，1.4.0_2，而!1.4激活所有版本不是以1.4开头的JDK。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">jdk</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">jdk</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">os</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--激活profile的操作系统的名字--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Windows XP<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--激活profile的操作系统所属家族(如 'windows')--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">family</span>&gt;</span>Windows<span class=\"tag\">&lt;/<span class=\"name\">family</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--激活profile的操作系统体系结构 --&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">arch</span>&gt;</span>x86<span class=\"tag\">&lt;/<span class=\"name\">arch</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--激活profile的操作系统版本--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.2600<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">os</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--如果Maven检测到某一个属性（其值可以在POM中通过$&#123;名称&#125;引用），其拥有对应的名称和值，Profile就会被激活。如果值    </span></span><br><span class=\"line\"><span class=\"comment\">          字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹配属性值字段--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--激活profile的属性的名称--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mavenVersion<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--激活profile的属性的值--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>2.0.3<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活    </span></span><br><span class=\"line\"><span class=\"comment\">          profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">file</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--如果指定的文件存在，则激活profile。--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">exists</span>&gt;</span>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/<span class=\"tag\">&lt;/<span class=\"name\">exists</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--如果指定的文件不存在，则激活profile。--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">missing</span>&gt;</span>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/<span class=\"tag\">&lt;/<span class=\"name\">missing</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">file</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--构建项目所需要的信息。参见build元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">defaultGoal</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">targetPath</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">filtering</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">directory</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">includes</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">excludes</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">testResources</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">testResource</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">targetPath</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">filtering</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">directory</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">includes</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">excludes</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">testResource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">testResources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">directory</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">finalName</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filters</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pluginManagement</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</span>    </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">extensions</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">phase</span>/&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">                  ......    </span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">pluginManagement</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">extensions</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">phase</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">                ......    </span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">goals</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">inherited</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">configuration</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">modules</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">modules</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--发现依赖和扩展的远程仓库列表。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--参见repositories/repository元素--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">enabled</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">enabled</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">name</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">url</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">layout</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--发现插件的远程仓库列表，这些插件用于构建和报表--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--&gt;</span>        </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">enabled</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">enabled</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">id</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">name</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">url</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">layout</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">          ......    </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--不赞成使用. 现在Maven忽略该元素.--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">reports</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--该元素包括使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。参见reporting元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">reporting</span>&gt;</span>    </span><br><span class=\"line\">        ......    </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">reporting</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--参见dependencyManagement元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">          <span class=\"comment\">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>    </span><br><span class=\"line\">            ......    </span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--参见distributionManagement元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">distributionManagement</span>&gt;</span>    </span><br><span class=\"line\">        ......    </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--参见properties元素--&gt;</span>    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">properties</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">profiles</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><strong>hcmony</strong>,<a href=\"https://blog.csdn.net/hcmony/article/details/56013655\" target=\"_blank\" rel=\"noopener\">Maven使用详解，非常详细</a></p>","popularPost_tmp_postPath":true,"popularPost_tmp_gaData":{"updated":"Sun Aug 12 2018 14:00:51 GMT+0800 (CST)","title":"maven(三):pom.xml详解","path":"post/9d66f127.html","eyeCatchImage":null,"excerpt":"<h2 id=\"pom-xml详解\"><a href=\"#pom-xml详解\" class=\"headerlink\" title=\"pom.xml详解\"></a>pom.xml详解</h2>","date":"2018-08-07T14:03:00.000Z","pv":0,"totalPV":0,"categories":"工具学习 > maven","tags":["maven","pom.xml"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"maven(四):依赖","comment":true,"date":"2018-08-12T06:00:00.000Z","_content":"## 依赖的配置\n<!--more-->\n\n```xml\nproject>\n    ......\n    <dependencies>\n        <dependency>\n            <groupId>...</groupId>\n            <artifactId>...</artifactId>\n            <version>...</version>\n            <type>...</type>\n            <scope>...</scope>\n            <systemPath></systemPath>\n            <optional>...<optional>\n            <exclusions>\n                <exclusion>...</exclusion>\n            </exclusions>\n            ....\n        </dependency>\n    </dependencies>\n    .........\n</project>\n```\n* groupId、artifactId、version：构成依赖的基本坐标\n* type：依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。对应于项目坐标中的packaging\n* scope：依赖范围，默认compile，作用是控制依赖和3种classpath的关系，另外还会影响依赖传递，[maven官方介绍](https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html)。maven3种classpath:编译、运行、测试，各依赖范围与classpath的关系如下\n    - compile:编译依赖范围。如果没有指定，就会默认使用该依赖范围，使用此依赖范围的Maven依赖，对于编译、测试、运行三种classpath都有效。此外，这些依赖关系会传播到依赖项目。\n    - test:测试依赖范围。使用该范围的Maven依赖，只对于测试classpath有效，在编译主代码或者运行项目的使用时将无法使用此类依赖。典型的例子是JUnit,它只是在编译测试代码和运行测试的时候需要该依赖。这个范围是不可传递的。     \n    - provided：已提供依赖范围。使用此依赖范围的Maven依赖，对于编译和测试的classpath有效，但是在运行时无效。典型的例子是servlet-api，编译和测试项目的时候需要改依赖，但是在运行项目的时候，由于容器已经提供，就不需要Maven重复地引入一遍。该依赖不可传递。\n    - runtime:运行时依赖范围。使用此依赖范围的Maven依赖，对于测试和运行classpath有效，但是编译主代码时无效。典型的例子是JDBC驱动实现，项目主代码的编译只需要JDK提供的JDBC接口，只有在测试或者运行项目的时候才需要实现上述接口的JDBC驱动。\n    - import(Maven 2.0.9及以上)：导入依赖范围。仅支持依赖类型为pom的依赖，该pom配置了<dependencyManagement>。该依赖范围不会对三种classpath产生实际的影响,不参与限制依赖关系的传递性。。\n    - system:系统依赖范围，该范围与三种classpath的关系，和provided依赖范围完全一致。但是，使用system范围的依赖时必须通过systemPath元素显式的指定依赖文件的路径。由于此类依赖不是通过Maven仓库解析，而且往往与本机系统绑定，可能造成构建的不可移植，因此需要谨慎使用。systemPath元素可以引用环境变量，如：\n            \n    ```xml\n    <dependency>\n        <groupId>javax.sql</groupId>\n        <artifactId>jdbc-stdext</artifactId>\n        <version>2.0</version>\n        <scope>system</scope>\n        <systemPath>${java.home}/lib/rt.jar</systemPath>\n    </dependency>\n    ```\n> 除import外，各依赖和3种classpath的关系如下\n\n| 依赖范围 | 编译 | 测试 | 运行  | 例子 |\n| --- | :-: | :-: | :-: | --- |\n| compile | Y | Y | Y | spring-core |\n| test |   | Y |  | junit |\n| provided | Y | Y |  | servlet-api |\n| runtime |  | Y | Y | JDBC驱动实现 |\n| system | Y | Y |  | 本地的，Maven仓库之外的类库文件 |\n\n* systemPath：仅供scope为system时使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如${java.home}。\n* optional：可选依赖，控制依赖的可传递性。如果为true，则其子项不会引入该依赖。如果子项要引用该依赖，需要显式引用。\n* exclusions：用于排除传递性依赖。A引入依赖B，而B依赖C，由于依赖会传递，A也会引入依赖C。如果A不想引入依赖C，则可以在引入B依赖时设置exclusion，排除传递依赖C。\n\n## 依赖传递\n### 例子解释\nmaven项目中可能会存在依赖多层引用，例如项目A依赖B,B依赖n个其他项目，A不需要手动再引用B所依赖的n个项目。Maven会解析各个直接依赖的POM，将那些必要的间接依赖，以传递性依赖的形式引入到当前的项目当中。\n### 传递性依赖和依赖范围\n每个作用域(除了import )以不同的方式影响传递依赖关系，如下表所示。如果将依赖项设置为左列中的范围，则该依赖项与顶部行中的范围的传递依赖项将导致主项目中的依赖项与交叉列出的范围。如果没有列出范围，这意味着将省略相关性。\n\n|  | compile | provided | runtime | test |\n| --- | --- | --- | --- | --- |\n| compile | compile | - | runtime | - |\n| provided | provided | - | provided | - |\n| runtime | runtime | - | runtime | - |\n| test | test | - | test | - |\n\n## 依赖冲突\nmaven的传递性依赖方便了我们开发，一般我们只关心直接依赖而不会关心传递依赖。但当传递性依赖发生问题时，我们需要清楚传递性依赖的来源。传递性依赖是可能存在冲突的，比如某个依赖路径可能存在多个相同依赖，只是版本号不同，那么使用哪个传递依赖呢？maven遵循两个原则：\n### 第一原则：短路优先\n例如，项目A存在以下传递依赖\n`A-->B-->C-->D(1.0)`\n`A-->C-->D(2.0)`\n根据第一原则，项目A会使用D(2.0)\n### 第二原则：声明优先\n有时候存在路径长度相同的情况，这时遵循第二原则\n`A-->B-->D(1.0)`\n`A-->C-->D(2.0)`\n假设`A-->B-->D(1.0)`先声明，那么项目A会使用D(1.0)\n## 可选依赖\n可选依赖是由`<dependency>`中的`<optional>`标签定义的，默认为false，如果声明为`<optional>true</optional>`,那么子项目将不会隐式引入该依赖，如果需要引入，需要在子项目的pom.xml中显式引入。\n为什么需要设置可选依赖？可能项目A实现了两个特性，其中的特性一依赖于X，特性二依赖于Y,而且这两个特性是互斥的，用户不可能同时使用两个特性。比如A是一个持久层隔离工具包，它支持多种数据库，报错MySQL、Oracle,在构建这个工具包的时候，需要这两种数据库的驱动程序，但是在使用这个工具包的时候，只会依赖一种数据库。\n在理想的情况下，是不应该使用可选依赖的。除非是某一个项目实现了多个互斥的特性，在面向对象设计中，有个单一职责性原则，意指一个类应该只要一项职责。\n## 排除传递依赖\n传递性依赖会给项目隐式引入很多依赖，大大方便了依赖的管理，但有时候会带来问题。例如存在以下依赖传递：  \n`A-->B-->C`  \n由于传递依赖C是SNAPSHOT版本，引入C会给项目A带来问题，实际上C存在release版的，引入release版的对C没有问题，这时就需要在引入依赖B的声明中排除C(SNAPSHOT),然后再显式引入C(release)。\n\n```xml\n<groupId>com.yangyuanming</groupId>\n<artifactId>project-A</artifactId>\n<version>1.0.0</version>\n<dependencies>\n    <dependency>\n        <groupId>com.yangyuanming</groupId>\n        <artifactId>project-B</artifactId>\n        <version>1.0.0</version>\n        <!--排除传递依赖-->\n        <exclusions>\n            <exclusion>\n                <groupId>com.yangyuanming</groupId>\n                <artifactId>project-C</artfactId>\n            </exclusion>\n        </exclusions>\n    </dependency>\n    <!--显式引入所需的依赖C稳定版-->\n    <dependency>\n        <groupId>com.yangyuanming</groupId>\n        <artifactId>project-C</artifactId>\n        <version>1.1.0</version>\n    </dependency>\n</dependencies>\n```\n上述代码中，项目A在引入依赖B时，使用`<exclusion>`排除了传递依赖C，然后再显式引入了另一个版本的依赖C。也可能存在其他原因不想引入某个传递性依赖，可以在`<exclusions>`中声明多个`<exclusion>`排除多个传递依赖。\n声明`<exclusion>`时只需要指明`<groupId>`和`<artifactId>`\n## 归并依赖\n来自A项目的不同模块，版本号是相同的。当B项目需要引入A项目的多个模块时，一般要保证引入A项目的多个模块的版本号是相同的，为了方便B项目管理引入的多个模块(A项目)，需要做归并处理。\n举个例子，Spring Framework包含很多模块，例如core:2.5.6、bean:2.5.6、context:2.5.6和support:2.5.6,他们来着同一项目的不同模块，因此，所有这些依赖的版本都是相同的，而且，如果以后需要升级Spring Framework，这些依赖的版本会一起升级，这样我们就可以像Java中声明一个Constants一样，为依赖的项目的版本设置一个这样类似常量的东西。这样在升级Spring Framework的时候就需要修改一处，代码如下：\n\n```xml\n<project>\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.up366.feishu</groupId>\n    <artfactId>feishu_v3</artifactId>\n    <name>feishu_v3</name>\n    <version>1.0.0-SNAPSHOT</version>\n    \n    <properties>\n        <springframework.version>2.5.6</springframework.version>\n    </properties>\n    \n    <dependencies>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifact>spring-core</artifact>\n            <version>${springframework.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifact>spring-beans</artifact>\n            <version>${springframework.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifact>spring-context</artifact>\n            <version>${springframework.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifact>spring-context-support</artifact>\n            <version>${springframework.version}</version>\n        </dependency>\n    </dependencies>\n</project>\n```\n上面代码定义maven属性，定义了一个`<springframework.version>`，指定Spring Framework的版本号，然后在引入的依赖的`<version>`中引用该属性，达到统一管理版本号的作用。\n## 优化依赖\n查看已解析依赖可以使用命令，如下：\n\n* 列表形式查看命令：mvn dependency:list\n* 树状结构查看命令：mvn dependency:tree\n* 依赖分析命令：mvn dependency:analyze\nmvn dependency:analyze由两部分组成，首先是Used updeclared dependencies,意指项目中使用到的，没有显式声明的依赖。\n其次是Unused declared dependencies，意指项目中没有使用的，但是显是声明了的依赖。需要注意的是，对于这一类依赖，我们不应该简单的直接删除其声明，而是应该仔细分析，由于dependency:analyze只会分析编译主代码和测试代码需要用到的依赖，一些执行测试和运行时需要的依赖它就发现不了。建议不要乱删，当然有时候确实能通过该信息找到一些没用的依赖，但一定要小心测试。\n## 参考资料\nlofty，[Maven——坐标与依赖](http://www.cnblogs.com/wangwei-beijing/p/6535073.html)\n[Introduction to the Dependency Mechanism](https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html)\n\n\n\n","source":"_posts/maven(四)依赖.md","raw":"---\ntitle: maven(四):依赖\ncomment: true\ntags:\n  - maven\n  - maven依赖\ncategories:\n  - 工具学习\n  - maven\ndate: 2018-08-12 14:00:00\n---\n## 依赖的配置\n<!--more-->\n\n```xml\nproject>\n    ......\n    <dependencies>\n        <dependency>\n            <groupId>...</groupId>\n            <artifactId>...</artifactId>\n            <version>...</version>\n            <type>...</type>\n            <scope>...</scope>\n            <systemPath></systemPath>\n            <optional>...<optional>\n            <exclusions>\n                <exclusion>...</exclusion>\n            </exclusions>\n            ....\n        </dependency>\n    </dependencies>\n    .........\n</project>\n```\n* groupId、artifactId、version：构成依赖的基本坐标\n* type：依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。对应于项目坐标中的packaging\n* scope：依赖范围，默认compile，作用是控制依赖和3种classpath的关系，另外还会影响依赖传递，[maven官方介绍](https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html)。maven3种classpath:编译、运行、测试，各依赖范围与classpath的关系如下\n    - compile:编译依赖范围。如果没有指定，就会默认使用该依赖范围，使用此依赖范围的Maven依赖，对于编译、测试、运行三种classpath都有效。此外，这些依赖关系会传播到依赖项目。\n    - test:测试依赖范围。使用该范围的Maven依赖，只对于测试classpath有效，在编译主代码或者运行项目的使用时将无法使用此类依赖。典型的例子是JUnit,它只是在编译测试代码和运行测试的时候需要该依赖。这个范围是不可传递的。     \n    - provided：已提供依赖范围。使用此依赖范围的Maven依赖，对于编译和测试的classpath有效，但是在运行时无效。典型的例子是servlet-api，编译和测试项目的时候需要改依赖，但是在运行项目的时候，由于容器已经提供，就不需要Maven重复地引入一遍。该依赖不可传递。\n    - runtime:运行时依赖范围。使用此依赖范围的Maven依赖，对于测试和运行classpath有效，但是编译主代码时无效。典型的例子是JDBC驱动实现，项目主代码的编译只需要JDK提供的JDBC接口，只有在测试或者运行项目的时候才需要实现上述接口的JDBC驱动。\n    - import(Maven 2.0.9及以上)：导入依赖范围。仅支持依赖类型为pom的依赖，该pom配置了<dependencyManagement>。该依赖范围不会对三种classpath产生实际的影响,不参与限制依赖关系的传递性。。\n    - system:系统依赖范围，该范围与三种classpath的关系，和provided依赖范围完全一致。但是，使用system范围的依赖时必须通过systemPath元素显式的指定依赖文件的路径。由于此类依赖不是通过Maven仓库解析，而且往往与本机系统绑定，可能造成构建的不可移植，因此需要谨慎使用。systemPath元素可以引用环境变量，如：\n            \n    ```xml\n    <dependency>\n        <groupId>javax.sql</groupId>\n        <artifactId>jdbc-stdext</artifactId>\n        <version>2.0</version>\n        <scope>system</scope>\n        <systemPath>${java.home}/lib/rt.jar</systemPath>\n    </dependency>\n    ```\n> 除import外，各依赖和3种classpath的关系如下\n\n| 依赖范围 | 编译 | 测试 | 运行  | 例子 |\n| --- | :-: | :-: | :-: | --- |\n| compile | Y | Y | Y | spring-core |\n| test |   | Y |  | junit |\n| provided | Y | Y |  | servlet-api |\n| runtime |  | Y | Y | JDBC驱动实现 |\n| system | Y | Y |  | 本地的，Maven仓库之外的类库文件 |\n\n* systemPath：仅供scope为system时使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如${java.home}。\n* optional：可选依赖，控制依赖的可传递性。如果为true，则其子项不会引入该依赖。如果子项要引用该依赖，需要显式引用。\n* exclusions：用于排除传递性依赖。A引入依赖B，而B依赖C，由于依赖会传递，A也会引入依赖C。如果A不想引入依赖C，则可以在引入B依赖时设置exclusion，排除传递依赖C。\n\n## 依赖传递\n### 例子解释\nmaven项目中可能会存在依赖多层引用，例如项目A依赖B,B依赖n个其他项目，A不需要手动再引用B所依赖的n个项目。Maven会解析各个直接依赖的POM，将那些必要的间接依赖，以传递性依赖的形式引入到当前的项目当中。\n### 传递性依赖和依赖范围\n每个作用域(除了import )以不同的方式影响传递依赖关系，如下表所示。如果将依赖项设置为左列中的范围，则该依赖项与顶部行中的范围的传递依赖项将导致主项目中的依赖项与交叉列出的范围。如果没有列出范围，这意味着将省略相关性。\n\n|  | compile | provided | runtime | test |\n| --- | --- | --- | --- | --- |\n| compile | compile | - | runtime | - |\n| provided | provided | - | provided | - |\n| runtime | runtime | - | runtime | - |\n| test | test | - | test | - |\n\n## 依赖冲突\nmaven的传递性依赖方便了我们开发，一般我们只关心直接依赖而不会关心传递依赖。但当传递性依赖发生问题时，我们需要清楚传递性依赖的来源。传递性依赖是可能存在冲突的，比如某个依赖路径可能存在多个相同依赖，只是版本号不同，那么使用哪个传递依赖呢？maven遵循两个原则：\n### 第一原则：短路优先\n例如，项目A存在以下传递依赖\n`A-->B-->C-->D(1.0)`\n`A-->C-->D(2.0)`\n根据第一原则，项目A会使用D(2.0)\n### 第二原则：声明优先\n有时候存在路径长度相同的情况，这时遵循第二原则\n`A-->B-->D(1.0)`\n`A-->C-->D(2.0)`\n假设`A-->B-->D(1.0)`先声明，那么项目A会使用D(1.0)\n## 可选依赖\n可选依赖是由`<dependency>`中的`<optional>`标签定义的，默认为false，如果声明为`<optional>true</optional>`,那么子项目将不会隐式引入该依赖，如果需要引入，需要在子项目的pom.xml中显式引入。\n为什么需要设置可选依赖？可能项目A实现了两个特性，其中的特性一依赖于X，特性二依赖于Y,而且这两个特性是互斥的，用户不可能同时使用两个特性。比如A是一个持久层隔离工具包，它支持多种数据库，报错MySQL、Oracle,在构建这个工具包的时候，需要这两种数据库的驱动程序，但是在使用这个工具包的时候，只会依赖一种数据库。\n在理想的情况下，是不应该使用可选依赖的。除非是某一个项目实现了多个互斥的特性，在面向对象设计中，有个单一职责性原则，意指一个类应该只要一项职责。\n## 排除传递依赖\n传递性依赖会给项目隐式引入很多依赖，大大方便了依赖的管理，但有时候会带来问题。例如存在以下依赖传递：  \n`A-->B-->C`  \n由于传递依赖C是SNAPSHOT版本，引入C会给项目A带来问题，实际上C存在release版的，引入release版的对C没有问题，这时就需要在引入依赖B的声明中排除C(SNAPSHOT),然后再显式引入C(release)。\n\n```xml\n<groupId>com.yangyuanming</groupId>\n<artifactId>project-A</artifactId>\n<version>1.0.0</version>\n<dependencies>\n    <dependency>\n        <groupId>com.yangyuanming</groupId>\n        <artifactId>project-B</artifactId>\n        <version>1.0.0</version>\n        <!--排除传递依赖-->\n        <exclusions>\n            <exclusion>\n                <groupId>com.yangyuanming</groupId>\n                <artifactId>project-C</artfactId>\n            </exclusion>\n        </exclusions>\n    </dependency>\n    <!--显式引入所需的依赖C稳定版-->\n    <dependency>\n        <groupId>com.yangyuanming</groupId>\n        <artifactId>project-C</artifactId>\n        <version>1.1.0</version>\n    </dependency>\n</dependencies>\n```\n上述代码中，项目A在引入依赖B时，使用`<exclusion>`排除了传递依赖C，然后再显式引入了另一个版本的依赖C。也可能存在其他原因不想引入某个传递性依赖，可以在`<exclusions>`中声明多个`<exclusion>`排除多个传递依赖。\n声明`<exclusion>`时只需要指明`<groupId>`和`<artifactId>`\n## 归并依赖\n来自A项目的不同模块，版本号是相同的。当B项目需要引入A项目的多个模块时，一般要保证引入A项目的多个模块的版本号是相同的，为了方便B项目管理引入的多个模块(A项目)，需要做归并处理。\n举个例子，Spring Framework包含很多模块，例如core:2.5.6、bean:2.5.6、context:2.5.6和support:2.5.6,他们来着同一项目的不同模块，因此，所有这些依赖的版本都是相同的，而且，如果以后需要升级Spring Framework，这些依赖的版本会一起升级，这样我们就可以像Java中声明一个Constants一样，为依赖的项目的版本设置一个这样类似常量的东西。这样在升级Spring Framework的时候就需要修改一处，代码如下：\n\n```xml\n<project>\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.up366.feishu</groupId>\n    <artfactId>feishu_v3</artifactId>\n    <name>feishu_v3</name>\n    <version>1.0.0-SNAPSHOT</version>\n    \n    <properties>\n        <springframework.version>2.5.6</springframework.version>\n    </properties>\n    \n    <dependencies>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifact>spring-core</artifact>\n            <version>${springframework.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifact>spring-beans</artifact>\n            <version>${springframework.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifact>spring-context</artifact>\n            <version>${springframework.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifact>spring-context-support</artifact>\n            <version>${springframework.version}</version>\n        </dependency>\n    </dependencies>\n</project>\n```\n上面代码定义maven属性，定义了一个`<springframework.version>`，指定Spring Framework的版本号，然后在引入的依赖的`<version>`中引用该属性，达到统一管理版本号的作用。\n## 优化依赖\n查看已解析依赖可以使用命令，如下：\n\n* 列表形式查看命令：mvn dependency:list\n* 树状结构查看命令：mvn dependency:tree\n* 依赖分析命令：mvn dependency:analyze\nmvn dependency:analyze由两部分组成，首先是Used updeclared dependencies,意指项目中使用到的，没有显式声明的依赖。\n其次是Unused declared dependencies，意指项目中没有使用的，但是显是声明了的依赖。需要注意的是，对于这一类依赖，我们不应该简单的直接删除其声明，而是应该仔细分析，由于dependency:analyze只会分析编译主代码和测试代码需要用到的依赖，一些执行测试和运行时需要的依赖它就发现不了。建议不要乱删，当然有时候确实能通过该信息找到一些没用的依赖，但一定要小心测试。\n## 参考资料\nlofty，[Maven——坐标与依赖](http://www.cnblogs.com/wangwei-beijing/p/6535073.html)\n[Introduction to the Dependency Mechanism](https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html)\n\n\n\n","slug":"maven(四)依赖","published":1,"updated":"2018-08-12T06:04:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjkqg7nr4000fdfzlxk8trwpp","content":"<h2 id=\"依赖的配置\"><a href=\"#依赖的配置\" class=\"headerlink\" title=\"依赖的配置\"></a>依赖的配置</h2><a id=\"more\"></a>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project&gt;</span><br><span class=\"line\">    ......</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">systemPath</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">systemPath</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>...<span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">            ....</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    .........</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>groupId、artifactId、version：构成依赖的基本坐标</li>\n<li>type：依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。对应于项目坐标中的packaging</li>\n<li><p>scope：依赖范围，默认compile，作用是控制依赖和3种classpath的关系，另外还会影响依赖传递，<a href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html\" target=\"_blank\" rel=\"noopener\">maven官方介绍</a>。maven3种classpath:编译、运行、测试，各依赖范围与classpath的关系如下</p>\n<ul>\n<li>compile:编译依赖范围。如果没有指定，就会默认使用该依赖范围，使用此依赖范围的Maven依赖，对于编译、测试、运行三种classpath都有效。此外，这些依赖关系会传播到依赖项目。</li>\n<li>test:测试依赖范围。使用该范围的Maven依赖，只对于测试classpath有效，在编译主代码或者运行项目的使用时将无法使用此类依赖。典型的例子是JUnit,它只是在编译测试代码和运行测试的时候需要该依赖。这个范围是不可传递的。     </li>\n<li>provided：已提供依赖范围。使用此依赖范围的Maven依赖，对于编译和测试的classpath有效，但是在运行时无效。典型的例子是servlet-api，编译和测试项目的时候需要改依赖，但是在运行项目的时候，由于容器已经提供，就不需要Maven重复地引入一遍。该依赖不可传递。</li>\n<li>runtime:运行时依赖范围。使用此依赖范围的Maven依赖，对于测试和运行classpath有效，但是编译主代码时无效。典型的例子是JDBC驱动实现，项目主代码的编译只需要JDK提供的JDBC接口，只有在测试或者运行项目的时候才需要实现上述接口的JDBC驱动。</li>\n<li>import(Maven 2.0.9及以上)：导入依赖范围。仅支持依赖类型为pom的依赖，该pom配置了<dependencymanagement>。该依赖范围不会对三种classpath产生实际的影响,不参与限制依赖关系的传递性。。</dependencymanagement></li>\n<li><p>system:系统依赖范围，该范围与三种classpath的关系，和provided依赖范围完全一致。但是，使用system范围的依赖时必须通过systemPath元素显式的指定依赖文件的路径。由于此类依赖不是通过Maven仓库解析，而且往往与本机系统绑定，可能造成构建的不可移植，因此需要谨慎使用。systemPath元素可以引用环境变量，如：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.sql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jdbc-stdext<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>system<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">systemPath</span>&gt;</span>$&#123;java.home&#125;/lib/rt.jar<span class=\"tag\">&lt;/<span class=\"name\">systemPath</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>除import外，各依赖和3种classpath的关系如下</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>依赖范围</th>\n<th style=\"text-align:center\">编译</th>\n<th style=\"text-align:center\">测试</th>\n<th style=\"text-align:center\">运行</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>compile</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td>spring-core</td>\n</tr>\n<tr>\n<td>test</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\"></td>\n<td>junit</td>\n</tr>\n<tr>\n<td>provided</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\"></td>\n<td>servlet-api</td>\n</tr>\n<tr>\n<td>runtime</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td>JDBC驱动实现</td>\n</tr>\n<tr>\n<td>system</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\"></td>\n<td>本地的，Maven仓库之外的类库文件</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>systemPath：仅供scope为system时使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如${java.home}。</li>\n<li>optional：可选依赖，控制依赖的可传递性。如果为true，则其子项不会引入该依赖。如果子项要引用该依赖，需要显式引用。</li>\n<li>exclusions：用于排除传递性依赖。A引入依赖B，而B依赖C，由于依赖会传递，A也会引入依赖C。如果A不想引入依赖C，则可以在引入B依赖时设置exclusion，排除传递依赖C。</li>\n</ul>\n<h2 id=\"依赖传递\"><a href=\"#依赖传递\" class=\"headerlink\" title=\"依赖传递\"></a>依赖传递</h2><h3 id=\"例子解释\"><a href=\"#例子解释\" class=\"headerlink\" title=\"例子解释\"></a>例子解释</h3><p>maven项目中可能会存在依赖多层引用，例如项目A依赖B,B依赖n个其他项目，A不需要手动再引用B所依赖的n个项目。Maven会解析各个直接依赖的POM，将那些必要的间接依赖，以传递性依赖的形式引入到当前的项目当中。</p>\n<h3 id=\"传递性依赖和依赖范围\"><a href=\"#传递性依赖和依赖范围\" class=\"headerlink\" title=\"传递性依赖和依赖范围\"></a>传递性依赖和依赖范围</h3><p>每个作用域(除了import )以不同的方式影响传递依赖关系，如下表所示。如果将依赖项设置为左列中的范围，则该依赖项与顶部行中的范围的传递依赖项将导致主项目中的依赖项与交叉列出的范围。如果没有列出范围，这意味着将省略相关性。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>compile</th>\n<th>provided</th>\n<th>runtime</th>\n<th>test</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>compile</td>\n<td>compile</td>\n<td>-</td>\n<td>runtime</td>\n<td>-</td>\n</tr>\n<tr>\n<td>provided</td>\n<td>provided</td>\n<td>-</td>\n<td>provided</td>\n<td>-</td>\n</tr>\n<tr>\n<td>runtime</td>\n<td>runtime</td>\n<td>-</td>\n<td>runtime</td>\n<td>-</td>\n</tr>\n<tr>\n<td>test</td>\n<td>test</td>\n<td>-</td>\n<td>test</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"依赖冲突\"><a href=\"#依赖冲突\" class=\"headerlink\" title=\"依赖冲突\"></a>依赖冲突</h2><p>maven的传递性依赖方便了我们开发，一般我们只关心直接依赖而不会关心传递依赖。但当传递性依赖发生问题时，我们需要清楚传递性依赖的来源。传递性依赖是可能存在冲突的，比如某个依赖路径可能存在多个相同依赖，只是版本号不同，那么使用哪个传递依赖呢？maven遵循两个原则：</p>\n<h3 id=\"第一原则：短路优先\"><a href=\"#第一原则：短路优先\" class=\"headerlink\" title=\"第一原则：短路优先\"></a>第一原则：短路优先</h3><p>例如，项目A存在以下传递依赖<br><code>A--&gt;B--&gt;C--&gt;D(1.0)</code><br><code>A--&gt;C--&gt;D(2.0)</code><br>根据第一原则，项目A会使用D(2.0)</p>\n<h3 id=\"第二原则：声明优先\"><a href=\"#第二原则：声明优先\" class=\"headerlink\" title=\"第二原则：声明优先\"></a>第二原则：声明优先</h3><p>有时候存在路径长度相同的情况，这时遵循第二原则<br><code>A--&gt;B--&gt;D(1.0)</code><br><code>A--&gt;C--&gt;D(2.0)</code><br>假设<code>A--&gt;B--&gt;D(1.0)</code>先声明，那么项目A会使用D(1.0)</p>\n<h2 id=\"可选依赖\"><a href=\"#可选依赖\" class=\"headerlink\" title=\"可选依赖\"></a>可选依赖</h2><p>可选依赖是由<code>&lt;dependency&gt;</code>中的<code>&lt;optional&gt;</code>标签定义的，默认为false，如果声明为<code>&lt;optional&gt;true&lt;/optional&gt;</code>,那么子项目将不会隐式引入该依赖，如果需要引入，需要在子项目的pom.xml中显式引入。<br>为什么需要设置可选依赖？可能项目A实现了两个特性，其中的特性一依赖于X，特性二依赖于Y,而且这两个特性是互斥的，用户不可能同时使用两个特性。比如A是一个持久层隔离工具包，它支持多种数据库，报错MySQL、Oracle,在构建这个工具包的时候，需要这两种数据库的驱动程序，但是在使用这个工具包的时候，只会依赖一种数据库。<br>在理想的情况下，是不应该使用可选依赖的。除非是某一个项目实现了多个互斥的特性，在面向对象设计中，有个单一职责性原则，意指一个类应该只要一项职责。</p>\n<h2 id=\"排除传递依赖\"><a href=\"#排除传递依赖\" class=\"headerlink\" title=\"排除传递依赖\"></a>排除传递依赖</h2><p>传递性依赖会给项目隐式引入很多依赖，大大方便了依赖的管理，但有时候会带来问题。例如存在以下依赖传递：<br><code>A--&gt;B--&gt;C</code><br>由于传递依赖C是SNAPSHOT版本，引入C会给项目A带来问题，实际上C存在release版的，引入release版的对C没有问题，这时就需要在引入依赖B的声明中排除C(SNAPSHOT),然后再显式引入C(release)。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.yangyuanming<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>project-A<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.yangyuanming<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>project-B<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--排除传递依赖--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.yangyuanming<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>project-C<span class=\"tag\">&lt;/<span class=\"name\">artfactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--显式引入所需的依赖C稳定版--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.yangyuanming<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>project-C<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上述代码中，项目A在引入依赖B时，使用<code>&lt;exclusion&gt;</code>排除了传递依赖C，然后再显式引入了另一个版本的依赖C。也可能存在其他原因不想引入某个传递性依赖，可以在<code>&lt;exclusions&gt;</code>中声明多个<code>&lt;exclusion&gt;</code>排除多个传递依赖。<br>声明<code>&lt;exclusion&gt;</code>时只需要指明<code>&lt;groupId&gt;</code>和<code>&lt;artifactId&gt;</code></p>\n<h2 id=\"归并依赖\"><a href=\"#归并依赖\" class=\"headerlink\" title=\"归并依赖\"></a>归并依赖</h2><p>来自A项目的不同模块，版本号是相同的。当B项目需要引入A项目的多个模块时，一般要保证引入A项目的多个模块的版本号是相同的，为了方便B项目管理引入的多个模块(A项目)，需要做归并处理。<br>举个例子，Spring Framework包含很多模块，例如core:2.5.6、bean:2.5.6、context:2.5.6和support:2.5.6,他们来着同一项目的不同模块，因此，所有这些依赖的版本都是相同的，而且，如果以后需要升级Spring Framework，这些依赖的版本会一起升级，这样我们就可以像Java中声明一个Constants一样，为依赖的项目的版本设置一个这样类似常量的东西。这样在升级Spring Framework的时候就需要修改一处，代码如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.up366.feishu<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artfactId</span>&gt;</span>feishu_v3<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>feishu_v3<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">springframework.version</span>&gt;</span>2.5.6<span class=\"tag\">&lt;/<span class=\"name\">springframework.version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifact</span>&gt;</span>spring-core<span class=\"tag\">&lt;/<span class=\"name\">artifact</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;springframework.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifact</span>&gt;</span>spring-beans<span class=\"tag\">&lt;/<span class=\"name\">artifact</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;springframework.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifact</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifact</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;springframework.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifact</span>&gt;</span>spring-context-support<span class=\"tag\">&lt;/<span class=\"name\">artifact</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;springframework.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面代码定义maven属性，定义了一个<code>&lt;springframework.version&gt;</code>，指定Spring Framework的版本号，然后在引入的依赖的<code>&lt;version&gt;</code>中引用该属性，达到统一管理版本号的作用。</p>\n<h2 id=\"优化依赖\"><a href=\"#优化依赖\" class=\"headerlink\" title=\"优化依赖\"></a>优化依赖</h2><p>查看已解析依赖可以使用命令，如下：</p>\n<ul>\n<li>列表形式查看命令：mvn dependency:list</li>\n<li>树状结构查看命令：mvn dependency:tree</li>\n<li>依赖分析命令：mvn dependency:analyze<br>mvn dependency:analyze由两部分组成，首先是Used updeclared dependencies,意指项目中使用到的，没有显式声明的依赖。<br>其次是Unused declared dependencies，意指项目中没有使用的，但是显是声明了的依赖。需要注意的是，对于这一类依赖，我们不应该简单的直接删除其声明，而是应该仔细分析，由于dependency:analyze只会分析编译主代码和测试代码需要用到的依赖，一些执行测试和运行时需要的依赖它就发现不了。建议不要乱删，当然有时候确实能通过该信息找到一些没用的依赖，但一定要小心测试。<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2>lofty，<a href=\"http://www.cnblogs.com/wangwei-beijing/p/6535073.html\" target=\"_blank\" rel=\"noopener\">Maven——坐标与依赖</a><br><a href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html\" target=\"_blank\" rel=\"noopener\">Introduction to the Dependency Mechanism</a></li>\n</ul>\n","site":{"data":{}},"abbrlink":"7e899530","excerpt":"<h2 id=\"依赖的配置\"><a href=\"#依赖的配置\" class=\"headerlink\" title=\"依赖的配置\"></a>依赖的配置</h2>","more":"<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project&gt;</span><br><span class=\"line\">    ......</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">systemPath</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">systemPath</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>...<span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">            ....</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    .........</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>groupId、artifactId、version：构成依赖的基本坐标</li>\n<li>type：依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。对应于项目坐标中的packaging</li>\n<li><p>scope：依赖范围，默认compile，作用是控制依赖和3种classpath的关系，另外还会影响依赖传递，<a href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html\" target=\"_blank\" rel=\"noopener\">maven官方介绍</a>。maven3种classpath:编译、运行、测试，各依赖范围与classpath的关系如下</p>\n<ul>\n<li>compile:编译依赖范围。如果没有指定，就会默认使用该依赖范围，使用此依赖范围的Maven依赖，对于编译、测试、运行三种classpath都有效。此外，这些依赖关系会传播到依赖项目。</li>\n<li>test:测试依赖范围。使用该范围的Maven依赖，只对于测试classpath有效，在编译主代码或者运行项目的使用时将无法使用此类依赖。典型的例子是JUnit,它只是在编译测试代码和运行测试的时候需要该依赖。这个范围是不可传递的。     </li>\n<li>provided：已提供依赖范围。使用此依赖范围的Maven依赖，对于编译和测试的classpath有效，但是在运行时无效。典型的例子是servlet-api，编译和测试项目的时候需要改依赖，但是在运行项目的时候，由于容器已经提供，就不需要Maven重复地引入一遍。该依赖不可传递。</li>\n<li>runtime:运行时依赖范围。使用此依赖范围的Maven依赖，对于测试和运行classpath有效，但是编译主代码时无效。典型的例子是JDBC驱动实现，项目主代码的编译只需要JDK提供的JDBC接口，只有在测试或者运行项目的时候才需要实现上述接口的JDBC驱动。</li>\n<li>import(Maven 2.0.9及以上)：导入依赖范围。仅支持依赖类型为pom的依赖，该pom配置了<dependencymanagement>。该依赖范围不会对三种classpath产生实际的影响,不参与限制依赖关系的传递性。。</dependencymanagement></li>\n<li><p>system:系统依赖范围，该范围与三种classpath的关系，和provided依赖范围完全一致。但是，使用system范围的依赖时必须通过systemPath元素显式的指定依赖文件的路径。由于此类依赖不是通过Maven仓库解析，而且往往与本机系统绑定，可能造成构建的不可移植，因此需要谨慎使用。systemPath元素可以引用环境变量，如：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.sql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jdbc-stdext<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>system<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">systemPath</span>&gt;</span>$&#123;java.home&#125;/lib/rt.jar<span class=\"tag\">&lt;/<span class=\"name\">systemPath</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>除import外，各依赖和3种classpath的关系如下</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>依赖范围</th>\n<th style=\"text-align:center\">编译</th>\n<th style=\"text-align:center\">测试</th>\n<th style=\"text-align:center\">运行</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>compile</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td>spring-core</td>\n</tr>\n<tr>\n<td>test</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\"></td>\n<td>junit</td>\n</tr>\n<tr>\n<td>provided</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\"></td>\n<td>servlet-api</td>\n</tr>\n<tr>\n<td>runtime</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td>JDBC驱动实现</td>\n</tr>\n<tr>\n<td>system</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\"></td>\n<td>本地的，Maven仓库之外的类库文件</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>systemPath：仅供scope为system时使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如${java.home}。</li>\n<li>optional：可选依赖，控制依赖的可传递性。如果为true，则其子项不会引入该依赖。如果子项要引用该依赖，需要显式引用。</li>\n<li>exclusions：用于排除传递性依赖。A引入依赖B，而B依赖C，由于依赖会传递，A也会引入依赖C。如果A不想引入依赖C，则可以在引入B依赖时设置exclusion，排除传递依赖C。</li>\n</ul>\n<h2 id=\"依赖传递\"><a href=\"#依赖传递\" class=\"headerlink\" title=\"依赖传递\"></a>依赖传递</h2><h3 id=\"例子解释\"><a href=\"#例子解释\" class=\"headerlink\" title=\"例子解释\"></a>例子解释</h3><p>maven项目中可能会存在依赖多层引用，例如项目A依赖B,B依赖n个其他项目，A不需要手动再引用B所依赖的n个项目。Maven会解析各个直接依赖的POM，将那些必要的间接依赖，以传递性依赖的形式引入到当前的项目当中。</p>\n<h3 id=\"传递性依赖和依赖范围\"><a href=\"#传递性依赖和依赖范围\" class=\"headerlink\" title=\"传递性依赖和依赖范围\"></a>传递性依赖和依赖范围</h3><p>每个作用域(除了import )以不同的方式影响传递依赖关系，如下表所示。如果将依赖项设置为左列中的范围，则该依赖项与顶部行中的范围的传递依赖项将导致主项目中的依赖项与交叉列出的范围。如果没有列出范围，这意味着将省略相关性。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>compile</th>\n<th>provided</th>\n<th>runtime</th>\n<th>test</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>compile</td>\n<td>compile</td>\n<td>-</td>\n<td>runtime</td>\n<td>-</td>\n</tr>\n<tr>\n<td>provided</td>\n<td>provided</td>\n<td>-</td>\n<td>provided</td>\n<td>-</td>\n</tr>\n<tr>\n<td>runtime</td>\n<td>runtime</td>\n<td>-</td>\n<td>runtime</td>\n<td>-</td>\n</tr>\n<tr>\n<td>test</td>\n<td>test</td>\n<td>-</td>\n<td>test</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"依赖冲突\"><a href=\"#依赖冲突\" class=\"headerlink\" title=\"依赖冲突\"></a>依赖冲突</h2><p>maven的传递性依赖方便了我们开发，一般我们只关心直接依赖而不会关心传递依赖。但当传递性依赖发生问题时，我们需要清楚传递性依赖的来源。传递性依赖是可能存在冲突的，比如某个依赖路径可能存在多个相同依赖，只是版本号不同，那么使用哪个传递依赖呢？maven遵循两个原则：</p>\n<h3 id=\"第一原则：短路优先\"><a href=\"#第一原则：短路优先\" class=\"headerlink\" title=\"第一原则：短路优先\"></a>第一原则：短路优先</h3><p>例如，项目A存在以下传递依赖<br><code>A--&gt;B--&gt;C--&gt;D(1.0)</code><br><code>A--&gt;C--&gt;D(2.0)</code><br>根据第一原则，项目A会使用D(2.0)</p>\n<h3 id=\"第二原则：声明优先\"><a href=\"#第二原则：声明优先\" class=\"headerlink\" title=\"第二原则：声明优先\"></a>第二原则：声明优先</h3><p>有时候存在路径长度相同的情况，这时遵循第二原则<br><code>A--&gt;B--&gt;D(1.0)</code><br><code>A--&gt;C--&gt;D(2.0)</code><br>假设<code>A--&gt;B--&gt;D(1.0)</code>先声明，那么项目A会使用D(1.0)</p>\n<h2 id=\"可选依赖\"><a href=\"#可选依赖\" class=\"headerlink\" title=\"可选依赖\"></a>可选依赖</h2><p>可选依赖是由<code>&lt;dependency&gt;</code>中的<code>&lt;optional&gt;</code>标签定义的，默认为false，如果声明为<code>&lt;optional&gt;true&lt;/optional&gt;</code>,那么子项目将不会隐式引入该依赖，如果需要引入，需要在子项目的pom.xml中显式引入。<br>为什么需要设置可选依赖？可能项目A实现了两个特性，其中的特性一依赖于X，特性二依赖于Y,而且这两个特性是互斥的，用户不可能同时使用两个特性。比如A是一个持久层隔离工具包，它支持多种数据库，报错MySQL、Oracle,在构建这个工具包的时候，需要这两种数据库的驱动程序，但是在使用这个工具包的时候，只会依赖一种数据库。<br>在理想的情况下，是不应该使用可选依赖的。除非是某一个项目实现了多个互斥的特性，在面向对象设计中，有个单一职责性原则，意指一个类应该只要一项职责。</p>\n<h2 id=\"排除传递依赖\"><a href=\"#排除传递依赖\" class=\"headerlink\" title=\"排除传递依赖\"></a>排除传递依赖</h2><p>传递性依赖会给项目隐式引入很多依赖，大大方便了依赖的管理，但有时候会带来问题。例如存在以下依赖传递：<br><code>A--&gt;B--&gt;C</code><br>由于传递依赖C是SNAPSHOT版本，引入C会给项目A带来问题，实际上C存在release版的，引入release版的对C没有问题，这时就需要在引入依赖B的声明中排除C(SNAPSHOT),然后再显式引入C(release)。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.yangyuanming<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>project-A<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.yangyuanming<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>project-B<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--排除传递依赖--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.yangyuanming<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>project-C<span class=\"tag\">&lt;/<span class=\"name\">artfactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--显式引入所需的依赖C稳定版--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.yangyuanming<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>project-C<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上述代码中，项目A在引入依赖B时，使用<code>&lt;exclusion&gt;</code>排除了传递依赖C，然后再显式引入了另一个版本的依赖C。也可能存在其他原因不想引入某个传递性依赖，可以在<code>&lt;exclusions&gt;</code>中声明多个<code>&lt;exclusion&gt;</code>排除多个传递依赖。<br>声明<code>&lt;exclusion&gt;</code>时只需要指明<code>&lt;groupId&gt;</code>和<code>&lt;artifactId&gt;</code></p>\n<h2 id=\"归并依赖\"><a href=\"#归并依赖\" class=\"headerlink\" title=\"归并依赖\"></a>归并依赖</h2><p>来自A项目的不同模块，版本号是相同的。当B项目需要引入A项目的多个模块时，一般要保证引入A项目的多个模块的版本号是相同的，为了方便B项目管理引入的多个模块(A项目)，需要做归并处理。<br>举个例子，Spring Framework包含很多模块，例如core:2.5.6、bean:2.5.6、context:2.5.6和support:2.5.6,他们来着同一项目的不同模块，因此，所有这些依赖的版本都是相同的，而且，如果以后需要升级Spring Framework，这些依赖的版本会一起升级，这样我们就可以像Java中声明一个Constants一样，为依赖的项目的版本设置一个这样类似常量的东西。这样在升级Spring Framework的时候就需要修改一处，代码如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.up366.feishu<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artfactId</span>&gt;</span>feishu_v3<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>feishu_v3<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">springframework.version</span>&gt;</span>2.5.6<span class=\"tag\">&lt;/<span class=\"name\">springframework.version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifact</span>&gt;</span>spring-core<span class=\"tag\">&lt;/<span class=\"name\">artifact</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;springframework.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifact</span>&gt;</span>spring-beans<span class=\"tag\">&lt;/<span class=\"name\">artifact</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;springframework.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifact</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifact</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;springframework.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifact</span>&gt;</span>spring-context-support<span class=\"tag\">&lt;/<span class=\"name\">artifact</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;springframework.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面代码定义maven属性，定义了一个<code>&lt;springframework.version&gt;</code>，指定Spring Framework的版本号，然后在引入的依赖的<code>&lt;version&gt;</code>中引用该属性，达到统一管理版本号的作用。</p>\n<h2 id=\"优化依赖\"><a href=\"#优化依赖\" class=\"headerlink\" title=\"优化依赖\"></a>优化依赖</h2><p>查看已解析依赖可以使用命令，如下：</p>\n<ul>\n<li>列表形式查看命令：mvn dependency:list</li>\n<li>树状结构查看命令：mvn dependency:tree</li>\n<li>依赖分析命令：mvn dependency:analyze<br>mvn dependency:analyze由两部分组成，首先是Used updeclared dependencies,意指项目中使用到的，没有显式声明的依赖。<br>其次是Unused declared dependencies，意指项目中没有使用的，但是显是声明了的依赖。需要注意的是，对于这一类依赖，我们不应该简单的直接删除其声明，而是应该仔细分析，由于dependency:analyze只会分析编译主代码和测试代码需要用到的依赖，一些执行测试和运行时需要的依赖它就发现不了。建议不要乱删，当然有时候确实能通过该信息找到一些没用的依赖，但一定要小心测试。<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2>lofty，<a href=\"http://www.cnblogs.com/wangwei-beijing/p/6535073.html\" target=\"_blank\" rel=\"noopener\">Maven——坐标与依赖</a><br><a href=\"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html\" target=\"_blank\" rel=\"noopener\">Introduction to the Dependency Mechanism</a></li>\n</ul>","popularPost_tmp_postPath":true,"popularPost_tmp_gaData":{"updated":"Sun Aug 12 2018 14:04:20 GMT+0800 (CST)","title":"maven(四):依赖","path":"post/7e899530.html","eyeCatchImage":null,"excerpt":"<h2 id=\"依赖的配置\"><a href=\"#依赖的配置\" class=\"headerlink\" title=\"依赖的配置\"></a>依赖的配置</h2>","date":"2018-08-12T06:00:00.000Z","pv":0,"totalPV":0,"categories":"工具学习 > maven","tags":["maven","maven依赖"],"internalLinks":[],"keywords":[],"keywordsLength":0}}],"PostAsset":[],"PostCategory":[{"post_id":"cjkqg7nqx0009dfzl1rya2ayo","category_id":"cjkqg7nqs0005dfzl7qgt57a6","_id":"cjkqg7nrc000vdfzlt7vdjo53"},{"post_id":"cjkqg7nqx0009dfzl1rya2ayo","category_id":"cjkqg7nr8000ldfzl3cbpdg9y","_id":"cjkqg7nre000xdfzl9jhgl9mw"},{"post_id":"cjkqg7nql0001dfzl7tvl6kp1","category_id":"cjkqg7nqs0005dfzl7qgt57a6","_id":"cjkqg7nre0010dfzlw4zehggg"},{"post_id":"cjkqg7nql0001dfzl7tvl6kp1","category_id":"cjkqg7nr8000ldfzl3cbpdg9y","_id":"cjkqg7nrf0013dfzlsc03o4ka"},{"post_id":"cjkqg7nr1000bdfzl4u9j44od","category_id":"cjkqg7nqs0005dfzl7qgt57a6","_id":"cjkqg7nrg0015dfzl32qzvzi5"},{"post_id":"cjkqg7nr1000bdfzl4u9j44od","category_id":"cjkqg7nr8000ldfzl3cbpdg9y","_id":"cjkqg7nrg0017dfzlcax370bp"},{"post_id":"cjkqg7nr4000fdfzlxk8trwpp","category_id":"cjkqg7nqs0005dfzl7qgt57a6","_id":"cjkqg7nrh001adfzlsltvb2he"},{"post_id":"cjkqg7nr4000fdfzlxk8trwpp","category_id":"cjkqg7nr8000ldfzl3cbpdg9y","_id":"cjkqg7nrh001cdfzl6wurfhxt"},{"post_id":"cjkqg7nqq0003dfzlmscwvn6e","category_id":"cjkqg7nqs0005dfzl7qgt57a6","_id":"cjkqg7nrh001edfzlzfss7yif"},{"post_id":"cjkqg7nqq0003dfzlmscwvn6e","category_id":"cjkqg7nr8000ldfzl3cbpdg9y","_id":"cjkqg7nri001fdfzl26n3s04l"},{"post_id":"cjkqg7nqu0007dfzl78thabxz","category_id":"cjkqg7nqs0005dfzl7qgt57a6","_id":"cjkqg7nri001hdfzlhhwtaepb"},{"post_id":"cjkqg7nqu0007dfzl78thabxz","category_id":"cjkqg7nr8000ldfzl3cbpdg9y","_id":"cjkqg7nri001jdfzlur8obqtp"}],"PostTag":[{"post_id":"cjkqg7nql0001dfzl7tvl6kp1","tag_id":"cjkqg7nqu0006dfzljg9soxpv","_id":"cjkqg7nra000pdfzl7eodf0tt"},{"post_id":"cjkqg7nql0001dfzl7tvl6kp1","tag_id":"cjkqg7nr2000ddfzlrjlktj1s","_id":"cjkqg7nrb000rdfzlg86drlz0"},{"post_id":"cjkqg7nql0001dfzl7tvl6kp1","tag_id":"cjkqg7nr7000jdfzltbpxktie","_id":"cjkqg7nrc000tdfzlibwwefk8"},{"post_id":"cjkqg7nqq0003dfzlmscwvn6e","tag_id":"cjkqg7nqu0006dfzljg9soxpv","_id":"cjkqg7nre000ydfzl4zn9n6mg"},{"post_id":"cjkqg7nqq0003dfzlmscwvn6e","tag_id":"cjkqg7nrb000sdfzllavuc1e9","_id":"cjkqg7nrf0011dfzl2n6vgijb"},{"post_id":"cjkqg7nqu0007dfzl78thabxz","tag_id":"cjkqg7nqu0006dfzljg9soxpv","_id":"cjkqg7nrg0018dfzler6x6i1s"},{"post_id":"cjkqg7nqu0007dfzl78thabxz","tag_id":"cjkqg7nrf0012dfzlta0vueua","_id":"cjkqg7nrh001bdfzlvpfuj5u3"},{"post_id":"cjkqg7nqx0009dfzl1rya2ayo","tag_id":"cjkqg7nqu0006dfzljg9soxpv","_id":"cjkqg7nri001idfzlu7knu128"},{"post_id":"cjkqg7nqx0009dfzl1rya2ayo","tag_id":"cjkqg7nrg0016dfzlb4spqbly","_id":"cjkqg7nri001kdfzl7zenxa1f"},{"post_id":"cjkqg7nqx0009dfzl1rya2ayo","tag_id":"cjkqg7nrh001ddfzlaufponnh","_id":"cjkqg7nri001mdfzlzq1vedte"},{"post_id":"cjkqg7nr1000bdfzl4u9j44od","tag_id":"cjkqg7nqu0006dfzljg9soxpv","_id":"cjkqg7nrj001ndfzljuh0ap4v"},{"post_id":"cjkqg7nr1000bdfzl4u9j44od","tag_id":"cjkqg7nri001gdfzldo6nchng","_id":"cjkqg7nrj001odfzldmmvt7e4"},{"post_id":"cjkqg7nr4000fdfzlxk8trwpp","tag_id":"cjkqg7nqu0006dfzljg9soxpv","_id":"cjkqg7nrj001pdfzlnx09ygug"},{"post_id":"cjkqg7nr4000fdfzlxk8trwpp","tag_id":"cjkqg7nri001ldfzlwz11mmam","_id":"cjkqg7nrj001qdfzlmneosr5t"}],"Tag":[{"name":"maven","_id":"cjkqg7nqu0006dfzljg9soxpv"},{"name":"maven构建命令","_id":"cjkqg7nr2000ddfzlrjlktj1s"},{"name":"maven库","_id":"cjkqg7nr7000jdfzltbpxktie"},{"name":"maven聚合和继承","_id":"cjkqg7nrb000sdfzllavuc1e9"},{"name":"maven多模块项目","_id":"cjkqg7nrf0012dfzlta0vueua"},{"name":"maven生命周期","_id":"cjkqg7nrg0016dfzlb4spqbly"},{"name":"maven插件","_id":"cjkqg7nrh001ddfzlaufponnh"},{"name":"pom.xml","_id":"cjkqg7nri001gdfzldo6nchng"},{"name":"maven依赖","_id":"cjkqg7nri001ldfzlwz11mmam"}]}}